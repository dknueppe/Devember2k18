ARM GAS  /tmp/cckWcrpf.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_adc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_ADCEx_Calibration_Start
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_ADCEx_Calibration_Start:
  26              	.LVL0:
  27              	.LFB137:
  28              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @file    stm32h7xx_hal_adc_ex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          + Operation functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of injected
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *                group, using 2 possible modes: polling, interruption.
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *             ++ Calibration
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *               +++ ADC automatic self-calibration
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *               +++ Calibration factors get or set
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *             ++ Multimode feature when available
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           + Control functions
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *             ++ Channels configuration on injected group
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           + State functions
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *             ++ Injected group queues management
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          "stm32h7xx_hal_adc.c".
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****    @verbatim
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ==============================================================================
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                     ##### ADC specific features #####
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ==============================================================================
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   [..]
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       available in file of generic functions "stm32h7xx_hal_adc.c".
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   [..]
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     @endverbatim
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @attention
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * are permitted provided that the following conditions are met:
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *      and/or other materials provided with the distribution.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *      may be used to endorse or promote products derived from this software
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *      without specific prior written permission.
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #include "stm32h7xx_hal.h"
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((uint32_t)(ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                      ADC_JSQR_JSQ1 | ADC_JSQR_JSQ2 |\
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                      ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 )) /*!< ADC_JSQR fields of param
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                                              once the ADC is enable
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_CFGR2_INJ_FIELDS  ((uint32_t)(ADC_CFGR2_JOVSE | ADC_CFGR2_OSR  |\
ARM GAS  /tmp/cckWcrpf.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           ADC_CFGR2_OVSS )) /*!< ADC_CFGR2 injected oversampling pa
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                                   when no conversion is on-going (n
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: low clock frequency,         */
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* maximum prescalers.                                                        */
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Ex of profile low frequency : f_ADC at 0.35 MHz (minimum value             */
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* according to Data sheet), calibration_time MAX = 112 / f_ADC               */
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /*           112 / 350,000 = 0.32 ms                                           */
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* At maximum CPU speed (200 MHz), this means                                  */
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /*    0.8 ms * 200 MHz = 64000 CPU cycles                                      */
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         ((uint32_t) 64000)   /*!< ADC calibration time-out value */
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @}
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @verbatim
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****              ##### IO operation functions #####
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @endverbatim
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 4


 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc   ADC handle
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  CalibrationMode: Selection of Calibration Mode
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg ADC_CALIB_OFFSET: ADC calibration in offset mode
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg ADC_CALIB_OFFSET_LINEARITY: ADC calibration in Linear offset mode
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc, uint32_t CalibrationMode, ui
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
  29              		.loc 1 161 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 161 1 is_stmt 0 view .LVU1
  34 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 3, -24
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
  43              		.loc 1 162 3 is_stmt 1 view .LVU2
  44              	.LVL1:
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t WaitLoopIndex = 0;
  45              		.loc 1 163 3 view .LVU3
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  46              		.loc 1 166 3 view .LVU4
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
  47              		.loc 1 167 3 view .LVU5
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  48              		.loc 1 170 3 view .LVU6
  49              		.loc 1 170 3 view .LVU7
  50 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
  51 0006 012B     		cmp	r3, #1
  52 0008 45D0     		beq	.L7
  53 000a 1646     		mov	r6, r2
  54 000c 0D46     		mov	r5, r1
  55 000e 0446     		mov	r4, r0
  56              		.loc 1 170 3 discriminator 2 view .LVU8
  57 0010 0123     		movs	r3, #1
  58 0012 80F85030 		strb	r3, [r0, #80]
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 5


 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_Disable(hadc);
  59              		.loc 1 175 3 discriminator 2 view .LVU9
  60              		.loc 1 175 21 is_stmt 0 discriminator 2 view .LVU10
  61 0016 FFF7FEFF 		bl	ADC_Disable
  62              	.LVL2:
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
  63              		.loc 1 178 3 is_stmt 1 discriminator 2 view .LVU11
  64              		.loc 1 178 6 is_stmt 0 discriminator 2 view .LVU12
  65 001a 0746     		mov	r7, r0
  66 001c 0028     		cmp	r0, #0
  67 001e 31D1     		bne	.L3
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Change ADC state */
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY and HAL_ADC_STATE_INJ_BUSY bits, set HAL_ADC_STATE_BUSY_INTERNA
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_REG_BUSY|HAL_ADC_STATE_INJ_BUSY), HAL_ADC_STATE_B
  68              		.loc 1 182 5 is_stmt 1 view .LVU13
  69 0020 626D     		ldr	r2, [r4, #84]
  70 0022 1E4B     		ldr	r3, .L10
  71 0024 1340     		ands	r3, r3, r2
  72 0026 43F00203 		orr	r3, r3, #2
  73 002a 6365     		str	r3, [r4, #84]
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Select calibration mode single ended or differential ended */
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_ADCALDIF, SingleDiff);
  74              		.loc 1 185 5 view .LVU14
  75 002c 2368     		ldr	r3, [r4]
  76 002e 9A68     		ldr	r2, [r3, #8]
  77 0030 22F08042 		bic	r2, r2, #1073741824
  78 0034 1643     		orrs	r6, r6, r2
  79              	.LVL3:
  80              		.loc 1 185 5 is_stmt 0 view .LVU15
  81 0036 9E60     		str	r6, [r3, #8]
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Select the Linear calibration if enabled */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_ADCALLIN, CalibrationMode);
  82              		.loc 1 188 5 is_stmt 1 view .LVU16
  83 0038 2368     		ldr	r3, [r4]
  84 003a 9968     		ldr	r1, [r3, #8]
  85 003c 21F48031 		bic	r1, r1, #65536
  86 0040 0D43     		orrs	r5, r5, r1
  87              	.LVL4:
  88              		.loc 1 188 5 is_stmt 0 view .LVU17
  89 0042 9D60     		str	r5, [r3, #8]
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start ADC calibration */
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADCAL);
  90              		.loc 1 191 5 is_stmt 1 view .LVU18
  91 0044 2268     		ldr	r2, [r4]
  92 0046 9368     		ldr	r3, [r2, #8]
  93 0048 43F00043 		orr	r3, r3, #-2147483648
  94 004c 9360     		str	r3, [r2, #8]
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 6


 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADCAL))
  95              		.loc 1 195 5 view .LVU19
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  96              		.loc 1 163 12 is_stmt 0 view .LVU20
  97 004e 0023     		movs	r3, #0
  98              	.LVL5:
  99              	.L4:
 100              		.loc 1 195 11 view .LVU21
 101 0050 2268     		ldr	r2, [r4]
 102 0052 9268     		ldr	r2, [r2, #8]
 103              		.loc 1 195 10 view .LVU22
 104 0054 002A     		cmp	r2, #0
 105 0056 0EDA     		bge	.L9
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       WaitLoopIndex++;
 106              		.loc 1 197 7 is_stmt 1 view .LVU23
 107              		.loc 1 197 20 is_stmt 0 view .LVU24
 108 0058 0133     		adds	r3, r3, #1
 109              	.LVL6:
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (WaitLoopIndex >= ADC_CALIBRATION_TIMEOUT)
 110              		.loc 1 198 7 is_stmt 1 view .LVU25
 111              		.loc 1 198 10 is_stmt 0 view .LVU26
 112 005a B3F57A4F 		cmp	r3, #64000
 113 005e F7D3     		bcc	.L4
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_ERROR_INTERNAL bit */
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_ERROR_INTERNAL);
 114              		.loc 1 202 9 is_stmt 1 view .LVU27
 115 0060 636D     		ldr	r3, [r4, #84]
 116              	.LVL7:
 117              		.loc 1 202 9 is_stmt 0 view .LVU28
 118 0062 23F01203 		bic	r3, r3, #18
 119 0066 43F01003 		orr	r3, r3, #16
 120 006a 6365     		str	r3, [r4, #84]
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 121              		.loc 1 205 9 is_stmt 1 view .LVU29
 122              		.loc 1 205 9 view .LVU30
 123 006c 0023     		movs	r3, #0
 124 006e 84F85030 		strb	r3, [r4, #80]
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
 125              		.loc 1 207 9 view .LVU31
 126              		.loc 1 207 16 is_stmt 0 view .LVU32
 127 0072 0127     		movs	r7, #1
 128 0074 0DE0     		b	.L2
 129              	.LVL8:
 130              	.L9:
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
ARM GAS  /tmp/cckWcrpf.s 			page 7


 131              		.loc 1 212 5 is_stmt 1 view .LVU33
 132 0076 636D     		ldr	r3, [r4, #84]
 133              	.LVL9:
 134              		.loc 1 212 5 is_stmt 0 view .LVU34
 135 0078 23F00303 		bic	r3, r3, #3
 136 007c 43F00103 		orr	r3, r3, #1
 137 0080 6365     		str	r3, [r4, #84]
 138 0082 03E0     		b	.L6
 139              	.LVL10:
 140              	.L3:
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 141              		.loc 1 216 5 is_stmt 1 view .LVU35
 142 0084 636D     		ldr	r3, [r4, #84]
 143 0086 43F01003 		orr	r3, r3, #16
 144 008a 6365     		str	r3, [r4, #84]
 145              	.LVL11:
 146              	.L6:
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 147              		.loc 1 223 3 view .LVU36
 148              		.loc 1 223 3 view .LVU37
 149 008c 0023     		movs	r3, #0
 150 008e 84F85030 		strb	r3, [r4, #80]
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 151              		.loc 1 226 3 view .LVU38
 152              	.LVL12:
 153              	.L2:
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 154              		.loc 1 227 1 is_stmt 0 view .LVU39
 155 0092 3846     		mov	r0, r7
 156 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 157              	.LVL13:
 158              	.L7:
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 159              		.loc 1 170 3 view .LVU40
 160 0096 0227     		movs	r7, #2
 161 0098 FBE7     		b	.L2
 162              	.L11:
 163 009a 00BF     		.align	2
 164              	.L10:
 165 009c FDEEFFFF 		.word	-4355
 166              		.cfi_endproc
 167              	.LFE137:
 169              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_ADCEx_Calibration_GetValue
 172              		.syntax unified
ARM GAS  /tmp/cckWcrpf.s 			page 8


 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv5-d16
 177              	HAL_ADCEx_Calibration_GetValue:
 178              	.LVL14:
 179              	.LFB138:
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result.
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle.
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 180              		.loc 1 239 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 185              		.loc 1 241 3 view .LVU42
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 186              		.loc 1 242 3 view .LVU43
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 187              		.loc 1 245 3 view .LVU44
 188              		.loc 1 245 6 is_stmt 0 view .LVU45
 189 0000 B1F1804F 		cmp	r1, #1073741824
 190 0004 05D0     		beq	.L15
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return ADC_CALFACT_DIFF_GET(hadc->Instance->CALFACT);
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return ((hadc->Instance->CALFACT) & ADC_CALFACT_CALFACT_S);
 191              		.loc 1 251 5 is_stmt 1 view .LVU46
 192              		.loc 1 251 18 is_stmt 0 view .LVU47
 193 0006 0368     		ldr	r3, [r0]
 194              		.loc 1 251 28 view .LVU48
 195 0008 D3F8C400 		ldr	r0, [r3, #196]
 196              	.LVL15:
 197              		.loc 1 251 39 view .LVU49
 198 000c C0F30A00 		ubfx	r0, r0, #0, #11
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 199              		.loc 1 253 1 view .LVU50
 200 0010 7047     		bx	lr
 201              	.LVL16:
 202              	.L15:
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 203              		.loc 1 247 5 is_stmt 1 view .LVU51
ARM GAS  /tmp/cckWcrpf.s 			page 9


 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 204              		.loc 1 247 12 is_stmt 0 view .LVU52
 205 0012 0368     		ldr	r3, [r0]
 206 0014 D3F8C400 		ldr	r0, [r3, #196]
 207              	.LVL17:
 208              	.LBB46:
 209              	.LBI46:
 210              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cckWcrpf.s 			page 10


  50:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cckWcrpf.s 			page 11


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
ARM GAS  /tmp/cckWcrpf.s 			page 12


 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
ARM GAS  /tmp/cckWcrpf.s 			page 13


 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cckWcrpf.s 			page 14


 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cckWcrpf.s 			page 15


 335:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cckWcrpf.s 			page 16


 392:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cckWcrpf.s 			page 17


 449:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cckWcrpf.s 			page 18


 506:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cckWcrpf.s 			page 19


 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cckWcrpf.s 			page 20


 620:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cckWcrpf.s 			page 21


 677:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cckWcrpf.s 			page 22


 734:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 776:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /tmp/cckWcrpf.s 			page 23


 791:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 792:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 813:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 822:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 841:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /tmp/cckWcrpf.s 			page 24


 848:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 211              		.loc 2 850 57 is_stmt 1 view .LVU53
 212              	.LBB47:
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 852:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 213              		.loc 2 852 3 view .LVU54
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 214              		.loc 2 857 4 view .LVU55
 215 0018 034B     		ldr	r3, .L16
 216              		.syntax unified
 217              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 218 001a 93FAA3F3 		rbit r3, r3
 219              	@ 0 "" 2
 220              	.LVL18:
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 859:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 221              		.loc 2 870 3 view .LVU56
 222              		.loc 2 870 3 is_stmt 0 view .LVU57
 223              		.thumb
 224              		.syntax unified
 225              	.LBE47:
 226              	.LBE46:
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 227              		.loc 1 247 12 view .LVU58
 228 001e B3FA83F3 		clz	r3, r3
 229 0022 D840     		lsrs	r0, r0, r3
 230 0024 7047     		bx	lr
 231              	.L17:
 232 0026 00BF     		.align	2
 233              	.L16:
 234 0028 0000FF07 		.word	134152192
 235              		.cfi_endproc
 236              	.LFE138:
 238              		.section	.text.HAL_ADCEx_LinearCalibration_GetValue,"ax",%progbits
 239              		.align	1
 240              		.global	HAL_ADCEx_LinearCalibration_GetValue
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv5-d16
ARM GAS  /tmp/cckWcrpf.s 			page 25


 246              	HAL_ADCEx_LinearCalibration_GetValue:
 247              	.LVL19:
 248              	.LFB139:
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  LinearCalib_Buffer: Linear calibration factor
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_GetValue(ADC_HandleTypeDef* hadc, uint32_t* LinearCal
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 249              		.loc 1 262 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		.loc 1 262 1 is_stmt 0 view .LVU60
 254 0000 70B5     		push	{r4, r5, r6, lr}
 255              	.LCFI1:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 6, -8
 260              		.cfi_offset 14, -4
 261 0002 0446     		mov	r4, r0
 262 0004 0E46     		mov	r6, r1
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt = 0;
 263              		.loc 1 263 3 is_stmt 1 view .LVU61
 264              	.LVL20:
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t WaitLoopIndex = 0;
 265              		.loc 1 264 3 view .LVU62
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 266              		.loc 1 267 3 view .LVU63
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Enable the ADC ADEN = 1 to be able to read the linear calibration factor */
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Enable(hadc);
 267              		.loc 1 270 3 view .LVU64
 268 0006 FFF7FEFF 		bl	ADC_Enable
 269              	.LVL21:
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   for(cnt = 0; cnt < 6; cnt++)
 270              		.loc 1 272 3 view .LVU65
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 271              		.loc 1 264 12 is_stmt 0 view .LVU66
 272 000a 0023     		movs	r3, #0
 273              		.loc 1 272 11 view .LVU67
 274 000c 1D46     		mov	r5, r3
 275              	.LVL22:
 276              	.L19:
 277              		.loc 1 272 3 discriminator 1 view .LVU68
 278 000e 052D     		cmp	r5, #5
 279 0010 17D8     		bhi	.L26
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear LINCALRDYWx */
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_LINCALRDYW6 >> cnt);
ARM GAS  /tmp/cckWcrpf.s 			page 26


 280              		.loc 1 275 5 is_stmt 1 view .LVU69
 281 0012 2168     		ldr	r1, [r4]
 282 0014 8A68     		ldr	r2, [r1, #8]
 283 0016 4FF00060 		mov	r0, #134217728
 284 001a E840     		lsrs	r0, r0, r5
 285 001c 22EA0002 		bic	r2, r2, r0
 286 0020 8A60     		str	r2, [r1, #8]
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait untill LINCALRDYWx is reset */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_LINCALRDYW6 >> cnt))
 287              		.loc 1 277 5 view .LVU70
 288              	.L20:
 289              		.loc 1 277 11 is_stmt 0 view .LVU71
 290 0022 2268     		ldr	r2, [r4]
 291 0024 9168     		ldr	r1, [r2, #8]
 292              		.loc 1 277 10 view .LVU72
 293 0026 0842     		tst	r0, r1
 294 0028 05D0     		beq	.L27
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       WaitLoopIndex++;
 295              		.loc 1 279 7 is_stmt 1 view .LVU73
 296              		.loc 1 279 20 is_stmt 0 view .LVU74
 297 002a 0133     		adds	r3, r3, #1
 298              	.LVL23:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (WaitLoopIndex >= ADC_CALIBRATION_TIMEOUT)
 299              		.loc 1 280 7 is_stmt 1 view .LVU75
 300              		.loc 1 280 10 is_stmt 0 view .LVU76
 301 002c B3F57A4F 		cmp	r3, #64000
 302 0030 F7D3     		bcc	.L20
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
 303              		.loc 1 282 16 view .LVU77
 304 0032 0120     		movs	r0, #1
 305              	.L21:
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Read the ADCx_CALFACT2[29:0] containing the LINCALWx*/
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     *(LinearCalib_Buffer + cnt) = hadc->Instance->CALFACT2;
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 306              		.loc 1 290 1 view .LVU78
 307 0034 70BD     		pop	{r4, r5, r6, pc}
 308              	.LVL24:
 309              	.L27:
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 310              		.loc 1 287 5 is_stmt 1 discriminator 2 view .LVU79
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 311              		.loc 1 287 49 is_stmt 0 discriminator 2 view .LVU80
 312 0036 D2F8C820 		ldr	r2, [r2, #200]
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 313              		.loc 1 287 33 discriminator 2 view .LVU81
 314 003a 46F82520 		str	r2, [r6, r5, lsl #2]
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 315              		.loc 1 272 28 discriminator 2 view .LVU82
 316 003e 0135     		adds	r5, r5, #1
 317              	.LVL25:
ARM GAS  /tmp/cckWcrpf.s 			page 27


 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 318              		.loc 1 272 28 discriminator 2 view .LVU83
 319 0040 E5E7     		b	.L19
 320              	.L26:
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 321              		.loc 1 289 10 view .LVU84
 322 0042 0020     		movs	r0, #0
 323 0044 F6E7     		b	.L21
 324              		.cfi_endproc
 325              	.LFE139:
 327              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_ADCEx_Calibration_SetValue
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv5-d16
 335              	HAL_ADCEx_Calibration_SetValue:
 336              	.LVL26:
 337              	.LFB140:
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result, ADC must be enable
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle.
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input.
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  CalibrationFactor: Calibration factor (coded on 7 bits maximum)
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff, uint
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 338              		.loc 1 303 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              		.loc 1 303 1 is_stmt 0 view .LVU86
 344 0000 0346     		mov	r3, r0
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 345              		.loc 1 304 3 is_stmt 1 view .LVU87
 346              	.LVL27:
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 347              		.loc 1 307 3 view .LVU88
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 348              		.loc 1 308 3 view .LVU89
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 349              		.loc 1 309 3 view .LVU90
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 350              		.loc 1 312 3 view .LVU91
 351              		.loc 1 312 3 view .LVU92
 352 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
ARM GAS  /tmp/cckWcrpf.s 			page 28


 353              	.LVL28:
 354              		.loc 1 312 3 is_stmt 0 view .LVU93
 355 0006 0128     		cmp	r0, #1
 356 0008 3DD0     		beq	.L33
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 357              		.loc 1 303 1 discriminator 2 view .LVU94
 358 000a 30B4     		push	{r4, r5}
 359              	.LCFI2:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 4, -8
 362              		.cfi_offset 5, -4
 363              		.loc 1 312 3 is_stmt 1 discriminator 2 view .LVU95
 364 000c 0120     		movs	r0, #1
 365 000e 83F85000 		strb	r0, [r3, #80]
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ( (ADC_IS_ENABLE(hadc) != RESET)                            &&
 366              		.loc 1 316 3 discriminator 2 view .LVU96
 367              		.loc 1 316 9 is_stmt 0 discriminator 2 view .LVU97
 368 0012 1C68     		ldr	r4, [r3]
 369 0014 A068     		ldr	r0, [r4, #8]
 370 0016 00F00300 		and	r0, r0, #3
 371 001a 0128     		cmp	r0, #1
 372 001c 09D0     		beq	.L38
 373              	.L30:
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)  )
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D, ADC_CALFACT_DIFF_SET(CalibrationFa
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_S, CalibrationFactor);
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 374              		.loc 1 332 5 is_stmt 1 view .LVU98
 375 001e 5A6D     		ldr	r2, [r3, #84]
 376              	.LVL29:
 377              		.loc 1 332 5 is_stmt 0 view .LVU99
 378 0020 42F02002 		orr	r2, r2, #32
 379 0024 5A65     		str	r2, [r3, #84]
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = HAL_ERROR;
 380              		.loc 1 335 5 is_stmt 1 view .LVU100
 381              	.LVL30:
 382              		.loc 1 335 21 is_stmt 0 view .LVU101
 383 0026 0120     		movs	r0, #1
 384              	.LVL31:
 385              	.L32:
ARM GAS  /tmp/cckWcrpf.s 			page 29


 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 386              		.loc 1 339 3 is_stmt 1 view .LVU102
 387              		.loc 1 339 3 view .LVU103
 388 0028 0022     		movs	r2, #0
 389 002a 83F85020 		strb	r2, [r3, #80]
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 390              		.loc 1 342 3 view .LVU104
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 391              		.loc 1 343 1 is_stmt 0 view .LVU105
 392 002e 30BC     		pop	{r4, r5}
 393              	.LCFI3:
 394              		.cfi_remember_state
 395              		.cfi_restore 5
 396              		.cfi_restore 4
 397              		.cfi_def_cfa_offset 0
 398 0030 7047     		bx	lr
 399              	.LVL32:
 400              	.L38:
 401              	.LCFI4:
 402              		.cfi_restore_state
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)  )
 403              		.loc 1 316 9 discriminator 1 view .LVU106
 404 0032 2068     		ldr	r0, [r4]
 405 0034 10F0010F 		tst	r0, #1
 406 0038 F1D0     		beq	.L30
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 407              		.loc 1 317 9 view .LVU107
 408 003a A068     		ldr	r0, [r4, #8]
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)  )
 409              		.loc 1 316 66 view .LVU108
 410 003c 10F00C0F 		tst	r0, #12
 411 0040 EDD1     		bne	.L30
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 412              		.loc 1 320 5 is_stmt 1 view .LVU109
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 413              		.loc 1 320 8 is_stmt 0 view .LVU110
 414 0042 B1F1804F 		cmp	r1, #1073741824
 415 0046 08D0     		beq	.L39
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 416              		.loc 1 326 7 is_stmt 1 view .LVU111
 417 0048 D4F8C400 		ldr	r0, [r4, #196]
 418 004c 0F49     		ldr	r1, .L40
 419              	.LVL33:
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 420              		.loc 1 326 7 is_stmt 0 view .LVU112
 421 004e 0140     		ands	r1, r1, r0
 422 0050 0A43     		orrs	r2, r2, r1
 423              	.LVL34:
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 424              		.loc 1 326 7 view .LVU113
 425 0052 C4F8C420 		str	r2, [r4, #196]
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 30


 426              		.loc 1 304 21 view .LVU114
 427 0056 0020     		movs	r0, #0
 428 0058 E6E7     		b	.L32
 429              	.LVL35:
 430              	.L39:
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 431              		.loc 1 322 7 is_stmt 1 view .LVU115
 432 005a D4F8C410 		ldr	r1, [r4, #196]
 433              	.LVL36:
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 434              		.loc 1 322 7 is_stmt 0 view .LVU116
 435 005e 0C4D     		ldr	r5, .L40+4
 436 0060 0D40     		ands	r5, r5, r1
 437              	.LVL37:
 438              	.LBB48:
 439              	.LBI48:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440              		.loc 2 850 57 is_stmt 1 view .LVU117
 441              	.LBB49:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 442              		.loc 2 852 3 view .LVU118
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 443              		.loc 2 857 4 view .LVU119
 444 0062 0C48     		ldr	r0, .L40+8
 445              		.syntax unified
 446              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 447 0064 90FAA0F1 		rbit r1, r0
 448              	@ 0 "" 2
 449              	.LVL38:
 450              		.loc 2 870 3 view .LVU120
 451              		.loc 2 870 3 is_stmt 0 view .LVU121
 452              		.thumb
 453              		.syntax unified
 454              	.LBE49:
 455              	.LBE48:
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 456              		.loc 1 322 7 view .LVU122
 457 0068 B1FA81F1 		clz	r1, r1
 458 006c 20FA01F1 		lsr	r1, r0, r1
 459 0070 0A40     		ands	r2, r2, r1
 460              	.LVL39:
 461              	.LBB50:
 462              	.LBI50:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463              		.loc 2 850 57 is_stmt 1 view .LVU123
 464              	.LBB51:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465              		.loc 2 852 3 view .LVU124
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 466              		.loc 2 857 4 view .LVU125
 467              		.syntax unified
 468              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 469 0072 90FAA0F0 		rbit r0, r0
 470              	@ 0 "" 2
 471              	.LVL40:
 472              		.loc 2 870 3 view .LVU126
 473              		.loc 2 870 3 is_stmt 0 view .LVU127
ARM GAS  /tmp/cckWcrpf.s 			page 31


 474              		.thumb
 475              		.syntax unified
 476              	.LBE51:
 477              	.LBE50:
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 478              		.loc 1 322 7 view .LVU128
 479 0076 B0FA80F1 		clz	r1, r0
 480 007a 8A40     		lsls	r2, r2, r1
 481 007c 2A43     		orrs	r2, r2, r5
 482 007e C4F8C420 		str	r2, [r4, #196]
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 483              		.loc 1 304 21 view .LVU129
 484 0082 0020     		movs	r0, #0
 485 0084 D0E7     		b	.L32
 486              	.LVL41:
 487              	.L33:
 488              	.LCFI5:
 489              		.cfi_def_cfa_offset 0
 490              		.cfi_restore 4
 491              		.cfi_restore 5
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 492              		.loc 1 312 3 view .LVU130
 493 0086 0220     		movs	r0, #2
 494              		.loc 1 343 1 view .LVU131
 495 0088 7047     		bx	lr
 496              	.L41:
 497 008a 00BF     		.align	2
 498              	.L40:
 499 008c 00F8FFFF 		.word	-2048
 500 0090 FFFF00F8 		.word	-134152193
 501 0094 0000FF07 		.word	134152192
 502              		.cfi_endproc
 503              	.LFE140:
 505              		.section	.text.HAL_ADCEx_LinearCalibration_SetValue,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_ADCEx_LinearCalibration_SetValue
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv5-d16
 513              	HAL_ADCEx_LinearCalibration_SetValue:
 514              	.LVL42:
 515              	.LFB141:
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Set the linear calibration factor
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  LinearCalib_Buffer: Linear calibration factor
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t* LinearCal
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 516              		.loc 1 352 1 is_stmt 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
ARM GAS  /tmp/cckWcrpf.s 			page 32


 521              		.loc 1 352 1 is_stmt 0 view .LVU133
 522 0000 30B4     		push	{r4, r5}
 523              	.LCFI6:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 5, -4
 527 0002 82B0     		sub	sp, sp, #8
 528              	.LCFI7:
 529              		.cfi_def_cfa_offset 16
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt = 0;
 530              		.loc 1 353 3 is_stmt 1 view .LVU134
 531              	.LVL43:
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 532              		.loc 1 354 3 view .LVU135
 533              		.loc 1 354 17 is_stmt 0 view .LVU136
 534 0004 0023     		movs	r3, #0
 535 0006 0193     		str	r3, [sp, #4]
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 536              		.loc 1 357 3 is_stmt 1 view .LVU137
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  Exit deep power down mode if still in that state                        */
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_DEEPPWD))
 537              		.loc 1 361 3 view .LVU138
 538              		.loc 1 361 7 is_stmt 0 view .LVU139
 539 0008 0368     		ldr	r3, [r0]
 540 000a 9A68     		ldr	r2, [r3, #8]
 541              		.loc 1 361 6 view .LVU140
 542 000c 12F0005F 		tst	r2, #536870912
 543 0010 03D0     		beq	.L43
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Exit deep power down mode */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 544              		.loc 1 364 5 is_stmt 1 view .LVU141
 545 0012 9A68     		ldr	r2, [r3, #8]
 546 0014 22F00052 		bic	r2, r2, #536870912
 547 0018 9A60     		str	r2, [r3, #8]
 548              	.L43:
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* System was in deep power down mode, calibration must
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        be relaunched or a previously saved calibration factor
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        re-applied once the ADC voltage regulator is enabled */
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if  (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 549              		.loc 1 372 3 view .LVU142
 550              		.loc 1 372 8 is_stmt 0 view .LVU143
 551 001a 0368     		ldr	r3, [r0]
 552 001c 9A68     		ldr	r2, [r3, #8]
 553              		.loc 1 372 7 view .LVU144
 554 001e 12F0805F 		tst	r2, #268435456
 555 0022 14D1     		bne	.L44
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable ADC internal voltage regulator                                  */
ARM GAS  /tmp/cckWcrpf.s 			page 33


 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN);
 556              		.loc 1 375 5 is_stmt 1 view .LVU145
 557 0024 9A68     		ldr	r2, [r3, #8]
 558 0026 42F08052 		orr	r2, r2, #268435456
 559 002a 9A60     		str	r2, [r3, #8]
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Delay for ADC stabilization time                                       */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait loop initialization and execution                                 */
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: Variable divided by 2 to compensate partially                    */
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       CPU processing cycles.                                           */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / (1000000 * 2)));
 560              		.loc 1 380 5 view .LVU146
 561              		.loc 1 380 61 is_stmt 0 view .LVU147
 562 002c 204B     		ldr	r3, .L58
 563 002e 1B68     		ldr	r3, [r3]
 564 0030 204A     		ldr	r2, .L58+4
 565 0032 A2FB0323 		umull	r2, r3, r2, r3
 566 0036 DB0C     		lsrs	r3, r3, #19
 567              		.loc 1 380 42 view .LVU148
 568 0038 03EB8303 		add	r3, r3, r3, lsl #2
 569 003c 5A00     		lsls	r2, r3, #1
 570              		.loc 1 380 21 view .LVU149
 571 003e 0192     		str	r2, [sp, #4]
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(wait_loop_index != 0)
 572              		.loc 1 381 5 is_stmt 1 view .LVU150
 573              		.loc 1 381 10 is_stmt 0 view .LVU151
 574 0040 02E0     		b	.L45
 575              	.L46:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       wait_loop_index--;
 576              		.loc 1 383 7 is_stmt 1 view .LVU152
 577              		.loc 1 383 22 is_stmt 0 view .LVU153
 578 0042 019B     		ldr	r3, [sp, #4]
 579 0044 013B     		subs	r3, r3, #1
 580 0046 0193     		str	r3, [sp, #4]
 581              	.L45:
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(wait_loop_index != 0)
 582              		.loc 1 381 27 view .LVU154
 583 0048 019B     		ldr	r3, [sp, #4]
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(wait_loop_index != 0)
 584              		.loc 1 381 10 view .LVU155
 585 004a 002B     		cmp	r3, #0
 586 004c F9D1     		bne	.L46
 587              	.L44:
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* clocking, voltage regulator would not be enabled).                       */
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 588              		.loc 1 391 3 is_stmt 1 view .LVU156
 589              		.loc 1 391 7 is_stmt 0 view .LVU157
 590 004e 0368     		ldr	r3, [r0]
 591 0050 9B68     		ldr	r3, [r3, #8]
 592              		.loc 1 391 6 view .LVU158
 593 0052 13F0805F 		tst	r3, #268435456
ARM GAS  /tmp/cckWcrpf.s 			page 34


 594 0056 1DD0     		beq	.L55
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC error code to ADC IP internal error */
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return  HAL_ERROR;
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   for(cnt = 0; cnt < 6; cnt++)
 595              		.loc 1 402 11 view .LVU159
 596 0058 0024     		movs	r4, #0
 597              	.LVL44:
 598              	.L47:
 599              		.loc 1 402 3 discriminator 1 view .LVU160
 600 005a 052C     		cmp	r4, #5
 601 005c 26D8     		bhi	.L56
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Write the LINCALWx in ADCx_CALFACT2[29:0]  */
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->Instance->CALFACT2 = *(LinearCalib_Buffer + cnt);
 602              		.loc 1 405 5 is_stmt 1 view .LVU161
 603              		.loc 1 405 9 is_stmt 0 view .LVU162
 604 005e 0368     		ldr	r3, [r0]
 605              		.loc 1 405 32 view .LVU163
 606 0060 51F82420 		ldr	r2, [r1, r4, lsl #2]
 607              		.loc 1 405 30 view .LVU164
 608 0064 C3F8C820 		str	r2, [r3, #200]
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set LINCALRDYWx */
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_LINCALRDYW6 >> cnt);
 609              		.loc 1 408 5 is_stmt 1 view .LVU165
 610 0068 0568     		ldr	r5, [r0]
 611 006a AB68     		ldr	r3, [r5, #8]
 612 006c 4FF00062 		mov	r2, #134217728
 613 0070 E240     		lsrs	r2, r2, r4
 614 0072 1343     		orrs	r3, r3, r2
 615 0074 AB60     		str	r3, [r5, #8]
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait untill LINCALRDYWx is set */
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_LINCALRDYW6 >> cnt))
 616              		.loc 1 411 5 view .LVU166
 617              	.L49:
 618              		.loc 1 411 11 is_stmt 0 view .LVU167
 619 0076 0368     		ldr	r3, [r0]
 620 0078 9B68     		ldr	r3, [r3, #8]
 621              		.loc 1 411 10 view .LVU168
 622 007a 1A42     		tst	r2, r3
 623 007c 14D1     		bne	.L57
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       wait_loop_index++;
 624              		.loc 1 413 7 is_stmt 1 view .LVU169
 625              		.loc 1 413 22 is_stmt 0 view .LVU170
 626 007e 019B     		ldr	r3, [sp, #4]
 627 0080 0133     		adds	r3, r3, #1
 628 0082 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cckWcrpf.s 			page 35


 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 629              		.loc 1 414 7 is_stmt 1 view .LVU171
 630              		.loc 1 414 27 is_stmt 0 view .LVU172
 631 0084 019B     		ldr	r3, [sp, #4]
 632              		.loc 1 414 10 view .LVU173
 633 0086 B3F57A4F 		cmp	r3, #64000
 634 008a F4D3     		bcc	.L49
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
 635              		.loc 1 416 16 view .LVU174
 636 008c 0120     		movs	r0, #1
 637              	.LVL45:
 638              	.L48:
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 639              		.loc 1 421 1 view .LVU175
 640 008e 02B0     		add	sp, sp, #8
 641              	.LCFI8:
 642              		.cfi_remember_state
 643              		.cfi_def_cfa_offset 8
 644              		@ sp needed
 645 0090 30BC     		pop	{r4, r5}
 646              	.LCFI9:
 647              		.cfi_restore 5
 648              		.cfi_restore 4
 649              		.cfi_def_cfa_offset 0
 650 0092 7047     		bx	lr
 651              	.LVL46:
 652              	.L55:
 653              	.LCFI10:
 654              		.cfi_restore_state
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 655              		.loc 1 394 5 is_stmt 1 view .LVU176
 656 0094 436D     		ldr	r3, [r0, #84]
 657 0096 43F01003 		orr	r3, r3, #16
 658 009a 4365     		str	r3, [r0, #84]
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 659              		.loc 1 397 5 view .LVU177
 660 009c 836D     		ldr	r3, [r0, #88]
 661 009e 43F00103 		orr	r3, r3, #1
 662 00a2 8365     		str	r3, [r0, #88]
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 663              		.loc 1 399 5 view .LVU178
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 664              		.loc 1 399 13 is_stmt 0 view .LVU179
 665 00a4 0120     		movs	r0, #1
 666              	.LVL47:
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 667              		.loc 1 399 13 view .LVU180
 668 00a6 F2E7     		b	.L48
 669              	.LVL48:
 670              	.L57:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 671              		.loc 1 402 28 discriminator 2 view .LVU181
ARM GAS  /tmp/cckWcrpf.s 			page 36


 672 00a8 0134     		adds	r4, r4, #1
 673              	.LVL49:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 674              		.loc 1 402 28 discriminator 2 view .LVU182
 675 00aa D6E7     		b	.L47
 676              	.L56:
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 677              		.loc 1 420 10 view .LVU183
 678 00ac 0020     		movs	r0, #0
 679              	.LVL50:
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 680              		.loc 1 420 10 view .LVU184
 681 00ae EEE7     		b	.L48
 682              	.L59:
 683              		.align	2
 684              	.L58:
 685 00b0 00000000 		.word	SystemCoreClock
 686 00b4 83DE1B43 		.word	1125899907
 687              		.cfi_endproc
 688              	.LFE141:
 690              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 691              		.align	1
 692              		.global	HAL_ADCEx_InjectedStart
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv5-d16
 698              	HAL_ADCEx_InjectedStart:
 699              	.LVL51:
 700              	.LFB142:
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC master.
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle.
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 701              		.loc 1 435 1 is_stmt 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 705              		.loc 1 436 3 view .LVU186
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 706              		.loc 1 439 3 view .LVU187
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc))
 707              		.loc 1 441 3 view .LVU188
ARM GAS  /tmp/cckWcrpf.s 			page 37


 708              		.loc 1 441 7 is_stmt 0 view .LVU189
 709 0000 0368     		ldr	r3, [r0]
 710 0002 9A68     		ldr	r2, [r3, #8]
 711              		.loc 1 441 6 view .LVU190
 712 0004 12F0080F 		tst	r2, #8
 713 0008 72D1     		bne	.L71
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set         
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          the queue is empty */
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == RESET)
 714              		.loc 1 455 5 is_stmt 1 view .LVU191
 715              		.loc 1 455 10 is_stmt 0 view .LVU192
 716 000a DA6C     		ldr	r2, [r3, #76]
 717              		.loc 1 455 8 view .LVU193
 718 000c 12F4C07F 		tst	r2, #384
 719 0010 02D1     		bne	.L62
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS) == RESET))
 720              		.loc 1 456 13 view .LVU194
 721 0012 DB68     		ldr	r3, [r3, #12]
 722              		.loc 1 456 9 view .LVU195
 723 0014 002B     		cmp	r3, #0
 724 0016 51DA     		bge	.L77
 725              	.L62:
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 726              		.loc 1 464 5 is_stmt 1 view .LVU196
 727              		.loc 1 464 5 view .LVU197
 728 0018 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 729 001c 012B     		cmp	r3, #1
 730 001e 69D0     		beq	.L72
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 731              		.loc 1 435 1 is_stmt 0 discriminator 2 view .LVU198
 732 0020 10B5     		push	{r4, lr}
 733              	.LCFI11:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 4, -8
 736              		.cfi_offset 14, -4
 737 0022 0446     		mov	r4, r0
 738              		.loc 1 464 5 is_stmt 1 discriminator 2 view .LVU199
 739 0024 0123     		movs	r3, #1
 740 0026 80F85030 		strb	r3, [r0, #80]
ARM GAS  /tmp/cckWcrpf.s 			page 38


 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = ADC_Enable(hadc);
 741              		.loc 1 467 5 discriminator 2 view .LVU200
 742              		.loc 1 467 23 is_stmt 0 discriminator 2 view .LVU201
 743 002a FFF7FEFF 		bl	ADC_Enable
 744              	.LVL52:
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_OK)
 745              		.loc 1 470 5 is_stmt 1 discriminator 2 view .LVU202
 746              		.loc 1 470 8 is_stmt 0 discriminator 2 view .LVU203
 747 002e 0346     		mov	r3, r0
 748 0030 0028     		cmp	r0, #0
 749 0032 58D1     		bne	.L63
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_REG_BUSY))
 750              		.loc 1 473 7 is_stmt 1 view .LVU204
 751              		.loc 1 473 11 is_stmt 0 view .LVU205
 752 0034 626D     		ldr	r2, [r4, #84]
 753              		.loc 1 473 10 view .LVU206
 754 0036 12F4807F 		tst	r2, #256
 755 003a 45D0     		beq	.L64
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 756              		.loc 1 476 9 is_stmt 1 view .LVU207
 757 003c A26D     		ldr	r2, [r4, #88]
 758 003e 22F00802 		bic	r2, r2, #8
 759 0042 A265     		str	r2, [r4, #88]
 760              	.L65:
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state */
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear HAL_ADC_STATE_READY and HAL_ADC_STATE_INJ_EOC bits, set HAL_ADC_STATE_INJ_BUSY bit *
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_READY|HAL_ADC_STATE_INJ_EOC), HAL_ADC_STATE_INJ
 761              		.loc 1 485 7 view .LVU208
 762 0044 616D     		ldr	r1, [r4, #84]
 763 0046 2D4A     		ldr	r2, .L78
 764 0048 0A40     		ands	r2, r2, r1
 765 004a 42F48052 		orr	r2, r2, #4096
 766 004e 6265     		str	r2, [r4, #84]
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - by default if ADC is Master or Independent or if multimode feature is not available
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if MultiMode setting is set to independent mode (no dual regular or injected conversions 
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (ADC12_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 767              		.loc 1 490 7 view .LVU209
 768              		.loc 1 490 11 is_stmt 0 view .LVU210
 769 0050 2268     		ldr	r2, [r4]
 770              		.loc 1 490 10 view .LVU211
 771 0052 2B48     		ldr	r0, .L78+4
ARM GAS  /tmp/cckWcrpf.s 			page 39


 772              	.LVL53:
 773              		.loc 1 490 10 view .LVU212
 774 0054 2B49     		ldr	r1, .L78+8
 775 0056 8A42     		cmp	r2, r1
 776 0058 18BF     		it	ne
 777 005a 8242     		cmpne	r2, r0
 778 005c 05D0     		beq	.L66
 779              		.loc 1 490 11 discriminator 1 view .LVU213
 780 005e 01F50071 		add	r1, r1, #512
 781 0062 8968     		ldr	r1, [r1, #8]
 782 0064 11F01F0F 		tst	r1, #31
 783 0068 03D1     		bne	.L67
 784              	.L66:
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 785              		.loc 1 492 9 is_stmt 1 view .LVU214
 786 006a 616D     		ldr	r1, [r4, #84]
 787 006c 21F48011 		bic	r1, r1, #1048576
 788 0070 6165     		str	r1, [r4, #84]
 789              	.L67:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 790              		.loc 1 498 7 view .LVU215
 791 0072 6021     		movs	r1, #96
 792 0074 1160     		str	r1, [r2]
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started).                  */
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Are injected conversions that of a dual Slave ? */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEINJECTED_SLAVE(hadc))
 793              		.loc 1 514 7 view .LVU216
 794              		.loc 1 514 11 is_stmt 0 view .LVU217
 795 0076 2268     		ldr	r2, [r4]
 796              		.loc 1 514 10 view .LVU218
 797 0078 2148     		ldr	r0, .L78+4
 798 007a 2349     		ldr	r1, .L78+12
 799 007c 8A42     		cmp	r2, r1
 800 007e 18BF     		it	ne
 801 0080 8242     		cmpne	r2, r0
 802 0082 24D0     		beq	.L68
 803              		.loc 1 514 11 discriminator 1 view .LVU219
 804 0084 01F16841 		add	r1, r1, #-402653184
ARM GAS  /tmp/cckWcrpf.s 			page 40


 805 0088 A1F57451 		sub	r1, r1, #15616
 806 008c 8968     		ldr	r1, [r1, #8]
 807 008e 11F01F0F 		tst	r1, #31
 808 0092 1CD0     		beq	.L68
 809              		.loc 1 514 11 discriminator 2 view .LVU220
 810 0094 1D49     		ldr	r1, .L78+16
 811 0096 8968     		ldr	r1, [r1, #8]
 812 0098 01F01F01 		and	r1, r1, #31
 813 009c 0629     		cmp	r1, #6
 814 009e 16D0     		beq	.L68
 815              		.loc 1 514 11 discriminator 3 view .LVU221
 816 00a0 1A49     		ldr	r1, .L78+16
 817 00a2 8968     		ldr	r1, [r1, #8]
 818 00a4 01F01F01 		and	r1, r1, #31
 819 00a8 0729     		cmp	r1, #7
 820 00aa 10D0     		beq	.L68
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* hadc is not the handle of a Slave ADC with dual injected conversions enabled:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            set ADSTART only if JAUTO is cleared */
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART) ;
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* hadc is the handle of a Slave ADC with dual injected conversions enabled:
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADSTART is not set */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 821              		.loc 1 530 9 is_stmt 1 view .LVU222
 822 00ac 626D     		ldr	r2, [r4, #84]
 823 00ae 42F48012 		orr	r2, r2, #1048576
 824 00b2 6265     		str	r2, [r4, #84]
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 825              		.loc 1 532 9 view .LVU223
 826              		.loc 1 532 9 view .LVU224
 827 00b4 0022     		movs	r2, #0
 828 00b6 84F85020 		strb	r2, [r4, #80]
 829 00ba 17E0     		b	.L61
 830              	.LVL54:
 831              	.L77:
 832              	.LCFI12:
 833              		.cfi_def_cfa_offset 0
 834              		.cfi_restore 4
 835              		.cfi_restore 14
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 836              		.loc 1 458 7 view .LVU225
 837 00bc 436D     		ldr	r3, [r0, #84]
 838 00be 43F02003 		orr	r3, r3, #32
 839 00c2 4365     		str	r3, [r0, #84]
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 840              		.loc 1 459 7 view .LVU226
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cckWcrpf.s 			page 41


 841              		.loc 1 459 14 is_stmt 0 view .LVU227
 842 00c4 0123     		movs	r3, #1
 843 00c6 16E0     		b	.L74
 844              	.LVL55:
 845              	.L64:
 846              	.LCFI13:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 4, -8
 849              		.cfi_offset 14, -4
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 850              		.loc 1 481 9 is_stmt 1 view .LVU228
 851 00c8 0022     		movs	r2, #0
 852 00ca A265     		str	r2, [r4, #88]
 853 00cc BAE7     		b	.L65
 854              	.LVL56:
 855              	.L68:
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 856              		.loc 1 519 9 view .LVU229
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 857              		.loc 1 519 9 view .LVU230
 858 00ce 0021     		movs	r1, #0
 859 00d0 84F85010 		strb	r1, [r4, #80]
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 860              		.loc 1 521 9 view .LVU231
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 861              		.loc 1 521 13 is_stmt 0 view .LVU232
 862 00d4 D168     		ldr	r1, [r2, #12]
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 863              		.loc 1 521 12 view .LVU233
 864 00d6 11F0007F 		tst	r1, #33554432
 865 00da 07D1     		bne	.L61
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 866              		.loc 1 523 11 is_stmt 1 view .LVU234
 867 00dc 9168     		ldr	r1, [r2, #8]
 868 00de 41F00801 		orr	r1, r1, #8
 869 00e2 9160     		str	r1, [r2, #8]
 870 00e4 02E0     		b	.L61
 871              	.LVL57:
 872              	.L63:
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 873              		.loc 1 538 7 view .LVU235
 874              		.loc 1 538 7 view .LVU236
 875 00e6 0022     		movs	r2, #0
 876 00e8 84F85020 		strb	r2, [r4, #80]
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     } /* if (tmp_hal_status == HAL_OK) */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 877              		.loc 1 542 5 view .LVU237
 878              	.LVL58:
 879              	.L61:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   } /*  if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc)) */
ARM GAS  /tmp/cckWcrpf.s 			page 42


 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 880              		.loc 1 544 1 is_stmt 0 view .LVU238
 881 00ec 1846     		mov	r0, r3
 882 00ee 10BD     		pop	{r4, pc}
 883              	.LVL59:
 884              	.L71:
 885              	.LCFI14:
 886              		.cfi_def_cfa_offset 0
 887              		.cfi_restore 4
 888              		.cfi_restore 14
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 889              		.loc 1 443 12 view .LVU239
 890 00f0 0223     		movs	r3, #2
 891 00f2 00E0     		b	.L74
 892              	.L72:
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 893              		.loc 1 464 5 view .LVU240
 894 00f4 0223     		movs	r3, #2
 895              	.L74:
 896              		.loc 1 544 1 view .LVU241
 897 00f6 1846     		mov	r0, r3
 898              	.LVL60:
 899              		.loc 1 544 1 view .LVU242
 900 00f8 7047     		bx	lr
 901              	.L79:
 902 00fa 00BF     		.align	2
 903              	.L78:
 904 00fc FECFFFFF 		.word	-12290
 905 0100 00200240 		.word	1073881088
 906 0104 00210240 		.word	1073881344
 907 0108 00600258 		.word	1476550656
 908 010c 00230240 		.word	1073881856
 909              		.cfi_endproc
 910              	.LFE142:
 912              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 913              		.align	1
 914              		.global	HAL_ADCEx_InjectedStop
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv5-d16
 920              	HAL_ADCEx_InjectedStop:
 921              	.LVL61:
 922              	.LFB143:
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels and disable ADC peripheral if
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
ARM GAS  /tmp/cckWcrpf.s 			page 43


 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle.
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 923              		.loc 1 563 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 927              		.loc 1 564 3 view .LVU244
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 928              		.loc 1 567 3 view .LVU245
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 929              		.loc 1 570 3 view .LVU246
 930              		.loc 1 570 3 view .LVU247
 931 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 932 0004 012B     		cmp	r3, #1
 933 0006 24D0     		beq	.L84
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 934              		.loc 1 563 1 is_stmt 0 discriminator 2 view .LVU248
 935 0008 10B5     		push	{r4, lr}
 936              	.LCFI15:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 4, -8
 939              		.cfi_offset 14, -4
 940 000a 0446     		mov	r4, r0
 941              		.loc 1 570 3 is_stmt 1 discriminator 2 view .LVU249
 942 000c 0123     		movs	r3, #1
 943 000e 80F85030 		strb	r3, [r0, #80]
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 944              		.loc 1 573 3 discriminator 2 view .LVU250
 945              		.loc 1 573 21 is_stmt 0 discriminator 2 view .LVU251
 946 0012 6021     		movs	r1, #96
 947 0014 FFF7FEFF 		bl	ADC_ConversionStop
 948              	.LVL62:
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 949              		.loc 1 577 3 is_stmt 1 discriminator 2 view .LVU252
 950              		.loc 1 577 6 is_stmt 0 discriminator 2 view .LVU253
 951 0018 0346     		mov	r3, r0
 952 001a 40B9     		cbnz	r0, .L82
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 953              		.loc 1 579 5 is_stmt 1 view .LVU254
 954              		.loc 1 579 9 is_stmt 0 view .LVU255
 955 001c 2268     		ldr	r2, [r4]
 956 001e 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/cckWcrpf.s 			page 44


 957              		.loc 1 579 8 view .LVU256
 958 0020 12F0040F 		tst	r2, #4
 959 0024 08D0     		beq	.L89
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status  = ADC_Disable(hadc);
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Change ADC state */
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_REG_BUSY and HAL_ADC_STATE_INJ_BUSY bits, set HAL_ADC_STATE_READY bi
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_REG_BUSY|HAL_ADC_STATE_INJ_BUSY), HAL_ADC_STA
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear HAL_ADC_STATE_INJ_BUSY bit */
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 960              		.loc 1 597 7 is_stmt 1 view .LVU257
 961 0026 626D     		ldr	r2, [r4, #84]
 962 0028 22F48052 		bic	r2, r2, #4096
 963 002c 6265     		str	r2, [r4, #84]
 964              	.L82:
 965              	.LVL63:
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 966              		.loc 1 602 3 view .LVU258
 967              		.loc 1 602 3 view .LVU259
 968 002e 0022     		movs	r2, #0
 969 0030 84F85020 		strb	r2, [r4, #80]
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 970              		.loc 1 605 3 view .LVU260
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 971              		.loc 1 606 1 is_stmt 0 view .LVU261
 972 0034 1846     		mov	r0, r3
 973 0036 10BD     		pop	{r4, pc}
 974              	.LVL64:
 975              	.L89:
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 976              		.loc 1 582 7 is_stmt 1 view .LVU262
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 977              		.loc 1 582 25 is_stmt 0 view .LVU263
 978 0038 2046     		mov	r0, r4
 979              	.LVL65:
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 980              		.loc 1 582 25 view .LVU264
 981 003a FFF7FEFF 		bl	ADC_Disable
 982              	.LVL66:
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cckWcrpf.s 			page 45


 983              		.loc 1 585 7 is_stmt 1 view .LVU265
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 984              		.loc 1 585 10 is_stmt 0 view .LVU266
 985 003e 0346     		mov	r3, r0
 986 0040 0028     		cmp	r0, #0
 987 0042 F4D1     		bne	.L82
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 988              		.loc 1 589 9 is_stmt 1 view .LVU267
 989 0044 616D     		ldr	r1, [r4, #84]
 990 0046 044A     		ldr	r2, .L90
 991 0048 0A40     		ands	r2, r2, r1
 992 004a 42F00102 		orr	r2, r2, #1
 993 004e 6265     		str	r2, [r4, #84]
 994 0050 EDE7     		b	.L82
 995              	.LVL67:
 996              	.L84:
 997              	.LCFI16:
 998              		.cfi_def_cfa_offset 0
 999              		.cfi_restore 4
 1000              		.cfi_restore 14
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1001              		.loc 1 570 3 is_stmt 0 view .LVU268
 1002 0052 0223     		movs	r3, #2
 1003              		.loc 1 606 1 view .LVU269
 1004 0054 1846     		mov	r0, r3
 1005              	.LVL68:
 1006              		.loc 1 606 1 view .LVU270
 1007 0056 7047     		bx	lr
 1008              	.L91:
 1009              		.align	2
 1010              	.L90:
 1011 0058 FEEEFFFF 		.word	-4354
 1012              		.cfi_endproc
 1013              	.LFE143:
 1015              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 1016              		.align	1
 1017              		.global	HAL_ADCEx_InjectedPollForConversion
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu fpv5-d16
 1023              	HAL_ADCEx_InjectedPollForConversion:
 1024              	.LVL69:
 1025              	.LFB144:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
ARM GAS  /tmp/cckWcrpf.s 			page 46


 1026              		.loc 1 619 1 is_stmt 1 view -0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              		.loc 1 619 1 is_stmt 0 view .LVU272
 1031 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1032              	.LCFI17:
 1033              		.cfi_def_cfa_offset 24
 1034              		.cfi_offset 3, -24
 1035              		.cfi_offset 4, -20
 1036              		.cfi_offset 5, -16
 1037              		.cfi_offset 6, -12
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
 1040 0002 0446     		mov	r4, r0
 1041 0004 0E46     		mov	r6, r1
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t           tickstart;
 1042              		.loc 1 620 3 is_stmt 1 view .LVU273
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t           tmp_Flag_End        = 0x00;
 1043              		.loc 1 621 3 view .LVU274
 1044              	.LVL70:
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_TypeDef        *tmpADC_Master;
 1045              		.loc 1 622 3 view .LVU275
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t           tmp_cfgr            = 0x00;
 1046              		.loc 1 623 3 view .LVU276
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t           tmp_cfgr_jqm_autdly = 0x00;
 1047              		.loc 1 624 3 view .LVU277
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t           tmp_jeos_raised     = 0x01; /* by default, assume that JEOS is set,
 1048              		.loc 1 625 3 view .LVU278
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                     tmp_jeos_raised will be corrected
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                     accordingly during API execution */
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1049              		.loc 1 630 3 view .LVU279
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If end of sequence selected */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 1050              		.loc 1 633 3 view .LVU280
 1051              		.loc 1 633 17 is_stmt 0 view .LVU281
 1052 0006 0369     		ldr	r3, [r0, #16]
 1053              		.loc 1 633 6 view .LVU282
 1054 0008 082B     		cmp	r3, #8
 1055 000a 19D0     		beq	.L118
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else /* end of conversion selected */
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 1056              		.loc 1 639 18 view .LVU283
 1057 000c 2025     		movs	r5, #32
 1058              	.L93:
 1059              	.LVL71:
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get timeout */
ARM GAS  /tmp/cckWcrpf.s 			page 47


 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 1060              		.loc 1 643 3 is_stmt 1 view .LVU284
 1061              		.loc 1 643 15 is_stmt 0 view .LVU285
 1062 000e FFF7FEFF 		bl	HAL_GetTick
 1063              	.LVL72:
 1064              		.loc 1 643 15 view .LVU286
 1065 0012 0746     		mov	r7, r0
 1066              	.LVL73:
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****    /* Wait until End of Conversion or Sequence flag is raised */
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_End))
 1067              		.loc 1 646 3 is_stmt 1 view .LVU287
 1068              	.L95:
 1069              		.loc 1 646 9 is_stmt 0 view .LVU288
 1070 0014 2368     		ldr	r3, [r4]
 1071 0016 1A68     		ldr	r2, [r3]
 1072              		.loc 1 646 8 view .LVU289
 1073 0018 2A42     		tst	r2, r5
 1074 001a 13D1     		bne	.L119
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1075              		.loc 1 649 5 is_stmt 1 view .LVU290
 1076              		.loc 1 649 7 is_stmt 0 view .LVU291
 1077 001c B6F1FF3F 		cmp	r6, #-1
 1078 0020 F8D0     		beq	.L95
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 1079              		.loc 1 651 7 is_stmt 1 view .LVU292
 1080              		.loc 1 651 9 is_stmt 0 view .LVU293
 1081 0022 26B1     		cbz	r6, .L96
 1082              		.loc 1 651 30 discriminator 1 view .LVU294
 1083 0024 FFF7FEFF 		bl	HAL_GetTick
 1084              	.LVL74:
 1085              		.loc 1 651 43 discriminator 1 view .LVU295
 1086 0028 C01B     		subs	r0, r0, r7
 1087              		.loc 1 651 25 discriminator 1 view .LVU296
 1088 002a B042     		cmp	r0, r6
 1089 002c F2D9     		bls	.L95
 1090              	.L96:
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1091              		.loc 1 654 9 is_stmt 1 view .LVU297
 1092 002e 636D     		ldr	r3, [r4, #84]
 1093 0030 43F00403 		orr	r3, r3, #4
 1094 0034 6365     		str	r3, [r4, #84]
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1095              		.loc 1 657 9 view .LVU298
 1096              		.loc 1 657 9 view .LVU299
 1097 0036 0023     		movs	r3, #0
 1098 0038 84F85030 		strb	r3, [r4, #80]
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
 1099              		.loc 1 659 9 view .LVU300
ARM GAS  /tmp/cckWcrpf.s 			page 48


 1100              		.loc 1 659 16 is_stmt 0 view .LVU301
 1101 003c 0320     		movs	r0, #3
 1102 003e 6FE0     		b	.L97
 1103              	.LVL75:
 1104              	.L118:
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1105              		.loc 1 635 18 view .LVU302
 1106 0040 4025     		movs	r5, #64
 1107 0042 E4E7     		b	.L93
 1108              	.LVL76:
 1109              	.L119:
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Next, to clear the polled flag as well as to update the handle State,
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      JEOS is checked and the relevant configuration registers are retrieved.
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      JQM, JAUTO and CONT bits will have to be read for the State update,
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      AUTDLY for JEOS clearing. */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   1. Check whether or not JEOS is set */
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->ISR, ADC_FLAG_JEOS))
 1110              		.loc 1 669 3 is_stmt 1 view .LVU303
 1111              		.loc 1 669 7 is_stmt 0 view .LVU304
 1112 0044 1A68     		ldr	r2, [r3]
 1113              		.loc 1 669 6 view .LVU305
 1114 0046 12F0400F 		tst	r2, #64
 1115 004a 1DD0     		beq	.L110
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                     tmp_jeos_raised will be corrected
 1116              		.loc 1 625 22 view .LVU306
 1117 004c 0120     		movs	r0, #1
 1118              	.L99:
 1119              	.LVL77:
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_jeos_raised = 0;
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  2. Check whether or not hadc is the handle of a Slave ADC with dual
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         injected conversions enabled. */
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_INDEPENDENT_OR_NONMULTIMODEINJECTED_SLAVE(hadc) == RESET)
 1120              		.loc 1 675 3 is_stmt 1 view .LVU307
 1121              		.loc 1 675 7 is_stmt 0 view .LVU308
 1122 004e 3849     		ldr	r1, .L122
 1123 0050 384A     		ldr	r2, .L122+4
 1124 0052 9342     		cmp	r3, r2
 1125 0054 18BF     		it	ne
 1126 0056 8B42     		cmpne	r3, r1
 1127 0058 0CBF     		ite	eq
 1128 005a 0122     		moveq	r2, #1
 1129 005c 0022     		movne	r2, #0
 1130 005e 15D0     		beq	.L100
 1131              		.loc 1 675 7 discriminator 2 view .LVU309
 1132 0060 01F54071 		add	r1, r1, #768
 1133 0064 8968     		ldr	r1, [r1, #8]
 1134 0066 11F01F0F 		tst	r1, #31
 1135 006a 0FD0     		beq	.L100
 1136              		.loc 1 675 7 discriminator 4 view .LVU310
 1137 006c 3249     		ldr	r1, .L122+8
 1138 006e 8968     		ldr	r1, [r1, #8]
ARM GAS  /tmp/cckWcrpf.s 			page 49


 1139 0070 01F01F01 		and	r1, r1, #31
 1140 0074 0629     		cmp	r1, #6
 1141 0076 09D0     		beq	.L100
 1142              		.loc 1 675 7 discriminator 6 view .LVU311
 1143 0078 2F49     		ldr	r1, .L122+8
 1144 007a 8968     		ldr	r1, [r1, #8]
 1145 007c 01F01F01 		and	r1, r1, #31
 1146 0080 0729     		cmp	r1, #7
 1147 0082 03D0     		beq	.L100
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* hadc is not the handle of a Slave ADC with dual injected conversions enabled:
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         check JQM and AUTDLY bits directly in ADC CFGR register */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr_jqm_autdly = READ_REG(hadc->Instance->CFGR);
 1148              		.loc 1 679 5 is_stmt 1 view .LVU312
 1149              		.loc 1 679 25 is_stmt 0 view .LVU313
 1150 0084 D968     		ldr	r1, [r3, #12]
 1151              	.LVL78:
 1152              		.loc 1 679 25 view .LVU314
 1153 0086 04E0     		b	.L101
 1154              	.LVL79:
 1155              	.L110:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1156              		.loc 1 671 21 view .LVU315
 1157 0088 0020     		movs	r0, #0
 1158 008a E0E7     		b	.L99
 1159              	.LVL80:
 1160              	.L100:
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* hadc is the handle of a Slave ADC with dual injected conversions enabled:
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         need to check JQM and AUTDLY bits of Master ADC CFGR register */
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Master = ADC_MASTER_REGISTER(hadc);
 1161              		.loc 1 685 5 is_stmt 1 view .LVU316
 1162              		.loc 1 685 21 is_stmt 0 view .LVU317
 1163 008c B2B9     		cbnz	r2, .L111
 1164 008e 2849     		ldr	r1, .L122
 1165              	.L102:
 1166              	.LVL81:
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr_jqm_autdly = READ_REG(tmpADC_Master->CFGR);
 1167              		.loc 1 686 5 is_stmt 1 discriminator 4 view .LVU318
 1168              		.loc 1 686 25 is_stmt 0 discriminator 4 view .LVU319
 1169 0090 C968     		ldr	r1, [r1, #12]
 1170              	.LVL82:
 1171              	.L101:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 3. Check whether or not hadc is the handle of a Slave ADC with dual
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         regular conversions enabled. */
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
 1172              		.loc 1 690 3 is_stmt 1 view .LVU320
 1173              		.loc 1 690 6 is_stmt 0 view .LVU321
 1174 0092 AAB9     		cbnz	r2, .L103
 1175              		.loc 1 690 7 discriminator 1 view .LVU322
 1176 0094 284A     		ldr	r2, .L122+8
 1177 0096 9268     		ldr	r2, [r2, #8]
 1178 0098 12F01F0F 		tst	r2, #31
 1179 009c 10D0     		beq	.L103
ARM GAS  /tmp/cckWcrpf.s 			page 50


 1180              		.loc 1 690 7 discriminator 2 view .LVU323
 1181 009e 264A     		ldr	r2, .L122+8
 1182 00a0 9268     		ldr	r2, [r2, #8]
 1183 00a2 02F01F02 		and	r2, r2, #31
 1184 00a6 052A     		cmp	r2, #5
 1185 00a8 0AD0     		beq	.L103
 1186              		.loc 1 690 7 discriminator 3 view .LVU324
 1187 00aa 234A     		ldr	r2, .L122+8
 1188 00ac 9268     		ldr	r2, [r2, #8]
 1189 00ae 02F01F02 		and	r2, r2, #31
 1190 00b2 092A     		cmp	r2, #9
 1191 00b4 04D0     		beq	.L103
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* hadc is not the handle of a Slave ADC with dual regular conversions enabled:
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        check JAUTO and CONT bits directly in ADC CFGR register */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* hadc is not the handle of a Slave ADC with dual regular conversions enabled:
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       check JAUTO and CONT bits of Master ADC CFGR register */
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Master = ADC_MASTER_REGISTER(hadc);
 1192              		.loc 1 700 5 is_stmt 1 discriminator 4 view .LVU325
 1193              	.LVL83:
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1194              		.loc 1 701 5 discriminator 4 view .LVU326
 1195              		.loc 1 701 14 is_stmt 0 discriminator 4 view .LVU327
 1196 00b6 1E4A     		ldr	r2, .L122
 1197 00b8 D668     		ldr	r6, [r2, #12]
 1198              	.LVL84:
 1199              		.loc 1 701 14 discriminator 4 view .LVU328
 1200 00ba 02E0     		b	.L105
 1201              	.LVL85:
 1202              	.L111:
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr_jqm_autdly = READ_REG(tmpADC_Master->CFGR);
 1203              		.loc 1 685 21 view .LVU329
 1204 00bc 1946     		mov	r1, r3
 1205 00be E7E7     		b	.L102
 1206              	.LVL86:
 1207              	.L103:
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1208              		.loc 1 694 5 is_stmt 1 view .LVU330
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1209              		.loc 1 694 14 is_stmt 0 view .LVU331
 1210 00c0 DE68     		ldr	r6, [r3, #12]
 1211              	.LVL87:
 1212              	.L105:
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Clear polled flag */
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 1213              		.loc 1 707 3 is_stmt 1 view .LVU332
 1214              		.loc 1 707 6 is_stmt 0 view .LVU333
 1215 00c2 402D     		cmp	r5, #64
 1216 00c4 1FD0     		beq	.L120
ARM GAS  /tmp/cckWcrpf.s 			page 51


 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* cleared.                                                               */
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note that 1. reading ADCx_JDRy clears JEOC.                            */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*           2. in MultiMode with dual injected conversions enabled,      */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*              Master AUTDLY bit must be checked                         */
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (READ_BIT (tmp_cfgr_jqm_autdly, ADC_CFGR_AUTDLY) == RESET)
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 1217              		.loc 1 724 5 is_stmt 1 view .LVU334
 1218 00c6 2022     		movs	r2, #32
 1219 00c8 1A60     		str	r2, [r3]
 1220              	.L107:
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Update ADC state machine */
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1221              		.loc 1 729 3 view .LVU335
 1222 00ca 636D     		ldr	r3, [r4, #84]
 1223 00cc 43F40053 		orr	r3, r3, #8192
 1224 00d0 6365     		str	r3, [r4, #84]
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Are injected conversions over ? This is the case if JEOS is set AND
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - injected conversions are software-triggered when injected queue management is disabled
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         OR
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - autoinjection is enabled, continuous mode is disabled,
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           and regular conversions are software-triggered */
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_jeos_raised)
 1225              		.loc 1 736 3 view .LVU336
 1226              		.loc 1 736 6 is_stmt 0 view .LVU337
 1227 00d2 20B3     		cbz	r0, .L112
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((ADC_IS_SOFTWARE_START_INJECTED(hadc) && (READ_BIT(tmp_cfgr_jqm_autdly, ADC_CFGR_JQM) != AD
 1228              		.loc 1 738 5 is_stmt 1 view .LVU338
 1229              		.loc 1 738 10 is_stmt 0 view .LVU339
 1230 00d4 2368     		ldr	r3, [r4]
 1231 00d6 DA6C     		ldr	r2, [r3, #76]
 1232              		.loc 1 738 8 view .LVU340
 1233 00d8 12F4C07F 		tst	r2, #384
 1234 00dc 21D1     		bne	.L113
 1235              		.loc 1 738 47 discriminator 1 view .LVU341
 1236 00de 11F4001F 		tst	r1, #2097152
 1237 00e2 20D1     		bne	.L114
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (!((READ_BIT(tmp_cfgr, (ADC_CFGR_JAUTO|ADC_CFGR_CONT)) == (ADC_CFGR_JAUTO|ADC_CFGR_CONT)
 1238              		.loc 1 739 9 view .LVU342
 1239 00e4 154A     		ldr	r2, .L122+12
 1240 00e6 B243     		bics	r2, r2, r6
 1241 00e8 13D0     		beq	.L121
ARM GAS  /tmp/cckWcrpf.s 			page 52


 1242              	.L108:
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (ADC_IS_SOFTWARE_START_REGULAR(hadc)))    ))
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear HAL_ADC_STATE_INJ_BUSY bit */
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1243              		.loc 1 743 7 is_stmt 1 view .LVU343
 1244 00ea 636D     		ldr	r3, [r4, #84]
 1245 00ec 23F48053 		bic	r3, r3, #4096
 1246 00f0 6365     		str	r3, [r4, #84]
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If no regular conversion on-going, set HAL_ADC_STATE_READY bit */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1247              		.loc 1 745 7 view .LVU344
 1248              		.loc 1 745 11 is_stmt 0 view .LVU345
 1249 00f2 636D     		ldr	r3, [r4, #84]
 1250              		.loc 1 745 10 view .LVU346
 1251 00f4 13F4807F 		tst	r3, #256
 1252 00f8 17D1     		bne	.L116
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1253              		.loc 1 747 9 is_stmt 1 view .LVU347
 1254 00fa 636D     		ldr	r3, [r4, #84]
 1255 00fc 43F00103 		orr	r3, r3, #1
 1256 0100 6365     		str	r3, [r4, #84]
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return API HAL status */
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 1257              		.loc 1 755 10 is_stmt 0 view .LVU348
 1258 0102 0020     		movs	r0, #0
 1259              	.LVL88:
 1260              		.loc 1 755 10 view .LVU349
 1261 0104 0CE0     		b	.L97
 1262              	.LVL89:
 1263              	.L120:
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1264              		.loc 1 717 5 is_stmt 1 view .LVU350
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1265              		.loc 1 717 8 is_stmt 0 view .LVU351
 1266 0106 11F4804F 		tst	r1, #16384
 1267 010a DED1     		bne	.L107
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1268              		.loc 1 719 7 is_stmt 1 view .LVU352
 1269 010c 0422     		movs	r2, #4
 1270 010e 1A60     		str	r2, [r3]
 1271 0110 DBE7     		b	.L107
 1272              	.L121:
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1273              		.loc 1 740 14 is_stmt 0 discriminator 1 view .LVU353
 1274 0112 DB68     		ldr	r3, [r3, #12]
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (ADC_IS_SOFTWARE_START_REGULAR(hadc)))    ))
 1275              		.loc 1 739 13 discriminator 1 view .LVU354
 1276 0114 13F4406F 		tst	r3, #3072
 1277 0118 E7D1     		bne	.L108
ARM GAS  /tmp/cckWcrpf.s 			page 53


 1278              		.loc 1 755 10 view .LVU355
 1279 011a 0020     		movs	r0, #0
 1280              	.LVL90:
 1281              		.loc 1 755 10 view .LVU356
 1282 011c 00E0     		b	.L97
 1283              	.LVL91:
 1284              	.L112:
 1285              		.loc 1 755 10 view .LVU357
 1286 011e 0020     		movs	r0, #0
 1287              	.LVL92:
 1288              	.L97:
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1289              		.loc 1 756 1 view .LVU358
 1290 0120 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1291              	.LVL93:
 1292              	.L113:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1293              		.loc 1 755 10 view .LVU359
 1294 0122 0020     		movs	r0, #0
 1295              	.LVL94:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1296              		.loc 1 755 10 view .LVU360
 1297 0124 FCE7     		b	.L97
 1298              	.LVL95:
 1299              	.L114:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1300              		.loc 1 755 10 view .LVU361
 1301 0126 0020     		movs	r0, #0
 1302              	.LVL96:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1303              		.loc 1 755 10 view .LVU362
 1304 0128 FAE7     		b	.L97
 1305              	.LVL97:
 1306              	.L116:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1307              		.loc 1 755 10 view .LVU363
 1308 012a 0020     		movs	r0, #0
 1309              	.LVL98:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1310              		.loc 1 755 10 view .LVU364
 1311 012c F8E7     		b	.L97
 1312              	.L123:
 1313 012e 00BF     		.align	2
 1314              	.L122:
 1315 0130 00200240 		.word	1073881088
 1316 0134 00600258 		.word	1476550656
 1317 0138 00230240 		.word	1073881856
 1318 013c 00200002 		.word	33562624
 1319              		.cfi_endproc
 1320              	.LFE144:
 1322              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 1323              		.align	1
 1324              		.global	HAL_ADCEx_InjectedStart_IT
 1325              		.syntax unified
 1326              		.thumb
 1327              		.thumb_func
 1328              		.fpu fpv5-d16
ARM GAS  /tmp/cckWcrpf.s 			page 54


 1330              	HAL_ADCEx_InjectedStart_IT:
 1331              	.LVL99:
 1332              	.LFB145:
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC master.
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle.
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1333              		.loc 1 773 1 is_stmt 1 view -0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 1337              		.loc 1 774 3 view .LVU366
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1338              		.loc 1 777 3 view .LVU367
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc))
 1339              		.loc 1 779 3 view .LVU368
 1340              		.loc 1 779 7 is_stmt 0 view .LVU369
 1341 0000 0368     		ldr	r3, [r0]
 1342 0002 9A68     		ldr	r2, [r3, #8]
 1343              		.loc 1 779 6 view .LVU370
 1344 0004 12F0080F 		tst	r2, #8
 1345 0008 40F09580 		bne	.L138
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          the queue is empty */
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == RESET)
 1346              		.loc 1 793 5 is_stmt 1 view .LVU371
 1347              		.loc 1 793 10 is_stmt 0 view .LVU372
 1348 000c DA6C     		ldr	r2, [r3, #76]
 1349              		.loc 1 793 8 view .LVU373
ARM GAS  /tmp/cckWcrpf.s 			page 55


 1350 000e 12F4C07F 		tst	r2, #384
 1351 0012 02D1     		bne	.L126
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS) == RESET))
 1352              		.loc 1 794 13 view .LVU374
 1353 0014 DB68     		ldr	r3, [r3, #12]
 1354              		.loc 1 794 9 view .LVU375
 1355 0016 002B     		cmp	r3, #0
 1356 0018 68DA     		bge	.L144
 1357              	.L126:
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1358              		.loc 1 801 5 is_stmt 1 view .LVU376
 1359              		.loc 1 801 5 view .LVU377
 1360 001a 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1361 001e 012B     		cmp	r3, #1
 1362 0020 00F08B80 		beq	.L139
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 1363              		.loc 1 773 1 is_stmt 0 discriminator 2 view .LVU378
 1364 0024 10B5     		push	{r4, lr}
 1365              	.LCFI18:
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 4, -8
 1368              		.cfi_offset 14, -4
 1369 0026 0446     		mov	r4, r0
 1370              		.loc 1 801 5 is_stmt 1 discriminator 2 view .LVU379
 1371 0028 0123     		movs	r3, #1
 1372 002a 80F85030 		strb	r3, [r0, #80]
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = ADC_Enable(hadc);
 1373              		.loc 1 804 5 discriminator 2 view .LVU380
 1374              		.loc 1 804 23 is_stmt 0 discriminator 2 view .LVU381
 1375 002e FFF7FEFF 		bl	ADC_Enable
 1376              	.LVL100:
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_OK)
 1377              		.loc 1 807 5 is_stmt 1 discriminator 2 view .LVU382
 1378              		.loc 1 807 8 is_stmt 0 discriminator 2 view .LVU383
 1379 0032 0346     		mov	r3, r0
 1380 0034 0028     		cmp	r0, #0
 1381 0036 79D1     		bne	.L127
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1382              		.loc 1 810 7 is_stmt 1 view .LVU384
 1383              		.loc 1 810 11 is_stmt 0 view .LVU385
 1384 0038 626D     		ldr	r2, [r4, #84]
 1385              		.loc 1 810 10 view .LVU386
 1386 003a 12F4807F 		tst	r2, #256
 1387 003e 5BD0     		beq	.L128
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cckWcrpf.s 			page 56


 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1388              		.loc 1 813 9 is_stmt 1 view .LVU387
 1389 0040 A26D     		ldr	r2, [r4, #88]
 1390 0042 22F00802 		bic	r2, r2, #8
 1391 0046 A265     		str	r2, [r4, #88]
 1392              	.L129:
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear HAL_ADC_STATE_READY and HAL_ADC_STATE_INJ_EOC bits, set HAL_ADC_STATE_INJ_BUSY bit *
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_READY|HAL_ADC_STATE_INJ_EOC), HAL_ADC_STATE_INJ
 1393              		.loc 1 821 7 view .LVU388
 1394 0048 616D     		ldr	r1, [r4, #84]
 1395 004a 3D4A     		ldr	r2, .L146
 1396 004c 0A40     		ands	r2, r2, r1
 1397 004e 42F48052 		orr	r2, r2, #4096
 1398 0052 6265     		str	r2, [r4, #84]
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - by default if ADC is Master or Independent
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if MultiMode setting is set to independent mode (no dual regular or injected conversions 
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (ADC12_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 1399              		.loc 1 826 7 view .LVU389
 1400              		.loc 1 826 11 is_stmt 0 view .LVU390
 1401 0054 2268     		ldr	r2, [r4]
 1402              		.loc 1 826 10 view .LVU391
 1403 0056 3B48     		ldr	r0, .L146+4
 1404              	.LVL101:
 1405              		.loc 1 826 10 view .LVU392
 1406 0058 3B49     		ldr	r1, .L146+8
 1407 005a 8A42     		cmp	r2, r1
 1408 005c 18BF     		it	ne
 1409 005e 8242     		cmpne	r2, r0
 1410 0060 05D0     		beq	.L130
 1411              		.loc 1 826 11 discriminator 1 view .LVU393
 1412 0062 01F50071 		add	r1, r1, #512
 1413 0066 8968     		ldr	r1, [r1, #8]
 1414 0068 11F01F0F 		tst	r1, #31
 1415 006c 03D1     		bne	.L131
 1416              	.L130:
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1417              		.loc 1 828 9 is_stmt 1 view .LVU394
 1418 006e 616D     		ldr	r1, [r4, #84]
 1419 0070 21F48011 		bic	r1, r1, #1048576
 1420 0074 6165     		str	r1, [r4, #84]
 1421              	.L131:
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1422              		.loc 1 833 7 view .LVU395
ARM GAS  /tmp/cckWcrpf.s 			page 57


 1423 0076 6021     		movs	r1, #96
 1424 0078 1160     		str	r1, [r2]
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != RESET)
 1425              		.loc 1 837 7 view .LVU396
 1426              		.loc 1 837 16 is_stmt 0 view .LVU397
 1427 007a 2268     		ldr	r2, [r4]
 1428              		.loc 1 837 26 view .LVU398
 1429 007c D168     		ldr	r1, [r2, #12]
 1430              		.loc 1 837 10 view .LVU399
 1431 007e 11F4001F 		tst	r1, #2097152
 1432 0082 03D0     		beq	.L132
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 1433              		.loc 1 839 9 is_stmt 1 view .LVU400
 1434 0084 5168     		ldr	r1, [r2, #4]
 1435 0086 41F48061 		orr	r1, r1, #1024
 1436 008a 5160     		str	r1, [r2, #4]
 1437              	.L132:
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
 1438              		.loc 1 843 7 view .LVU401
 1439              		.loc 1 843 24 is_stmt 0 view .LVU402
 1440 008c 2269     		ldr	r2, [r4, #16]
 1441              		.loc 1 843 7 view .LVU403
 1442 008e 082A     		cmp	r2, #8
 1443 0090 35D0     		beq	.L145
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         default:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 1444              		.loc 1 851 11 is_stmt 1 view .LVU404
 1445 0092 2168     		ldr	r1, [r4]
 1446 0094 4A68     		ldr	r2, [r1, #4]
 1447 0096 22F04002 		bic	r2, r2, #64
 1448 009a 4A60     		str	r2, [r1, #4]
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1449              		.loc 1 852 11 view .LVU405
 1450 009c 2168     		ldr	r1, [r4]
 1451 009e 4A68     		ldr	r2, [r1, #4]
 1452 00a0 42F02002 		orr	r2, r2, #32
 1453 00a4 4A60     		str	r2, [r1, #4]
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 1454              		.loc 1 853 11 view .LVU406
 1455              	.L134:
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is disabled.                                                           */
ARM GAS  /tmp/cckWcrpf.s 			page 58


 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case of multimode enabled:                                             */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started).                  */
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Are injected conversions that of a dual Slave ? */
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEINJECTED_SLAVE(hadc))
 1456              		.loc 1 870 7 view .LVU407
 1457              		.loc 1 870 11 is_stmt 0 view .LVU408
 1458 00a6 2268     		ldr	r2, [r4]
 1459              		.loc 1 870 10 view .LVU409
 1460 00a8 2648     		ldr	r0, .L146+4
 1461 00aa 2849     		ldr	r1, .L146+12
 1462 00ac 8A42     		cmp	r2, r1
 1463 00ae 18BF     		it	ne
 1464 00b0 8242     		cmpne	r2, r0
 1465 00b2 2FD0     		beq	.L135
 1466              		.loc 1 870 11 discriminator 1 view .LVU410
 1467 00b4 01F16841 		add	r1, r1, #-402653184
 1468 00b8 A1F57451 		sub	r1, r1, #15616
 1469 00bc 8968     		ldr	r1, [r1, #8]
 1470 00be 11F01F0F 		tst	r1, #31
 1471 00c2 27D0     		beq	.L135
 1472              		.loc 1 870 11 discriminator 2 view .LVU411
 1473 00c4 2249     		ldr	r1, .L146+16
 1474 00c6 8968     		ldr	r1, [r1, #8]
 1475 00c8 01F01F01 		and	r1, r1, #31
 1476 00cc 0629     		cmp	r1, #6
 1477 00ce 21D0     		beq	.L135
 1478              		.loc 1 870 11 discriminator 3 view .LVU412
 1479 00d0 1F49     		ldr	r1, .L146+16
 1480 00d2 8968     		ldr	r1, [r1, #8]
 1481 00d4 01F01F01 		and	r1, r1, #31
 1482 00d8 0729     		cmp	r1, #7
 1483 00da 1BD0     		beq	.L135
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* hadc is not the handle of a Slave ADC with dual injected conversions enabled:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            set ADSTART only if JAUTO is cleared */
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART) ;
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* hadc is the handle of a Slave ADC with dual injected conversions enabled:
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADSTART is not set */
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1484              		.loc 1 885 9 is_stmt 1 view .LVU413
ARM GAS  /tmp/cckWcrpf.s 			page 59


 1485 00dc 626D     		ldr	r2, [r4, #84]
 1486 00de 42F48012 		orr	r2, r2, #1048576
 1487 00e2 6265     		str	r2, [r4, #84]
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1488              		.loc 1 887 9 view .LVU414
 1489              		.loc 1 887 9 view .LVU415
 1490 00e4 0022     		movs	r2, #0
 1491 00e6 84F85020 		strb	r2, [r4, #80]
 1492 00ea 22E0     		b	.L125
 1493              	.LVL102:
 1494              	.L144:
 1495              	.LCFI19:
 1496              		.cfi_def_cfa_offset 0
 1497              		.cfi_restore 4
 1498              		.cfi_restore 14
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 1499              		.loc 1 796 7 view .LVU416
 1500 00ec 436D     		ldr	r3, [r0, #84]
 1501 00ee 43F02003 		orr	r3, r3, #32
 1502 00f2 4365     		str	r3, [r0, #84]
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1503              		.loc 1 797 7 view .LVU417
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1504              		.loc 1 797 14 is_stmt 0 view .LVU418
 1505 00f4 0123     		movs	r3, #1
 1506 00f6 21E0     		b	.L141
 1507              	.LVL103:
 1508              	.L128:
 1509              	.LCFI20:
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 4, -8
 1512              		.cfi_offset 14, -4
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 1513              		.loc 1 818 9 is_stmt 1 view .LVU419
 1514 00f8 0022     		movs	r2, #0
 1515 00fa A265     		str	r2, [r4, #88]
 1516 00fc A4E7     		b	.L129
 1517              	.LVL104:
 1518              	.L145:
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 1519              		.loc 1 846 11 view .LVU420
 1520 00fe 2168     		ldr	r1, [r4]
 1521 0100 4A68     		ldr	r2, [r1, #4]
 1522 0102 22F02002 		bic	r2, r2, #32
 1523 0106 4A60     		str	r2, [r1, #4]
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 1524              		.loc 1 847 11 view .LVU421
 1525 0108 2168     		ldr	r1, [r4]
 1526 010a 4A68     		ldr	r2, [r1, #4]
 1527 010c 42F04002 		orr	r2, r2, #64
 1528 0110 4A60     		str	r2, [r1, #4]
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 1529              		.loc 1 848 11 view .LVU422
 1530 0112 C8E7     		b	.L134
 1531              	.L135:
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
ARM GAS  /tmp/cckWcrpf.s 			page 60


 1532              		.loc 1 875 9 view .LVU423
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
 1533              		.loc 1 875 9 view .LVU424
 1534 0114 0021     		movs	r1, #0
 1535 0116 84F85010 		strb	r1, [r4, #80]
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 1536              		.loc 1 876 9 view .LVU425
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 1537              		.loc 1 876 13 is_stmt 0 view .LVU426
 1538 011a D168     		ldr	r1, [r2, #12]
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 1539              		.loc 1 876 12 view .LVU427
 1540 011c 11F0007F 		tst	r1, #33554432
 1541 0120 07D1     		bne	.L125
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 1542              		.loc 1 878 11 is_stmt 1 view .LVU428
 1543 0122 9168     		ldr	r1, [r2, #8]
 1544 0124 41F00801 		orr	r1, r1, #8
 1545 0128 9160     		str	r1, [r2, #8]
 1546 012a 02E0     		b	.L125
 1547              	.LVL105:
 1548              	.L127:
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1549              		.loc 1 893 7 view .LVU429
 1550              		.loc 1 893 7 view .LVU430
 1551 012c 0022     		movs	r2, #0
 1552 012e 84F85020 		strb	r2, [r4, #80]
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 1553              		.loc 1 897 5 view .LVU431
 1554              	.LVL106:
 1555              	.L125:
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1556              		.loc 1 899 1 is_stmt 0 view .LVU432
 1557 0132 1846     		mov	r0, r3
 1558 0134 10BD     		pop	{r4, pc}
 1559              	.LVL107:
 1560              	.L138:
 1561              	.LCFI21:
 1562              		.cfi_def_cfa_offset 0
 1563              		.cfi_restore 4
 1564              		.cfi_restore 14
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1565              		.loc 1 781 12 view .LVU433
 1566 0136 0223     		movs	r3, #2
 1567 0138 00E0     		b	.L141
 1568              	.L139:
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1569              		.loc 1 801 5 view .LVU434
ARM GAS  /tmp/cckWcrpf.s 			page 61


 1570 013a 0223     		movs	r3, #2
 1571              	.L141:
 1572              		.loc 1 899 1 view .LVU435
 1573 013c 1846     		mov	r0, r3
 1574              	.LVL108:
 1575              		.loc 1 899 1 view .LVU436
 1576 013e 7047     		bx	lr
 1577              	.L147:
 1578              		.align	2
 1579              	.L146:
 1580 0140 FECFFFFF 		.word	-12290
 1581 0144 00200240 		.word	1073881088
 1582 0148 00210240 		.word	1073881344
 1583 014c 00600258 		.word	1476550656
 1584 0150 00230240 		.word	1073881856
 1585              		.cfi_endproc
 1586              	.LFE145:
 1588              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1589              		.align	1
 1590              		.global	HAL_ADCEx_InjectedStop_IT
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1594              		.fpu fpv5-d16
 1596              	HAL_ADCEx_InjectedStop_IT:
 1597              	.LVL109:
 1598              	.LFB146:
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         end-of-conversion, disable ADC peripheral if no regular conversion
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         is on going.
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC slave.
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1599              		.loc 1 921 1 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 1603              		.loc 1 922 3 view .LVU438
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/cckWcrpf.s 			page 62


 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1604              		.loc 1 925 3 view .LVU439
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1605              		.loc 1 928 3 view .LVU440
 1606              		.loc 1 928 3 view .LVU441
 1607 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1608 0004 012B     		cmp	r3, #1
 1609 0006 29D0     		beq	.L152
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 1610              		.loc 1 921 1 is_stmt 0 discriminator 2 view .LVU442
 1611 0008 10B5     		push	{r4, lr}
 1612              	.LCFI22:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 4, -8
 1615              		.cfi_offset 14, -4
 1616 000a 0446     		mov	r4, r0
 1617              		.loc 1 928 3 is_stmt 1 discriminator 2 view .LVU443
 1618 000c 0123     		movs	r3, #1
 1619 000e 80F85030 		strb	r3, [r0, #80]
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1620              		.loc 1 931 3 discriminator 2 view .LVU444
 1621              		.loc 1 931 21 is_stmt 0 discriminator 2 view .LVU445
 1622 0012 6021     		movs	r1, #96
 1623 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1624              	.LVL110:
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* continue.                                                                */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 1625              		.loc 1 936 3 is_stmt 1 discriminator 2 view .LVU446
 1626              		.loc 1 936 6 is_stmt 0 discriminator 2 view .LVU447
 1627 0018 0346     		mov	r3, r0
 1628 001a 68B9     		cbnz	r0, .L150
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 1629              		.loc 1 939 5 is_stmt 1 view .LVU448
 1630 001c 2168     		ldr	r1, [r4]
 1631 001e 4A68     		ldr	r2, [r1, #4]
 1632 0020 22F48C62 		bic	r2, r2, #1120
 1633 0024 4A60     		str	r2, [r1, #4]
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET))
 1634              		.loc 1 941 5 view .LVU449
 1635              		.loc 1 941 10 is_stmt 0 view .LVU450
 1636 0026 2268     		ldr	r2, [r4]
 1637 0028 9268     		ldr	r2, [r2, #8]
 1638              		.loc 1 941 8 view .LVU451
 1639 002a 12F0040F 		tst	r2, #4
 1640 002e 08D0     		beq	.L157
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
ARM GAS  /tmp/cckWcrpf.s 			page 63


 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status  = ADC_Disable(hadc);
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Change ADC state */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_REG_BUSY and HAL_ADC_STATE_INJ_BUSY bits, set HAL_ADC_STATE_READY bi
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_REG_BUSY|HAL_ADC_STATE_INJ_BUSY), HAL_ADC_STA
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear HAL_ADC_STATE_INJ_BUSY bit */
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1641              		.loc 1 959 7 is_stmt 1 view .LVU452
 1642 0030 626D     		ldr	r2, [r4, #84]
 1643 0032 22F48052 		bic	r2, r2, #4096
 1644 0036 6265     		str	r2, [r4, #84]
 1645              	.L150:
 1646              	.LVL111:
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1647              		.loc 1 964 3 view .LVU453
 1648              		.loc 1 964 3 view .LVU454
 1649 0038 0022     		movs	r2, #0
 1650 003a 84F85020 		strb	r2, [r4, #80]
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 1651              		.loc 1 967 3 view .LVU455
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1652              		.loc 1 968 1 is_stmt 0 view .LVU456
 1653 003e 1846     		mov	r0, r3
 1654 0040 10BD     		pop	{r4, pc}
 1655              	.LVL112:
 1656              	.L157:
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1657              		.loc 1 944 7 is_stmt 1 view .LVU457
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1658              		.loc 1 944 25 is_stmt 0 view .LVU458
 1659 0042 2046     		mov	r0, r4
 1660              	.LVL113:
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1661              		.loc 1 944 25 view .LVU459
 1662 0044 FFF7FEFF 		bl	ADC_Disable
 1663              	.LVL114:
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 1664              		.loc 1 947 7 is_stmt 1 view .LVU460
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 1665              		.loc 1 947 10 is_stmt 0 view .LVU461
 1666 0048 0346     		mov	r3, r0
 1667 004a 0028     		cmp	r0, #0
ARM GAS  /tmp/cckWcrpf.s 			page 64


 1668 004c F4D1     		bne	.L150
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 1669              		.loc 1 951 9 is_stmt 1 view .LVU462
 1670 004e 616D     		ldr	r1, [r4, #84]
 1671 0050 044A     		ldr	r2, .L158
 1672 0052 0A40     		ands	r2, r2, r1
 1673 0054 42F00102 		orr	r2, r2, #1
 1674 0058 6265     		str	r2, [r4, #84]
 1675 005a EDE7     		b	.L150
 1676              	.LVL115:
 1677              	.L152:
 1678              	.LCFI23:
 1679              		.cfi_def_cfa_offset 0
 1680              		.cfi_restore 4
 1681              		.cfi_restore 14
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1682              		.loc 1 928 3 is_stmt 0 view .LVU463
 1683 005c 0223     		movs	r3, #2
 1684              		.loc 1 968 1 view .LVU464
 1685 005e 1846     		mov	r0, r3
 1686              	.LVL116:
 1687              		.loc 1 968 1 view .LVU465
 1688 0060 7047     		bx	lr
 1689              	.L159:
 1690 0062 00BF     		.align	2
 1691              	.L158:
 1692 0064 FEEEFFFF 		.word	-4354
 1693              		.cfi_endproc
 1694              	.LFE146:
 1696              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 1697              		.align	1
 1698              		.global	HAL_ADCEx_MultiModeStart_DMA
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu fpv5-d16
 1704              	HAL_ADCEx_MultiModeStart_DMA:
 1705              	.LVL117:
 1706              	.LFB147:
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversions.
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  pData: Destination Buffer address.
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  Length: Length of data to be transferred from ADC peripheral to memory (in bytes).
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
ARM GAS  /tmp/cckWcrpf.s 			page 65


 1707              		.loc 1 986 1 is_stmt 1 view -0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 104
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              		.loc 1 986 1 is_stmt 0 view .LVU467
 1712 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1713              	.LCFI24:
 1714              		.cfi_def_cfa_offset 24
 1715              		.cfi_offset 4, -24
 1716              		.cfi_offset 5, -20
 1717              		.cfi_offset 6, -16
 1718              		.cfi_offset 7, -12
 1719              		.cfi_offset 8, -8
 1720              		.cfi_offset 14, -4
 1721 0004 9AB0     		sub	sp, sp, #104
 1722              	.LCFI25:
 1723              		.cfi_def_cfa_offset 128
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 1724              		.loc 1 987 3 is_stmt 1 view .LVU468
 1725              	.LVL118:
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 1726              		.loc 1 988 3 view .LVU469
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 1727              		.loc 1 989 3 view .LVU470
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 1728              		.loc 1 992 3 view .LVU471
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1729              		.loc 1 993 3 view .LVU472
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 1730              		.loc 1 994 3 view .LVU473
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc))
 1731              		.loc 1 996 3 view .LVU474
 1732              		.loc 1 996 7 is_stmt 0 view .LVU475
 1733 0006 0468     		ldr	r4, [r0]
 1734 0008 A568     		ldr	r5, [r4, #8]
 1735              		.loc 1 996 6 view .LVU476
 1736 000a 15F0040F 		tst	r5, #4
 1737 000e 56D1     		bne	.L168
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1738              		.loc 1 1003 5 is_stmt 1 view .LVU477
 1739              		.loc 1 1003 5 view .LVU478
 1740 0010 90F85050 		ldrb	r5, [r0, #80]	@ zero_extendqisi2
 1741 0014 012D     		cmp	r5, #1
 1742 0016 54D0     		beq	.L169
 1743              		.loc 1 1003 5 discriminator 2 view .LVU479
 1744 0018 0125     		movs	r5, #1
 1745 001a 80F85050 		strb	r5, [r0, #80]
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 66


1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1746              		.loc 1 1006 5 discriminator 2 view .LVU480
 1747 001e 2A4D     		ldr	r5, .L175
 1748 0020 AC42     		cmp	r4, r5
 1749 0022 0FD0     		beq	.L171
 1750 0024 0023     		movs	r3, #0
 1751 0026 0193     		str	r3, [sp, #4]
 1752              	.L163:
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 1753              		.loc 1 1008 5 view .LVU481
 1754              		.loc 1 1008 21 is_stmt 0 view .LVU482
 1755 0028 019C     		ldr	r4, [sp, #4]
 1756              		.loc 1 1008 8 view .LVU483
 1757 002a 74B1     		cbz	r4, .L172
 1758 002c 1746     		mov	r7, r2
 1759 002e 0E46     		mov	r6, r1
 1760 0030 0546     		mov	r5, r0
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = ADC_Enable(hadc);
 1761              		.loc 1 1022 5 is_stmt 1 view .LVU484
 1762              		.loc 1 1022 23 is_stmt 0 view .LVU485
 1763 0032 FFF7FEFF 		bl	ADC_Enable
 1764              	.LVL119:
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_OK)
 1765              		.loc 1 1023 5 is_stmt 1 view .LVU486
 1766              		.loc 1 1023 8 is_stmt 0 view .LVU487
 1767 0036 0446     		mov	r4, r0
 1768 0038 98B1     		cbz	r0, .L173
 1769              	.LVL120:
 1770              	.L165:
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status  = ADC_Enable(&tmphadcSlave);
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_OK)
 1771              		.loc 1 1029 5 is_stmt 1 view .LVU488
 1772              		.loc 1 1029 8 is_stmt 0 view .LVU489
 1773 003a BCB1     		cbz	r4, .L174
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update Master State */
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear HAL_ADC_STATE_READY and regular conversion results bits, set HAL_ADC_STATE_REG_BUSY 
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_READY|HAL_ADC_STATE_REG_EOC|HAL_ADC_STATE_REG_O
ARM GAS  /tmp/cckWcrpf.s 			page 67


1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC error code to none */
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA error callback */
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Start the DMA channel */
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)pData, Length);
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1774              		.loc 1 1078 7 is_stmt 1 view .LVU490
 1775              		.loc 1 1078 7 view .LVU491
 1776 003c 0023     		movs	r3, #0
 1777 003e 85F85030 		strb	r3, [r5, #80]
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 1778              		.loc 1 1082 5 view .LVU492
 1779              		.loc 1 1082 12 is_stmt 0 view .LVU493
 1780 0042 0AE0     		b	.L161
 1781              	.LVL121:
ARM GAS  /tmp/cckWcrpf.s 			page 68


 1782              	.L171:
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1783              		.loc 1 1006 5 discriminator 1 view .LVU494
 1784 0044 214B     		ldr	r3, .L175+4
 1785 0046 0193     		str	r3, [sp, #4]
 1786 0048 EEE7     		b	.L163
 1787              	.L172:
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1788              		.loc 1 1011 7 is_stmt 1 view .LVU495
 1789 004a 436D     		ldr	r3, [r0, #84]
 1790 004c 43F02003 		orr	r3, r3, #32
 1791 0050 4365     		str	r3, [r0, #84]
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1792              		.loc 1 1014 7 view .LVU496
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1793              		.loc 1 1014 7 view .LVU497
 1794 0052 0023     		movs	r3, #0
 1795 0054 80F85030 		strb	r3, [r0, #80]
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1796              		.loc 1 1016 7 view .LVU498
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1797              		.loc 1 1016 14 is_stmt 0 view .LVU499
 1798 0058 0124     		movs	r4, #1
 1799              	.LVL122:
 1800              	.L161:
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1801              		.loc 1 1084 1 view .LVU500
 1802 005a 2046     		mov	r0, r4
 1803 005c 1AB0     		add	sp, sp, #104
 1804              	.LCFI26:
 1805              		.cfi_remember_state
 1806              		.cfi_def_cfa_offset 24
 1807              		@ sp needed
 1808 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1809              	.LVL123:
 1810              	.L173:
 1811              	.LCFI27:
 1812              		.cfi_restore_state
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1813              		.loc 1 1025 7 is_stmt 1 view .LVU501
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1814              		.loc 1 1025 25 is_stmt 0 view .LVU502
 1815 0062 01A8     		add	r0, sp, #4
 1816              	.LVL124:
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1817              		.loc 1 1025 25 view .LVU503
 1818 0064 FFF7FEFF 		bl	ADC_Enable
 1819              	.LVL125:
 1820 0068 0446     		mov	r4, r0
 1821              	.LVL126:
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1822              		.loc 1 1025 25 view .LVU504
 1823 006a E6E7     		b	.L165
 1824              	.L174:
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1825              		.loc 1 1033 7 is_stmt 1 view .LVU505
ARM GAS  /tmp/cckWcrpf.s 			page 69


 1826 006c 6A6D     		ldr	r2, [r5, #84]
 1827 006e 184B     		ldr	r3, .L175+8
 1828 0070 1340     		ands	r3, r3, r2
 1829 0072 43F48073 		orr	r3, r3, #256
 1830 0076 6B65     		str	r3, [r5, #84]
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1831              		.loc 1 1037 7 view .LVU506
 1832 0078 4FF00008 		mov	r8, #0
 1833 007c C5F85880 		str	r8, [r5, #88]
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1834              		.loc 1 1041 7 view .LVU507
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1835              		.loc 1 1041 11 is_stmt 0 view .LVU508
 1836 0080 EB6C     		ldr	r3, [r5, #76]
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1837              		.loc 1 1041 42 view .LVU509
 1838 0082 144A     		ldr	r2, .L175+12
 1839 0084 DA63     		str	r2, [r3, #60]
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1840              		.loc 1 1044 7 is_stmt 1 view .LVU510
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1841              		.loc 1 1044 11 is_stmt 0 view .LVU511
 1842 0086 EB6C     		ldr	r3, [r5, #76]
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1843              		.loc 1 1044 46 view .LVU512
 1844 0088 134A     		ldr	r2, .L175+16
 1845 008a 1A64     		str	r2, [r3, #64]
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1846              		.loc 1 1047 7 is_stmt 1 view .LVU513
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1847              		.loc 1 1047 11 is_stmt 0 view .LVU514
 1848 008c EB6C     		ldr	r3, [r5, #76]
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1849              		.loc 1 1047 43 view .LVU515
 1850 008e 134A     		ldr	r2, .L175+20
 1851 0090 DA64     		str	r2, [r3, #76]
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1852              		.loc 1 1050 7 is_stmt 1 view .LVU516
 1853              	.LVL127:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1854              		.loc 1 1058 7 view .LVU517
 1855 0092 2B68     		ldr	r3, [r5]
 1856 0094 1C22     		movs	r2, #28
 1857 0096 1A60     		str	r2, [r3]
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1858              		.loc 1 1061 7 view .LVU518
 1859 0098 2A68     		ldr	r2, [r5]
 1860 009a 5368     		ldr	r3, [r2, #4]
 1861 009c 43F01003 		orr	r3, r3, #16
 1862 00a0 5360     		str	r3, [r2, #4]
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1863              		.loc 1 1064 7 view .LVU519
 1864 00a2 3B46     		mov	r3, r7
 1865 00a4 3246     		mov	r2, r6
 1866 00a6 0E49     		ldr	r1, .L175+24
 1867 00a8 E86C     		ldr	r0, [r5, #76]
 1868 00aa FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/cckWcrpf.s 			page 70


 1869              	.LVL128:
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 1870              		.loc 1 1068 7 view .LVU520
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 1871              		.loc 1 1068 7 view .LVU521
 1872 00ae 85F85080 		strb	r8, [r5, #80]
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1873              		.loc 1 1072 7 view .LVU522
 1874 00b2 2A68     		ldr	r2, [r5]
 1875 00b4 9368     		ldr	r3, [r2, #8]
 1876 00b6 43F00403 		orr	r3, r3, #4
 1877 00ba 9360     		str	r3, [r2, #8]
 1878 00bc CDE7     		b	.L161
 1879              	.LVL129:
 1880              	.L168:
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1881              		.loc 1 998 12 is_stmt 0 view .LVU523
 1882 00be 0224     		movs	r4, #2
 1883 00c0 CBE7     		b	.L161
 1884              	.L169:
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1885              		.loc 1 1003 5 view .LVU524
 1886 00c2 0224     		movs	r4, #2
 1887 00c4 C9E7     		b	.L161
 1888              	.L176:
 1889 00c6 00BF     		.align	2
 1890              	.L175:
 1891 00c8 00200240 		.word	1073881088
 1892 00cc 00210240 		.word	1073881344
 1893 00d0 FEF0FFFF 		.word	-3842
 1894 00d4 00000000 		.word	ADC_DMAConvCplt
 1895 00d8 00000000 		.word	ADC_DMAHalfConvCplt
 1896 00dc 00000000 		.word	ADC_DMAError
 1897 00e0 0C230240 		.word	1073881868
 1898              		.cfi_endproc
 1899              	.LFE147:
 1901              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1902              		.align	1
 1903              		.global	HAL_ADCEx_MultiModeStop_DMA
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu fpv5-d16
 1909              	HAL_ADCEx_MultiModeStop_DMA:
 1910              	.LVL130:
 1911              	.LFB148:
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
ARM GAS  /tmp/cckWcrpf.s 			page 71


1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1912              		.loc 1 1100 1 is_stmt 1 view -0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 104
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              		.loc 1 1100 1 is_stmt 0 view .LVU526
 1917 0000 30B5     		push	{r4, r5, lr}
 1918              	.LCFI28:
 1919              		.cfi_def_cfa_offset 12
 1920              		.cfi_offset 4, -12
 1921              		.cfi_offset 5, -8
 1922              		.cfi_offset 14, -4
 1923 0002 9BB0     		sub	sp, sp, #108
 1924              	.LCFI29:
 1925              		.cfi_def_cfa_offset 120
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 1926              		.loc 1 1101 3 is_stmt 1 view .LVU527
 1927              	.LVL131:
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 1928              		.loc 1 1102 3 view .LVU528
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 1929              		.loc 1 1103 3 view .LVU529
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 1930              		.loc 1 1106 3 view .LVU530
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1931              		.loc 1 1109 3 view .LVU531
 1932              		.loc 1 1109 3 view .LVU532
 1933 0004 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1934 0008 012B     		cmp	r3, #1
 1935 000a 67D0     		beq	.L188
 1936 000c 0446     		mov	r4, r0
 1937              		.loc 1 1109 3 discriminator 2 view .LVU533
 1938 000e 0123     		movs	r3, #1
 1939 0010 80F85030 		strb	r3, [r0, #80]
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 1940              		.loc 1 1113 3 discriminator 2 view .LVU534
 1941              		.loc 1 1113 21 is_stmt 0 discriminator 2 view .LVU535
 1942 0014 6C21     		movs	r1, #108
 1943 0016 FFF7FEFF 		bl	ADC_ConversionStop
 1944              	.LVL132:
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 1945              		.loc 1 1116 3 is_stmt 1 discriminator 2 view .LVU536
 1946              		.loc 1 1116 6 is_stmt 0 discriminator 2 view .LVU537
 1947 001a 0546     		mov	r5, r0
ARM GAS  /tmp/cckWcrpf.s 			page 72


 1948 001c 0028     		cmp	r0, #0
 1949 001e 57D1     		bne	.L179
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1950              		.loc 1 1119 5 is_stmt 1 view .LVU538
 1951 0020 2268     		ldr	r2, [r4]
 1952 0022 2F4B     		ldr	r3, .L195
 1953 0024 9A42     		cmp	r2, r3
 1954 0026 07D0     		beq	.L191
 1955              		.loc 1 1119 5 is_stmt 0 discriminator 2 view .LVU539
 1956 0028 0023     		movs	r3, #0
 1957 002a 0193     		str	r3, [sp, #4]
 1958              	.L181:
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 1959              		.loc 1 1121 5 is_stmt 1 view .LVU540
 1960              		.loc 1 1121 21 is_stmt 0 view .LVU541
 1961 002c 019B     		ldr	r3, [sp, #4]
 1962              		.loc 1 1121 8 view .LVU542
 1963 002e 3BB1     		cbz	r3, .L192
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave*/
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 1964              		.loc 1 1136 5 is_stmt 1 view .LVU543
 1965              		.loc 1 1136 17 is_stmt 0 view .LVU544
 1966 0030 FFF7FEFF 		bl	HAL_GetTick
 1967              	.LVL133:
 1968              		.loc 1 1136 17 view .LVU545
 1969 0034 0546     		mov	r5, r0
 1970              	.LVL134:
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          ||
 1971              		.loc 1 1138 5 is_stmt 1 view .LVU546
 1972              		.loc 1 1138 10 is_stmt 0 view .LVU547
 1973 0036 11E0     		b	.L183
 1974              	.LVL135:
 1975              	.L191:
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1976              		.loc 1 1119 5 discriminator 1 view .LVU548
 1977 0038 03F58073 		add	r3, r3, #256
 1978 003c 0193     		str	r3, [sp, #4]
 1979 003e F5E7     		b	.L181
 1980              	.L192:
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 73


 1981              		.loc 1 1124 7 is_stmt 1 view .LVU549
 1982 0040 636D     		ldr	r3, [r4, #84]
 1983 0042 43F02003 		orr	r3, r3, #32
 1984 0046 6365     		str	r3, [r4, #84]
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1985              		.loc 1 1127 7 view .LVU550
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1986              		.loc 1 1127 7 view .LVU551
 1987 0048 0023     		movs	r3, #0
 1988 004a 84F85030 		strb	r3, [r4, #80]
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1989              		.loc 1 1129 7 view .LVU552
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1990              		.loc 1 1129 14 is_stmt 0 view .LVU553
 1991 004e 0125     		movs	r5, #1
 1992 0050 41E0     		b	.L178
 1993              	.LVL136:
 1994              	.L184:
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if((HAL_GetTick()-tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 1995              		.loc 1 1141 7 is_stmt 1 view .LVU554
 1996              		.loc 1 1141 11 is_stmt 0 view .LVU555
 1997 0052 FFF7FEFF 		bl	HAL_GetTick
 1998              	.LVL137:
 1999              		.loc 1 1141 24 view .LVU556
 2000 0056 401B     		subs	r0, r0, r5
 2001              		.loc 1 1141 9 view .LVU557
 2002 0058 0528     		cmp	r0, #5
 2003 005a 1FD8     		bhi	.L193
 2004              	.L183:
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2005              		.loc 1 1138 11 view .LVU558
 2006 005c 2368     		ldr	r3, [r4]
 2007 005e 9B68     		ldr	r3, [r3, #8]
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2008              		.loc 1 1138 10 view .LVU559
 2009 0060 13F0040F 		tst	r3, #4
 2010 0064 F5D1     		bne	.L184
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2011              		.loc 1 1139 11 discriminator 1 view .LVU560
 2012 0066 019B     		ldr	r3, [sp, #4]
 2013 0068 9B68     		ldr	r3, [r3, #8]
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2014              		.loc 1 1138 60 discriminator 1 view .LVU561
 2015 006a 13F0040F 		tst	r3, #4
 2016 006e F0D1     		bne	.L184
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cckWcrpf.s 			page 74


1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = HAL_DMA_Abort(hadc->DMA_Handle);
 2017              		.loc 1 1157 5 is_stmt 1 view .LVU562
 2018              		.loc 1 1157 23 is_stmt 0 view .LVU563
 2019 0070 E06C     		ldr	r0, [r4, #76]
 2020 0072 FFF7FEFF 		bl	HAL_DMA_Abort
 2021              	.LVL138:
 2022 0076 0546     		mov	r5, r0
 2023              	.LVL139:
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_ERROR)
 2024              		.loc 1 1160 5 is_stmt 1 view .LVU564
 2025              		.loc 1 1160 8 is_stmt 0 view .LVU565
 2026 0078 0128     		cmp	r0, #1
 2027 007a 18D0     		beq	.L194
 2028              	.L185:
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2029              		.loc 1 1167 5 is_stmt 1 view .LVU566
 2030 007c 2268     		ldr	r2, [r4]
 2031 007e 5368     		ldr	r3, [r2, #4]
 2032 0080 23F01003 		bic	r3, r3, #16
 2033 0084 5360     		str	r3, [r2, #4]
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status " only if DMA channel disabling passed, to keep in */
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_OK)
 2034              		.loc 1 1174 5 view .LVU567
 2035              		.loc 1 1174 8 is_stmt 0 view .LVU568
 2036 0086 BDB9     		cbnz	r5, .L186
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)         &&
 2037              		.loc 1 1177 7 is_stmt 1 view .LVU569
 2038              		.loc 1 1177 12 is_stmt 0 view .LVU570
 2039 0088 2046     		mov	r0, r4
 2040              	.LVL140:
 2041              		.loc 1 1177 12 view .LVU571
 2042 008a FFF7FEFF 		bl	ADC_Disable
 2043              	.LVL141:
 2044              		.loc 1 1177 10 view .LVU572
 2045 008e C8B9     		cbnz	r0, .L187
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) == HAL_OK)   )
 2046              		.loc 1 1178 12 discriminator 1 view .LVU573
ARM GAS  /tmp/cckWcrpf.s 			page 75


 2047 0090 01A8     		add	r0, sp, #4
 2048 0092 FFF7FEFF 		bl	ADC_Disable
 2049              	.LVL142:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) == HAL_OK)   )
 2050              		.loc 1 1177 49 discriminator 1 view .LVU574
 2051 0096 A8B9     		cbnz	r0, .L187
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status  = HAL_OK;
 2052              		.loc 1 1180 25 view .LVU575
 2053 0098 0546     		mov	r5, r0
 2054 009a 13E0     		b	.L187
 2055              	.LVL143:
 2056              	.L193:
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2057              		.loc 1 1144 9 is_stmt 1 view .LVU576
 2058 009c 636D     		ldr	r3, [r4, #84]
 2059 009e 43F01003 		orr	r3, r3, #16
 2060 00a2 6365     		str	r3, [r4, #84]
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2061              		.loc 1 1147 9 view .LVU577
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2062              		.loc 1 1147 9 view .LVU578
 2063 00a4 0023     		movs	r3, #0
 2064 00a6 84F85030 		strb	r3, [r4, #80]
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2065              		.loc 1 1149 9 view .LVU579
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2066              		.loc 1 1149 16 is_stmt 0 view .LVU580
 2067 00aa 0125     		movs	r5, #1
 2068              	.LVL144:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2069              		.loc 1 1149 16 view .LVU581
 2070 00ac 13E0     		b	.L178
 2071              	.LVL145:
 2072              	.L194:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2073              		.loc 1 1163 7 is_stmt 1 view .LVU582
 2074 00ae 636D     		ldr	r3, [r4, #84]
 2075 00b0 43F04003 		orr	r3, r3, #64
 2076 00b4 6365     		str	r3, [r4, #84]
 2077 00b6 E1E7     		b	.L185
 2078              	.L186:
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_Disable(hadc);
 2079              		.loc 1 1185 7 view .LVU583
 2080 00b8 2046     		mov	r0, r4
 2081              	.LVL146:
 2082              		.loc 1 1185 7 is_stmt 0 view .LVU584
 2083 00ba FFF7FEFF 		bl	ADC_Disable
 2084              	.LVL147:
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
 2085              		.loc 1 1186 7 is_stmt 1 view .LVU585
 2086 00be 01A8     		add	r0, sp, #4
 2087 00c0 FFF7FEFF 		bl	ADC_Disable
ARM GAS  /tmp/cckWcrpf.s 			page 76


 2088              	.LVL148:
 2089              	.L187:
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Change ADC state (ADC master) */
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY and HAL_ADC_STATE_INJ_BUSY bits, set HAL_ADC_STATE_READY bit */
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_REG_BUSY|HAL_ADC_STATE_INJ_BUSY), HAL_ADC_STATE_R
 2090              		.loc 1 1190 5 view .LVU586
 2091 00c4 626D     		ldr	r2, [r4, #84]
 2092 00c6 074B     		ldr	r3, .L195+4
 2093 00c8 1340     		ands	r3, r3, r2
 2094 00ca 43F00103 		orr	r3, r3, #1
 2095 00ce 6365     		str	r3, [r4, #84]
 2096              	.LVL149:
 2097              	.L179:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2098              		.loc 1 1195 3 view .LVU587
 2099              		.loc 1 1195 3 view .LVU588
 2100 00d0 0023     		movs	r3, #0
 2101 00d2 84F85030 		strb	r3, [r4, #80]
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 2102              		.loc 1 1198 3 view .LVU589
 2103              	.LVL150:
 2104              	.L178:
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2105              		.loc 1 1199 1 is_stmt 0 view .LVU590
 2106 00d6 2846     		mov	r0, r5
 2107 00d8 1BB0     		add	sp, sp, #108
 2108              	.LCFI30:
 2109              		.cfi_remember_state
 2110              		.cfi_def_cfa_offset 12
 2111              		@ sp needed
 2112 00da 30BD     		pop	{r4, r5, pc}
 2113              	.LVL151:
 2114              	.L188:
 2115              	.LCFI31:
 2116              		.cfi_restore_state
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2117              		.loc 1 1109 3 view .LVU591
 2118 00dc 0225     		movs	r5, #2
 2119 00de FAE7     		b	.L178
 2120              	.L196:
 2121              		.align	2
 2122              	.L195:
 2123 00e0 00200240 		.word	1073881088
 2124 00e4 FEEEFFFF 		.word	-4354
 2125              		.cfi_endproc
 2126              	.LFE148:
 2128              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 2129              		.align	1
 2130              		.global	HAL_ADCEx_MultiModeGetValue
 2131              		.syntax unified
ARM GAS  /tmp/cckWcrpf.s 			page 77


 2132              		.thumb
 2133              		.thumb_func
 2134              		.fpu fpv5-d16
 2136              	HAL_ADCEx_MultiModeGetValue:
 2137              	.LVL152:
 2138              	.LFB149:
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC Master (handle of ADC Slave must not be used)
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval The converted data values.
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2139              		.loc 1 1208 1 is_stmt 1 view -0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 0
 2142              		@ frame_needed = 0, uses_anonymous_args = 0
 2143              		@ link register save eliminated.
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2144              		.loc 1 1209 3 view .LVU593
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2145              		.loc 1 1212 3 view .LVU594
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
 2146              		.loc 1 1215 3 view .LVU595
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
 2147              		.loc 1 1218 3 view .LVU596
 2148              		.loc 1 1218 23 is_stmt 0 view .LVU597
 2149 0000 014B     		ldr	r3, .L198
 2150 0002 D868     		ldr	r0, [r3, #12]
 2151              	.LVL153:
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2152              		.loc 1 1219 1 view .LVU598
 2153 0004 7047     		bx	lr
 2154              	.L199:
 2155 0006 00BF     		.align	2
 2156              	.L198:
 2157 0008 00230240 		.word	1073881856
 2158              		.cfi_endproc
 2159              	.LFE149:
 2161              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 2162              		.align	1
 2163              		.global	HAL_ADCEx_InjectedGetValue
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.fpu fpv5-d16
 2169              	HAL_ADCEx_InjectedGetValue:
 2170              	.LVL154:
 2171              	.LFB150:
ARM GAS  /tmp/cckWcrpf.s 			page 78


1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            to flag JEOC.
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2172              		.loc 1 1251 1 is_stmt 1 view -0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 2176              		@ link register save eliminated.
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0;
 2177              		.loc 1 1252 3 view .LVU600
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2178              		.loc 1 1255 3 view .LVU601
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 2179              		.loc 1 1256 3 view .LVU602
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get ADC converted value */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   switch(InjectedRank)
 2180              		.loc 1 1260 3 view .LVU603
 2181 0000 0329     		cmp	r1, #3
 2182 0002 0BD0     		beq	.L201
 2183 0004 0429     		cmp	r1, #4
 2184 0006 05D0     		beq	.L202
 2185 0008 0229     		cmp	r1, #2
 2186 000a 0BD0     		beq	.L207
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cckWcrpf.s 			page 79


1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     default:
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 2187              		.loc 1 1273 7 view .LVU604
 2188              		.loc 1 1273 21 is_stmt 0 view .LVU605
 2189 000c 0368     		ldr	r3, [r0]
 2190              		.loc 1 1273 15 view .LVU606
 2191 000e D3F88000 		ldr	r0, [r3, #128]
 2192              	.LVL155:
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2193              		.loc 1 1274 7 is_stmt 1 view .LVU607
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return ADC converted value */
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_jdr;
 2194              		.loc 1 1278 3 view .LVU608
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2195              		.loc 1 1279 1 is_stmt 0 view .LVU609
 2196 0012 7047     		bx	lr
 2197              	.LVL156:
 2198              	.L202:
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2199              		.loc 1 1263 7 is_stmt 1 view .LVU610
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2200              		.loc 1 1263 21 is_stmt 0 view .LVU611
 2201 0014 0368     		ldr	r3, [r0]
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2202              		.loc 1 1263 15 view .LVU612
 2203 0016 D3F88C00 		ldr	r0, [r3, #140]
 2204              	.LVL157:
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 2205              		.loc 1 1264 7 is_stmt 1 view .LVU613
 2206 001a 7047     		bx	lr
 2207              	.LVL158:
 2208              	.L201:
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2209              		.loc 1 1266 7 view .LVU614
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2210              		.loc 1 1266 21 is_stmt 0 view .LVU615
 2211 001c 0368     		ldr	r3, [r0]
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2212              		.loc 1 1266 15 view .LVU616
 2213 001e D3F88800 		ldr	r0, [r3, #136]
 2214              	.LVL159:
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 2215              		.loc 1 1267 7 is_stmt 1 view .LVU617
 2216 0022 7047     		bx	lr
 2217              	.LVL160:
ARM GAS  /tmp/cckWcrpf.s 			page 80


 2218              	.L207:
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2219              		.loc 1 1269 7 view .LVU618
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2220              		.loc 1 1269 21 is_stmt 0 view .LVU619
 2221 0024 0368     		ldr	r3, [r0]
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2222              		.loc 1 1269 15 view .LVU620
 2223 0026 D3F88400 		ldr	r0, [r3, #132]
 2224              	.LVL161:
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 2225              		.loc 1 1270 7 is_stmt 1 view .LVU621
 2226 002a 7047     		bx	lr
 2227              		.cfi_endproc
 2228              	.LFE150:
 2230              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 2231              		.align	1
 2232              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 2233              		.syntax unified
 2234              		.thumb
 2235              		.thumb_func
 2236              		.fpu fpv5-d16
 2238              	HAL_ADCEx_InjectedConvCpltCallback:
 2239              	.LVL162:
 2240              	.LFB151:
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2241              		.loc 1 1287 1 view -0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 0
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
 2245              		@ link register save eliminated.
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2246              		.loc 1 1289 3 view .LVU623
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2247              		.loc 1 1294 1 is_stmt 0 view .LVU624
 2248 0000 7047     		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE151:
 2252              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 2253              		.align	1
 2254              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2258              		.fpu fpv5-d16
ARM GAS  /tmp/cckWcrpf.s 			page 81


 2260              	HAL_ADCEx_InjectedQueueOverflowCallback:
 2261              	.LVL163:
 2262              	.LFB152:
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             contexts).
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef* hadc)
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2263              		.loc 1 1307 1 is_stmt 1 view -0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
 2267              		@ link register save eliminated.
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2268              		.loc 1 1309 3 view .LVU626
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2269              		.loc 1 1314 1 is_stmt 0 view .LVU627
 2270 0000 7047     		bx	lr
 2271              		.cfi_endproc
 2272              	.LFE152:
 2274              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 2275              		.align	1
 2276              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 2277              		.syntax unified
 2278              		.thumb
 2279              		.thumb_func
 2280              		.fpu fpv5-d16
 2282              	HAL_ADCEx_LevelOutOfWindow2Callback:
 2283              	.LVL164:
 2284              	.LFB153:
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef* hadc)
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2285              		.loc 1 1322 1 is_stmt 1 view -0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cckWcrpf.s 			page 82


1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2290              		.loc 1 1324 3 view .LVU629
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2291              		.loc 1 1329 1 is_stmt 0 view .LVU630
 2292 0000 7047     		bx	lr
 2293              		.cfi_endproc
 2294              	.LFE153:
 2296              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 2297              		.align	1
 2298              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2302              		.fpu fpv5-d16
 2304              	HAL_ADCEx_LevelOutOfWindow3Callback:
 2305              	.LVL165:
 2306              	.LFB154:
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef* hadc)
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2307              		.loc 1 1337 1 is_stmt 1 view -0
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 0
 2310              		@ frame_needed = 0, uses_anonymous_args = 0
 2311              		@ link register save eliminated.
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2312              		.loc 1 1339 3 view .LVU632
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2313              		.loc 1 1344 1 is_stmt 0 view .LVU633
 2314 0000 7047     		bx	lr
 2315              		.cfi_endproc
 2316              	.LFE154:
 2318              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 2319              		.align	1
 2320              		.weak	HAL_ADCEx_EndOfSamplingCallback
 2321              		.syntax unified
 2322              		.thumb
 2323              		.thumb_func
 2324              		.fpu fpv5-d16
 2326              	HAL_ADCEx_EndOfSamplingCallback:
 2327              	.LVL166:
 2328              	.LFB155:
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 83


1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef* hadc)
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2329              		.loc 1 1353 1 is_stmt 1 view -0
 2330              		.cfi_startproc
 2331              		@ args = 0, pretend = 0, frame = 0
 2332              		@ frame_needed = 0, uses_anonymous_args = 0
 2333              		@ link register save eliminated.
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2334              		.loc 1 1355 3 view .LVU635
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2335              		.loc 1 1360 1 is_stmt 0 view .LVU636
 2336 0000 7047     		bx	lr
 2337              		.cfi_endproc
 2338              	.LFE155:
 2340              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 2341              		.align	1
 2342              		.global	HAL_ADCEx_RegularStop
 2343              		.syntax unified
 2344              		.thumb
 2345              		.thumb_func
 2346              		.fpu fpv5-d16
 2348              	HAL_ADCEx_RegularStop:
 2349              	.LVL167:
 2350              	.LFB156:
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef* hadc)
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2351              		.loc 1 1370 1 is_stmt 1 view -0
 2352              		.cfi_startproc
 2353              		@ args = 0, pretend = 0, frame = 0
 2354              		@ frame_needed = 0, uses_anonymous_args = 0
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2355              		.loc 1 1371 3 view .LVU638
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2356              		.loc 1 1374 3 view .LVU639
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
ARM GAS  /tmp/cckWcrpf.s 			page 84


1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2357              		.loc 1 1377 3 view .LVU640
 2358              		.loc 1 1377 3 view .LVU641
 2359 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2360 0004 012B     		cmp	r3, #1
 2361 0006 28D0     		beq	.L217
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2362              		.loc 1 1370 1 is_stmt 0 discriminator 2 view .LVU642
 2363 0008 10B5     		push	{r4, lr}
 2364              	.LCFI32:
 2365              		.cfi_def_cfa_offset 8
 2366              		.cfi_offset 4, -8
 2367              		.cfi_offset 14, -4
 2368 000a 0446     		mov	r4, r0
 2369              		.loc 1 1377 3 is_stmt 1 discriminator 2 view .LVU643
 2370 000c 0123     		movs	r3, #1
 2371 000e 80F85030 		strb	r3, [r0, #80]
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2372              		.loc 1 1380 3 discriminator 2 view .LVU644
 2373              		.loc 1 1380 21 is_stmt 0 discriminator 2 view .LVU645
 2374 0012 0C21     		movs	r1, #12
 2375 0014 FFF7FEFF 		bl	ADC_ConversionStop
 2376              	.LVL168:
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 2377              		.loc 1 1384 3 is_stmt 1 discriminator 2 view .LVU646
 2378              		.loc 1 1384 6 is_stmt 0 discriminator 2 view .LVU647
 2379 0018 0346     		mov	r3, r0
 2380 001a 60B9     		cbnz	r0, .L215
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2381              		.loc 1 1387 5 is_stmt 1 view .LVU648
 2382 001c 626D     		ldr	r2, [r4, #84]
 2383 001e 22F48072 		bic	r2, r2, #256
 2384 0022 6265     		str	r2, [r4, #84]
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 2385              		.loc 1 1389 5 view .LVU649
 2386              		.loc 1 1389 9 is_stmt 0 view .LVU650
 2387 0024 2268     		ldr	r2, [r4]
 2388 0026 9268     		ldr	r2, [r2, #8]
 2389              		.loc 1 1389 8 view .LVU651
 2390 0028 12F0080F 		tst	r2, #8
 2391 002c 08D0     		beq	.L222
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status  = ADC_Disable(hadc);
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Change ADC state */
ARM GAS  /tmp/cckWcrpf.s 			page 85


1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2392              		.loc 1 1406 7 is_stmt 1 view .LVU652
 2393 002e 626D     		ldr	r2, [r4, #84]
 2394 0030 42F48052 		orr	r2, r2, #4096
 2395 0034 6265     		str	r2, [r4, #84]
 2396              	.L215:
 2397              	.LVL169:
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2398              		.loc 1 1411 3 view .LVU653
 2399              		.loc 1 1411 3 view .LVU654
 2400 0036 0022     		movs	r2, #0
 2401 0038 84F85020 		strb	r2, [r4, #80]
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 2402              		.loc 1 1414 3 view .LVU655
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2403              		.loc 1 1415 1 is_stmt 0 view .LVU656
 2404 003c 1846     		mov	r0, r3
 2405 003e 10BD     		pop	{r4, pc}
 2406              	.LVL170:
 2407              	.L222:
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2408              		.loc 1 1392 7 is_stmt 1 view .LVU657
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2409              		.loc 1 1392 25 is_stmt 0 view .LVU658
 2410 0040 2046     		mov	r0, r4
 2411              	.LVL171:
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2412              		.loc 1 1392 25 view .LVU659
 2413 0042 FFF7FEFF 		bl	ADC_Disable
 2414              	.LVL172:
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2415              		.loc 1 1395 7 is_stmt 1 view .LVU660
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2416              		.loc 1 1395 10 is_stmt 0 view .LVU661
 2417 0046 0346     		mov	r3, r0
 2418 0048 0028     		cmp	r0, #0
 2419 004a F4D1     		bne	.L215
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2420              		.loc 1 1399 9 is_stmt 1 view .LVU662
 2421 004c 616D     		ldr	r1, [r4, #84]
 2422 004e 044A     		ldr	r2, .L223
 2423 0050 0A40     		ands	r2, r2, r1
 2424 0052 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/cckWcrpf.s 			page 86


 2425 0056 6265     		str	r2, [r4, #84]
 2426 0058 EDE7     		b	.L215
 2427              	.LVL173:
 2428              	.L217:
 2429              	.LCFI33:
 2430              		.cfi_def_cfa_offset 0
 2431              		.cfi_restore 4
 2432              		.cfi_restore 14
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2433              		.loc 1 1377 3 is_stmt 0 view .LVU663
 2434 005a 0223     		movs	r3, #2
 2435              		.loc 1 1415 1 view .LVU664
 2436 005c 1846     		mov	r0, r3
 2437              	.LVL174:
 2438              		.loc 1 1415 1 view .LVU665
 2439 005e 7047     		bx	lr
 2440              	.L224:
 2441              		.align	2
 2442              	.L223:
 2443 0060 FEEFFFFF 		.word	-4098
 2444              		.cfi_endproc
 2445              	.LFE156:
 2447              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 2448              		.align	1
 2449              		.global	HAL_ADCEx_RegularStop_IT
 2450              		.syntax unified
 2451              		.thumb
 2452              		.thumb_func
 2453              		.fpu fpv5-d16
 2455              	HAL_ADCEx_RegularStop_IT:
 2456              	.LVL175:
 2457              	.LFB157:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         on injected group.
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef* hadc)
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2458              		.loc 1 1427 1 is_stmt 1 view -0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 0
 2461              		@ frame_needed = 0, uses_anonymous_args = 0
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2462              		.loc 1 1428 3 view .LVU667
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2463              		.loc 1 1431 3 view .LVU668
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
ARM GAS  /tmp/cckWcrpf.s 			page 87


 2464              		.loc 1 1434 3 view .LVU669
 2465              		.loc 1 1434 3 view .LVU670
 2466 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2467 0004 012B     		cmp	r3, #1
 2468 0006 2DD0     		beq	.L229
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2469              		.loc 1 1427 1 is_stmt 0 discriminator 2 view .LVU671
 2470 0008 10B5     		push	{r4, lr}
 2471              	.LCFI34:
 2472              		.cfi_def_cfa_offset 8
 2473              		.cfi_offset 4, -8
 2474              		.cfi_offset 14, -4
 2475 000a 0446     		mov	r4, r0
 2476              		.loc 1 1434 3 is_stmt 1 discriminator 2 view .LVU672
 2477 000c 0123     		movs	r3, #1
 2478 000e 80F85030 		strb	r3, [r0, #80]
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2479              		.loc 1 1437 3 discriminator 2 view .LVU673
 2480              		.loc 1 1437 21 is_stmt 0 discriminator 2 view .LVU674
 2481 0012 0C21     		movs	r1, #12
 2482 0014 FFF7FEFF 		bl	ADC_ConversionStop
 2483              	.LVL176:
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 2484              		.loc 1 1441 3 is_stmt 1 discriminator 2 view .LVU675
 2485              		.loc 1 1441 6 is_stmt 0 discriminator 2 view .LVU676
 2486 0018 0346     		mov	r3, r0
 2487 001a 88B9     		cbnz	r0, .L227
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2488              		.loc 1 1444 5 is_stmt 1 view .LVU677
 2489 001c 626D     		ldr	r2, [r4, #84]
 2490 001e 22F48072 		bic	r2, r2, #256
 2491 0022 6265     		str	r2, [r4, #84]
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 2492              		.loc 1 1447 5 view .LVU678
 2493 0024 2168     		ldr	r1, [r4]
 2494 0026 4A68     		ldr	r2, [r1, #4]
 2495 0028 22F01C02 		bic	r2, r2, #28
 2496 002c 4A60     		str	r2, [r1, #4]
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 2497              		.loc 1 1450 5 view .LVU679
 2498              		.loc 1 1450 9 is_stmt 0 view .LVU680
 2499 002e 2268     		ldr	r2, [r4]
 2500 0030 9268     		ldr	r2, [r2, #8]
 2501              		.loc 1 1450 8 view .LVU681
 2502 0032 12F0080F 		tst	r2, #8
 2503 0036 08D0     		beq	.L234
ARM GAS  /tmp/cckWcrpf.s 			page 88


1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status  = ADC_Disable(hadc);
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Change ADC state */
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2504              		.loc 1 1463 7 is_stmt 1 view .LVU682
 2505 0038 626D     		ldr	r2, [r4, #84]
 2506 003a 42F48052 		orr	r2, r2, #4096
 2507 003e 6265     		str	r2, [r4, #84]
 2508              	.L227:
 2509              	.LVL177:
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2510              		.loc 1 1468 3 view .LVU683
 2511              		.loc 1 1468 3 view .LVU684
 2512 0040 0022     		movs	r2, #0
 2513 0042 84F85020 		strb	r2, [r4, #80]
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 2514              		.loc 1 1471 3 view .LVU685
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2515              		.loc 1 1472 1 is_stmt 0 view .LVU686
 2516 0046 1846     		mov	r0, r3
 2517 0048 10BD     		pop	{r4, pc}
 2518              	.LVL178:
 2519              	.L234:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 2520              		.loc 1 1452 7 is_stmt 1 view .LVU687
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 2521              		.loc 1 1452 25 is_stmt 0 view .LVU688
 2522 004a 2046     		mov	r0, r4
 2523              	.LVL179:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 2524              		.loc 1 1452 25 view .LVU689
 2525 004c FFF7FEFF 		bl	ADC_Disable
 2526              	.LVL180:
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2527              		.loc 1 1454 7 is_stmt 1 view .LVU690
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2528              		.loc 1 1454 10 is_stmt 0 view .LVU691
 2529 0050 0346     		mov	r3, r0
 2530 0052 0028     		cmp	r0, #0
 2531 0054 F4D1     		bne	.L227
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2532              		.loc 1 1458 9 is_stmt 1 view .LVU692
ARM GAS  /tmp/cckWcrpf.s 			page 89


 2533 0056 616D     		ldr	r1, [r4, #84]
 2534 0058 044A     		ldr	r2, .L235
 2535 005a 0A40     		ands	r2, r2, r1
 2536 005c 42F00102 		orr	r2, r2, #1
 2537 0060 6265     		str	r2, [r4, #84]
 2538 0062 EDE7     		b	.L227
 2539              	.LVL181:
 2540              	.L229:
 2541              	.LCFI35:
 2542              		.cfi_def_cfa_offset 0
 2543              		.cfi_restore 4
 2544              		.cfi_restore 14
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2545              		.loc 1 1434 3 is_stmt 0 view .LVU693
 2546 0064 0223     		movs	r3, #2
 2547              		.loc 1 1472 1 view .LVU694
 2548 0066 1846     		mov	r0, r3
 2549              	.LVL182:
 2550              		.loc 1 1472 1 view .LVU695
 2551 0068 7047     		bx	lr
 2552              	.L236:
 2553 006a 00BF     		.align	2
 2554              	.L235:
 2555 006c FEEFFFFF 		.word	-4098
 2556              		.cfi_endproc
 2557              	.LFE157:
 2559              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 2560              		.align	1
 2561              		.global	HAL_ADCEx_RegularStop_DMA
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2565              		.fpu fpv5-d16
 2567              	HAL_ADCEx_RegularStop_DMA:
 2568              	.LVL183:
 2569              	.LFB158:
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         on injected group.
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef* hadc)
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2570              		.loc 1 1487 1 is_stmt 1 view -0
 2571              		.cfi_startproc
 2572              		@ args = 0, pretend = 0, frame = 0
 2573              		@ frame_needed = 0, uses_anonymous_args = 0
 2574              		.loc 1 1487 1 is_stmt 0 view .LVU697
 2575 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/cckWcrpf.s 			page 90


 2576              	.LCFI36:
 2577              		.cfi_def_cfa_offset 16
 2578              		.cfi_offset 3, -16
 2579              		.cfi_offset 4, -12
 2580              		.cfi_offset 5, -8
 2581              		.cfi_offset 14, -4
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2582              		.loc 1 1488 3 is_stmt 1 view .LVU698
 2583              	.LVL184:
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2584              		.loc 1 1491 3 view .LVU699
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2585              		.loc 1 1494 3 view .LVU700
 2586              		.loc 1 1494 3 view .LVU701
 2587 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2588 0006 012B     		cmp	r3, #1
 2589 0008 40D0     		beq	.L244
 2590 000a 0446     		mov	r4, r0
 2591              		.loc 1 1494 3 discriminator 2 view .LVU702
 2592 000c 0123     		movs	r3, #1
 2593 000e 80F85030 		strb	r3, [r0, #80]
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2594              		.loc 1 1497 3 discriminator 2 view .LVU703
 2595              		.loc 1 1497 21 is_stmt 0 discriminator 2 view .LVU704
 2596 0012 0C21     		movs	r1, #12
 2597 0014 FFF7FEFF 		bl	ADC_ConversionStop
 2598              	.LVL185:
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 2599              		.loc 1 1501 3 is_stmt 1 discriminator 2 view .LVU705
 2600              		.loc 1 1501 6 is_stmt 0 discriminator 2 view .LVU706
 2601 0018 0546     		mov	r5, r0
 2602 001a 20B1     		cbz	r0, .L246
 2603              	.LVL186:
 2604              	.L239:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC DMA */
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0 |ADC_CFGR_DMNGT_1, 0);
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = HAL_DMA_Abort(hadc->DMA_Handle);
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  != HAL_OK)
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cckWcrpf.s 			page 91


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status " only if DMA channel disabling passed, to keep in */
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status  = ADC_Disable(hadc);
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_Disable(hadc);
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Change ADC state */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2605              		.loc 1 1552 3 is_stmt 1 view .LVU707
 2606              		.loc 1 1552 3 view .LVU708
 2607 001c 0023     		movs	r3, #0
 2608 001e 84F85030 		strb	r3, [r4, #80]
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 2609              		.loc 1 1555 3 view .LVU709
 2610              	.LVL187:
 2611              	.L238:
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2612              		.loc 1 1556 1 is_stmt 0 view .LVU710
 2613 0022 2846     		mov	r0, r5
 2614 0024 38BD     		pop	{r3, r4, r5, pc}
 2615              	.LVL188:
 2616              	.L246:
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2617              		.loc 1 1504 5 is_stmt 1 view .LVU711
 2618 0026 636D     		ldr	r3, [r4, #84]
 2619 0028 23F48073 		bic	r3, r3, #256
ARM GAS  /tmp/cckWcrpf.s 			page 92


 2620 002c 6365     		str	r3, [r4, #84]
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2621              		.loc 1 1507 5 view .LVU712
 2622 002e 2268     		ldr	r2, [r4]
 2623 0030 D368     		ldr	r3, [r2, #12]
 2624 0032 23F00303 		bic	r3, r3, #3
 2625 0036 D360     		str	r3, [r2, #12]
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2626              		.loc 1 1511 5 view .LVU713
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2627              		.loc 1 1511 23 is_stmt 0 view .LVU714
 2628 0038 E06C     		ldr	r0, [r4, #76]
 2629              	.LVL189:
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2630              		.loc 1 1511 23 view .LVU715
 2631 003a FFF7FEFF 		bl	HAL_DMA_Abort
 2632              	.LVL190:
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2633              		.loc 1 1514 5 is_stmt 1 view .LVU716
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2634              		.loc 1 1514 8 is_stmt 0 view .LVU717
 2635 003e 0546     		mov	r5, r0
 2636 0040 18B1     		cbz	r0, .L240
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2637              		.loc 1 1517 7 is_stmt 1 view .LVU718
 2638 0042 636D     		ldr	r3, [r4, #84]
 2639 0044 43F04003 		orr	r3, r3, #64
 2640 0048 6365     		str	r3, [r4, #84]
 2641              	.L240:
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2642              		.loc 1 1521 5 view .LVU719
 2643 004a 2268     		ldr	r2, [r4]
 2644 004c 5368     		ldr	r3, [r2, #4]
 2645 004e 23F01003 		bic	r3, r3, #16
 2646 0052 5360     		str	r3, [r2, #4]
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2647              		.loc 1 1526 5 view .LVU720
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2648              		.loc 1 1526 9 is_stmt 0 view .LVU721
 2649 0054 2368     		ldr	r3, [r4]
 2650 0056 9B68     		ldr	r3, [r3, #8]
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2651              		.loc 1 1526 8 view .LVU722
 2652 0058 13F0080F 		tst	r3, #8
 2653 005c 11D1     		bne	.L241
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2654              		.loc 1 1528 7 is_stmt 1 view .LVU723
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2655              		.loc 1 1528 10 is_stmt 0 view .LVU724
 2656 005e 65B9     		cbnz	r5, .L242
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2657              		.loc 1 1530 9 is_stmt 1 view .LVU725
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2658              		.loc 1 1530 27 is_stmt 0 view .LVU726
 2659 0060 2046     		mov	r0, r4
 2660              	.LVL191:
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/cckWcrpf.s 			page 93


 2661              		.loc 1 1530 27 view .LVU727
 2662 0062 FFF7FEFF 		bl	ADC_Disable
 2663              	.LVL192:
 2664 0066 0546     		mov	r5, r0
 2665              	.LVL193:
 2666              	.L243:
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2667              		.loc 1 1538 7 is_stmt 1 view .LVU728
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2668              		.loc 1 1538 10 is_stmt 0 view .LVU729
 2669 0068 002D     		cmp	r5, #0
 2670 006a D7D1     		bne	.L239
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2671              		.loc 1 1542 9 is_stmt 1 view .LVU730
 2672 006c 626D     		ldr	r2, [r4, #84]
 2673 006e 084B     		ldr	r3, .L247
 2674 0070 1340     		ands	r3, r3, r2
 2675 0072 43F00103 		orr	r3, r3, #1
 2676 0076 6365     		str	r3, [r4, #84]
 2677 0078 D0E7     		b	.L239
 2678              	.LVL194:
 2679              	.L242:
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2680              		.loc 1 1534 9 view .LVU731
 2681 007a 2046     		mov	r0, r4
 2682              	.LVL195:
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2683              		.loc 1 1534 9 is_stmt 0 view .LVU732
 2684 007c FFF7FEFF 		bl	ADC_Disable
 2685              	.LVL196:
 2686 0080 F2E7     		b	.L243
 2687              	.LVL197:
 2688              	.L241:
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2689              		.loc 1 1547 7 is_stmt 1 view .LVU733
 2690 0082 636D     		ldr	r3, [r4, #84]
 2691 0084 43F48053 		orr	r3, r3, #4096
 2692 0088 6365     		str	r3, [r4, #84]
 2693 008a C7E7     		b	.L239
 2694              	.LVL198:
 2695              	.L244:
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2696              		.loc 1 1494 3 is_stmt 0 view .LVU734
 2697 008c 0225     		movs	r5, #2
 2698 008e C8E7     		b	.L238
 2699              	.L248:
 2700              		.align	2
 2701              	.L247:
 2702 0090 FEEFFFFF 		.word	-4098
 2703              		.cfi_endproc
 2704              	.LFE158:
 2706              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 2707              		.align	1
 2708              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 2709              		.syntax unified
 2710              		.thumb
 2711              		.thumb_func
ARM GAS  /tmp/cckWcrpf.s 			page 94


 2712              		.fpu fpv5-d16
 2714              	HAL_ADCEx_RegularMultiModeStop_DMA:
 2715              	.LVL199:
 2716              	.LFB159:
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop DMA-based MultiMode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   MultiMode is kept enabled after this function. MultiMode DMA bits
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         MultiMode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef* hadc)
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2717              		.loc 1 1574 1 is_stmt 1 view -0
 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 104
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2721              		.loc 1 1575 3 view .LVU736
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 2722              		.loc 1 1576 3 view .LVU737
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 2723              		.loc 1 1577 3 view .LVU738
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2724              		.loc 1 1580 3 view .LVU739
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2725              		.loc 1 1583 3 view .LVU740
 2726              		.loc 1 1583 3 view .LVU741
 2727 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2728 0004 012B     		cmp	r3, #1
 2729 0006 71D0     		beq	.L259
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2730              		.loc 1 1574 1 is_stmt 0 discriminator 2 view .LVU742
 2731 0008 30B5     		push	{r4, r5, lr}
 2732              	.LCFI37:
 2733              		.cfi_def_cfa_offset 12
 2734              		.cfi_offset 4, -12
 2735              		.cfi_offset 5, -8
 2736              		.cfi_offset 14, -4
 2737 000a 9BB0     		sub	sp, sp, #108
 2738              	.LCFI38:
 2739              		.cfi_def_cfa_offset 120
 2740 000c 0446     		mov	r4, r0
 2741              		.loc 1 1583 3 is_stmt 1 discriminator 2 view .LVU743
ARM GAS  /tmp/cckWcrpf.s 			page 95


 2742 000e 0123     		movs	r3, #1
 2743 0010 80F85030 		strb	r3, [r0, #80]
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status  = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2744              		.loc 1 1587 3 discriminator 2 view .LVU744
 2745              		.loc 1 1587 21 is_stmt 0 discriminator 2 view .LVU745
 2746 0014 0C21     		movs	r1, #12
 2747 0016 FFF7FEFF 		bl	ADC_ConversionStop
 2748              	.LVL200:
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status  == HAL_OK)
 2749              		.loc 1 1590 3 is_stmt 1 discriminator 2 view .LVU746
 2750              		.loc 1 1590 6 is_stmt 0 discriminator 2 view .LVU747
 2751 001a 0346     		mov	r3, r0
 2752 001c 0028     		cmp	r0, #0
 2753 001e 46D1     		bne	.L251
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2754              		.loc 1 1593 5 is_stmt 1 view .LVU748
 2755 0020 636D     		ldr	r3, [r4, #84]
 2756 0022 23F48073 		bic	r3, r3, #256
 2757 0026 6365     		str	r3, [r4, #84]
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2758              		.loc 1 1596 5 view .LVU749
 2759 0028 2268     		ldr	r2, [r4]
 2760 002a 324B     		ldr	r3, .L268
 2761 002c 9A42     		cmp	r2, r3
 2762 002e 07D0     		beq	.L264
 2763              		.loc 1 1596 5 is_stmt 0 discriminator 2 view .LVU750
 2764 0030 0023     		movs	r3, #0
 2765 0032 0193     		str	r3, [sp, #4]
 2766              	.L253:
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 2767              		.loc 1 1598 5 is_stmt 1 view .LVU751
 2768              		.loc 1 1598 21 is_stmt 0 view .LVU752
 2769 0034 019B     		ldr	r3, [sp, #4]
 2770              		.loc 1 1598 8 view .LVU753
 2771 0036 3BB1     		cbz	r3, .L265
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
ARM GAS  /tmp/cckWcrpf.s 			page 96


1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave*/
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 2772              		.loc 1 1613 5 is_stmt 1 view .LVU754
 2773              		.loc 1 1613 17 is_stmt 0 view .LVU755
 2774 0038 FFF7FEFF 		bl	HAL_GetTick
 2775              	.LVL201:
 2776              		.loc 1 1613 17 view .LVU756
 2777 003c 0546     		mov	r5, r0
 2778              	.LVL202:
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          ||
 2779              		.loc 1 1615 5 is_stmt 1 view .LVU757
 2780              		.loc 1 1615 10 is_stmt 0 view .LVU758
 2781 003e 11E0     		b	.L255
 2782              	.LVL203:
 2783              	.L264:
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2784              		.loc 1 1596 5 discriminator 1 view .LVU759
 2785 0040 03F58073 		add	r3, r3, #256
 2786 0044 0193     		str	r3, [sp, #4]
 2787 0046 F5E7     		b	.L253
 2788              	.L265:
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2789              		.loc 1 1601 7 is_stmt 1 view .LVU760
 2790 0048 636D     		ldr	r3, [r4, #84]
 2791 004a 43F02003 		orr	r3, r3, #32
 2792 004e 6365     		str	r3, [r4, #84]
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2793              		.loc 1 1604 7 view .LVU761
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2794              		.loc 1 1604 7 view .LVU762
 2795 0050 0023     		movs	r3, #0
 2796 0052 84F85030 		strb	r3, [r4, #80]
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2797              		.loc 1 1606 7 view .LVU763
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2798              		.loc 1 1606 14 is_stmt 0 view .LVU764
 2799 0056 0123     		movs	r3, #1
 2800 0058 2CE0     		b	.L250
 2801              	.LVL204:
 2802              	.L256:
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if((HAL_GetTick()-tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 2803              		.loc 1 1618 7 is_stmt 1 view .LVU765
 2804              		.loc 1 1618 11 is_stmt 0 view .LVU766
 2805 005a FFF7FEFF 		bl	HAL_GetTick
 2806              	.LVL205:
 2807              		.loc 1 1618 24 view .LVU767
 2808 005e 401B     		subs	r0, r0, r5
 2809              		.loc 1 1618 9 view .LVU768
 2810 0060 0528     		cmp	r0, #5
 2811 0062 2AD8     		bhi	.L266
 2812              	.L255:
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2813              		.loc 1 1615 11 view .LVU769
ARM GAS  /tmp/cckWcrpf.s 			page 97


 2814 0064 2368     		ldr	r3, [r4]
 2815 0066 9B68     		ldr	r3, [r3, #8]
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2816              		.loc 1 1615 10 view .LVU770
 2817 0068 13F0040F 		tst	r3, #4
 2818 006c F5D1     		bne	.L256
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2819              		.loc 1 1616 11 discriminator 1 view .LVU771
 2820 006e 019B     		ldr	r3, [sp, #4]
 2821 0070 9B68     		ldr	r3, [r3, #8]
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 2822              		.loc 1 1615 60 discriminator 1 view .LVU772
 2823 0072 13F0040F 		tst	r3, #4
 2824 0076 F0D1     		bne	.L256
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = HAL_DMA_Abort(hadc->DMA_Handle);
 2825              		.loc 1 1634 5 is_stmt 1 view .LVU773
 2826              		.loc 1 1634 23 is_stmt 0 view .LVU774
 2827 0078 E06C     		ldr	r0, [r4, #76]
 2828 007a FFF7FEFF 		bl	HAL_DMA_Abort
 2829              	.LVL206:
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  != HAL_OK)
 2830              		.loc 1 1637 5 is_stmt 1 view .LVU775
 2831              		.loc 1 1637 8 is_stmt 0 view .LVU776
 2832 007e 0346     		mov	r3, r0
 2833 0080 18B1     		cbz	r0, .L257
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2834              		.loc 1 1640 7 is_stmt 1 view .LVU777
 2835 0082 626D     		ldr	r2, [r4, #84]
 2836 0084 42F04002 		orr	r2, r2, #64
 2837 0088 6265     		str	r2, [r4, #84]
 2838              	.L257:
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2839              		.loc 1 1644 5 view .LVU778
 2840 008a 2168     		ldr	r1, [r4]
 2841 008c 4A68     		ldr	r2, [r1, #4]
ARM GAS  /tmp/cckWcrpf.s 			page 98


 2842 008e 22F01002 		bic	r2, r2, #16
 2843 0092 4A60     		str	r2, [r1, #4]
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status " only if DMA channel disabling passed, to keep in */
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status  == HAL_OK)
 2844              		.loc 1 1652 5 view .LVU779
 2845              		.loc 1 1652 8 is_stmt 0 view .LVU780
 2846 0094 5BB9     		cbnz	r3, .L251
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 2847              		.loc 1 1654 7 is_stmt 1 view .LVU781
 2848              		.loc 1 1654 11 is_stmt 0 view .LVU782
 2849 0096 2268     		ldr	r2, [r4]
 2850 0098 9268     		ldr	r2, [r2, #8]
 2851              		.loc 1 1654 10 view .LVU783
 2852 009a 12F0080F 		tst	r2, #8
 2853 009e 15D0     		beq	.L267
 2854              	.LVL207:
 2855              	.L258:
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status  =  ADC_Disable(hadc);
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (tmp_hal_status  == HAL_OK)
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_IS_CONVERSION_ONGOING_INJECTED(&tmphadcSlave) == RESET)
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             tmp_hal_status  =  ADC_Disable(&tmphadcSlave);
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status  == HAL_OK)
 2856              		.loc 1 1666 7 is_stmt 1 view .LVU784
 2857              		.loc 1 1666 10 is_stmt 0 view .LVU785
 2858 00a0 2BB9     		cbnz	r3, .L251
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
 2859              		.loc 1 1670 9 is_stmt 1 view .LVU786
 2860 00a2 616D     		ldr	r1, [r4, #84]
 2861 00a4 144A     		ldr	r2, .L268+4
 2862 00a6 0A40     		ands	r2, r2, r1
 2863 00a8 42F00102 		orr	r2, r2, #1
 2864 00ac 6265     		str	r2, [r4, #84]
 2865              	.LVL208:
 2866              	.L251:
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            no Master State change */
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/cckWcrpf.s 			page 99


 2867              		.loc 1 1676 7 view .LVU787
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2868              		.loc 1 1683 3 view .LVU788
 2869              		.loc 1 1683 3 view .LVU789
 2870 00ae 0022     		movs	r2, #0
 2871 00b0 84F85020 		strb	r2, [r4, #80]
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 2872              		.loc 1 1686 3 view .LVU790
 2873              	.LVL209:
 2874              	.L250:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2875              		.loc 1 1687 1 is_stmt 0 view .LVU791
 2876 00b4 1846     		mov	r0, r3
 2877 00b6 1BB0     		add	sp, sp, #108
 2878              	.LCFI39:
 2879              		.cfi_remember_state
 2880              		.cfi_def_cfa_offset 12
 2881              		@ sp needed
 2882 00b8 30BD     		pop	{r4, r5, pc}
 2883              	.LVL210:
 2884              	.L266:
 2885              	.LCFI40:
 2886              		.cfi_restore_state
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2887              		.loc 1 1621 9 is_stmt 1 view .LVU792
 2888 00ba 636D     		ldr	r3, [r4, #84]
 2889 00bc 43F01003 		orr	r3, r3, #16
 2890 00c0 6365     		str	r3, [r4, #84]
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2891              		.loc 1 1624 9 view .LVU793
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2892              		.loc 1 1624 9 view .LVU794
 2893 00c2 0023     		movs	r3, #0
 2894 00c4 84F85030 		strb	r3, [r4, #80]
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2895              		.loc 1 1626 9 view .LVU795
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2896              		.loc 1 1626 16 is_stmt 0 view .LVU796
 2897 00c8 0123     		movs	r3, #1
 2898 00ca F3E7     		b	.L250
 2899              	.LVL211:
 2900              	.L267:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (tmp_hal_status  == HAL_OK)
 2901              		.loc 1 1656 9 is_stmt 1 view .LVU797
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (tmp_hal_status  == HAL_OK)
 2902              		.loc 1 1656 28 is_stmt 0 view .LVU798
 2903 00cc 2046     		mov	r0, r4
 2904              	.LVL212:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (tmp_hal_status  == HAL_OK)
ARM GAS  /tmp/cckWcrpf.s 			page 100


 2905              		.loc 1 1656 28 view .LVU799
 2906 00ce FFF7FEFF 		bl	ADC_Disable
 2907              	.LVL213:
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 2908              		.loc 1 1657 9 is_stmt 1 view .LVU800
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 2909              		.loc 1 1657 12 is_stmt 0 view .LVU801
 2910 00d2 0346     		mov	r3, r0
 2911 00d4 0028     		cmp	r0, #0
 2912 00d6 E3D1     		bne	.L258
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 2913              		.loc 1 1659 11 is_stmt 1 view .LVU802
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 2914              		.loc 1 1659 15 is_stmt 0 view .LVU803
 2915 00d8 019A     		ldr	r2, [sp, #4]
 2916 00da 9268     		ldr	r2, [r2, #8]
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 2917              		.loc 1 1659 14 view .LVU804
 2918 00dc 12F0080F 		tst	r2, #8
 2919 00e0 DED1     		bne	.L258
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 2920              		.loc 1 1661 13 is_stmt 1 view .LVU805
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 2921              		.loc 1 1661 32 is_stmt 0 view .LVU806
 2922 00e2 01A8     		add	r0, sp, #4
 2923              	.LVL214:
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 2924              		.loc 1 1661 32 view .LVU807
 2925 00e4 FFF7FEFF 		bl	ADC_Disable
 2926              	.LVL215:
 2927 00e8 0346     		mov	r3, r0
 2928              	.LVL216:
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 2929              		.loc 1 1661 32 view .LVU808
 2930 00ea D9E7     		b	.L258
 2931              	.LVL217:
 2932              	.L259:
 2933              	.LCFI41:
 2934              		.cfi_def_cfa_offset 0
 2935              		.cfi_restore 4
 2936              		.cfi_restore 5
 2937              		.cfi_restore 14
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2938              		.loc 1 1583 3 view .LVU809
 2939 00ec 0223     		movs	r3, #2
 2940              		.loc 1 1687 1 view .LVU810
 2941 00ee 1846     		mov	r0, r3
 2942              	.LVL218:
 2943              		.loc 1 1687 1 view .LVU811
 2944 00f0 7047     		bx	lr
 2945              	.L269:
 2946 00f2 00BF     		.align	2
 2947              	.L268:
 2948 00f4 00200240 		.word	1073881088
 2949 00f8 FEEFFFFF 		.word	-4098
 2950              		.cfi_endproc
 2951              	.LFE159:
ARM GAS  /tmp/cckWcrpf.s 			page 101


 2953              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 2954              		.align	1
 2955              		.global	HAL_ADCEx_InjectedConfigChannel
 2956              		.syntax unified
 2957              		.thumb
 2958              		.thumb_func
 2959              		.fpu fpv5-d16
 2961              	HAL_ADCEx_InjectedConfigChannel:
 2962              	.LVL219:
 2963              	.LFB160:
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @}
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @verbatim
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @endverbatim
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
ARM GAS  /tmp/cckWcrpf.s 			page 102


1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected group.
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2964              		.loc 1 1747 1 is_stmt 1 view -0
 2965              		.cfi_startproc
 2966              		@ args = 0, pretend = 0, frame = 0
 2967              		@ frame_needed = 0, uses_anonymous_args = 0
 2968              		@ link register save eliminated.
 2969              		.loc 1 1747 1 is_stmt 0 view .LVU813
 2970 0000 0346     		mov	r3, r0
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 2971              		.loc 1 1748 3 is_stmt 1 view .LVU814
 2972              	.LVL220:
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2973              		.loc 1 1749 3 view .LVU815
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2974              		.loc 1 1750 3 view .LVU816
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t WaitLoopIndex = 0;
 2975              		.loc 1 1751 3 view .LVU817
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0;
 2976              		.loc 1 1754 3 view .LVU818
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2977              		.loc 1 1757 3 view .LVU819
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 2978              		.loc 1 1758 3 view .LVU820
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 2979              		.loc 1 1759 3 view .LVU821
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
 2980              		.loc 1 1760 3 view .LVU822
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 2981              		.loc 1 1761 3 view .LVU823
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 2982              		.loc 1 1762 3 view .LVU824
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 2983              		.loc 1 1763 3 view .LVU825
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
 2984              		.loc 1 1764 3 view .LVU826
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
 2985              		.loc 1 1765 3 view .LVU827
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
 2986              		.loc 1 1766 3 view .LVU828
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
 2987              		.loc 1 1767 3 view .LVU829
ARM GAS  /tmp/cckWcrpf.s 			page 103


1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
 2988              		.loc 1 1768 3 view .LVU830
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 2989              		.loc 1 1770 3 view .LVU831
 2990              		.loc 1 1770 16 is_stmt 0 view .LVU832
 2991 0002 C068     		ldr	r0, [r0, #12]
 2992              	.LVL221:
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 2993              		.loc 1 1772 5 is_stmt 1 view .LVU833
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 2994              		.loc 1 1773 5 view .LVU834
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 2995              		.loc 1 1774 5 view .LVU835
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check offset range according to oversampling setting */
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 2996              		.loc 1 1778 3 view .LVU836
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset/(hadc->Init
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 2997              		.loc 1 1784 5 view .LVU837
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
 2998              		.loc 1 1788 3 view .LVU838
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
 2999              		.loc 1 1791 3 view .LVU839
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Only rank 1 can be configured if there is only one conversion or if Scan conversion mode is di
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!(((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE) || (sConfigInjected->InjectedNbrOfC
 3000              		.loc 1 1794 3 view .LVU840
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification of channel number.
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      For ADC1 and ADC2, channels 1 to 15 are available in differential mode,
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         channels 16 to 18 can be only used in single-ended mode.
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      For ADC3, channels 1 to 11 are available in differential mode,
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                 channels 12 to 18 can only be used in single-ended mode.  */
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 3001              		.loc 1 1802 3 view .LVU841
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC3)
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC3_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
ARM GAS  /tmp/cckWcrpf.s 			page 104


1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else if(hadc->Instance == ADC2)
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC2_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC1_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
 3002              		.loc 1 1818 7 view .LVU842
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3003              		.loc 1 1823 3 view .LVU843
 3004              		.loc 1 1823 3 view .LVU844
 3005 0004 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 3006 0008 012A     		cmp	r2, #1
 3007 000a 00F0FE82 		beq	.L324
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status  = HAL_OK;
 3008              		.loc 1 1747 1 is_stmt 0 discriminator 2 view .LVU845
 3009 000e F0B4     		push	{r4, r5, r6, r7}
 3010              	.LCFI42:
 3011              		.cfi_def_cfa_offset 16
 3012              		.cfi_offset 4, -16
 3013              		.cfi_offset 5, -12
 3014              		.cfi_offset 6, -8
 3015              		.cfi_offset 7, -4
 3016              		.loc 1 1823 3 is_stmt 1 discriminator 2 view .LVU846
 3017 0010 0122     		movs	r2, #1
 3018 0012 83F85020 		strb	r2, [r3, #80]
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Configuration of Injected group sequencer.                               */
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*                                                                          */
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 3019              		.loc 1 1848 3 discriminator 2 view .LVU847
ARM GAS  /tmp/cckWcrpf.s 			page 105


 3020              		.loc 1 1848 6 is_stmt 0 discriminator 2 view .LVU848
 3021 0016 B0B1     		cbz	r0, .L272
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1)  )
 3022              		.loc 1 1849 23 discriminator 1 view .LVU849
 3023 0018 4A6A     		ldr	r2, [r1, #36]
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1)  )
 3024              		.loc 1 1848 54 discriminator 1 view .LVU850
 3025 001a 012A     		cmp	r2, #1
 3026 001c 13D0     		beq	.L272
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* software start.                                                      */
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       software start.                                                */
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           && (sConfigInjected->ExternalTrigInjecConvEdge != ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ( ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJEC
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConvEdge            
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ( ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJEC
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*                                                                        */
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0)
 3027              		.loc 1 1896 5 is_stmt 1 view .LVU851
ARM GAS  /tmp/cckWcrpf.s 			page 106


 3028              		.loc 1 1896 30 is_stmt 0 view .LVU852
 3029 001e 186E     		ldr	r0, [r3, #96]
 3030              		.loc 1 1896 8 view .LVU853
 3031 0020 0028     		cmp	r0, #0
 3032 0022 40F0C280 		bne	.L325
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  being built                                                         */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 3033              		.loc 1 1900 7 is_stmt 1 view .LVU854
 3034              		.loc 1 1900 42 is_stmt 0 view .LVU855
 3035 0026 1A66     		str	r2, [r3, #96]
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = (uint32_t)0x00000000;
 3036              		.loc 1 1904 7 is_stmt 1 view .LVU856
 3037              		.loc 1 1904 42 is_stmt 0 view .LVU857
 3038 0028 0022     		movs	r2, #0
 3039 002a DA65     		str	r2, [r3, #92]
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* software start.                                                      */
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       software start.                                                */
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 3040              		.loc 1 1916 7 is_stmt 1 view .LVU858
 3041              		.loc 1 1916 27 is_stmt 0 view .LVU859
 3042 002c CA6A     		ldr	r2, [r1, #44]
 3043              		.loc 1 1916 10 view .LVU860
 3044 002e 012A     		cmp	r2, #1
 3045 0030 00F0B880 		beq	.L278
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           && (sConfigInjected->ExternalTrigInjecConvEdge != ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 3046              		.loc 1 1917 30 view .LVU861
 3047 0034 0C6B     		ldr	r4, [r1, #48]
 3048              		.loc 1 1917 11 view .LVU862
 3049 0036 002C     		cmp	r4, #0
 3050 0038 00F0B480 		beq	.L278
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - (uint32_t)1)
 3051              		.loc 1 1919 9 is_stmt 1 view .LVU863
 3052              		.loc 1 1919 60 is_stmt 0 view .LVU864
 3053 003c 486A     		ldr	r0, [r1, #36]
 3054              		.loc 1 1919 86 view .LVU865
 3055 003e 0138     		subs	r0, r0, #1
 3056              		.loc 1 1919 114 view .LVU866
 3057 0040 0243     		orrs	r2, r2, r0
 3058              		.loc 1 1919 41 view .LVU867
 3059 0042 1443     		orrs	r4, r4, r2
 3060              	.LVL222:
 3061              		.loc 1 1919 41 view .LVU868
ARM GAS  /tmp/cckWcrpf.s 			page 107


 3062 0044 B2E0     		b	.L277
 3063              	.LVL223:
 3064              	.L272:
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3065              		.loc 1 1858 5 is_stmt 1 view .LVU869
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3066              		.loc 1 1858 24 is_stmt 0 view .LVU870
 3067 0046 4A68     		ldr	r2, [r1, #4]
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3068              		.loc 1 1858 8 view .LVU871
 3069 0048 012A     		cmp	r2, #1
 3070 004a 00F08480 		beq	.L337
 3071              	.LVL224:
 3072              	.L274:
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv |
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConvEdge            
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - (uint32_t)1)
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     } /* if (hadc->InjectionConfig.ChannelCount == 0) */
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Decrease channel count  */
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0)
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
ARM GAS  /tmp/cckWcrpf.s 			page 108


1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 3073              		.loc 1 1966 3 is_stmt 1 view .LVU872
 3074              		.loc 1 1966 7 is_stmt 0 view .LVU873
 3075 004e 1A68     		ldr	r2, [r3]
 3076 0050 9068     		ldr	r0, [r2, #8]
 3077              		.loc 1 1966 6 view .LVU874
 3078 0052 10F0080F 		tst	r0, #8
 3079 0056 24D1     		bne	.L279
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* ADC channels preselection */
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->Instance->PCSEL |= (1U << sConfigInjected->InjectedChannel);
 3080              		.loc 1 1969 5 is_stmt 1 view .LVU875
 3081              		.loc 1 1969 27 is_stmt 0 view .LVU876
 3082 0058 D069     		ldr	r0, [r2, #28]
 3083              		.loc 1 1969 52 view .LVU877
 3084 005a 0D68     		ldr	r5, [r1]
 3085              		.loc 1 1969 34 view .LVU878
 3086 005c 0124     		movs	r4, #1
 3087 005e AC40     		lsls	r4, r4, r5
 3088              		.loc 1 1969 27 view .LVU879
 3089 0060 2043     		orrs	r0, r0, r4
 3090 0062 D061     		str	r0, [r2, #28]
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 3091              		.loc 1 1972 5 is_stmt 1 view .LVU880
 3092              		.loc 1 1972 24 is_stmt 0 view .LVU881
 3093 0064 91F82920 		ldrb	r2, [r1, #41]	@ zero_extendqisi2
 3094              		.loc 1 1972 8 view .LVU882
 3095 0068 002A     		cmp	r2, #0
 3096 006a 40F0D180 		bne	.L280
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 3097              		.loc 1 1974 7 is_stmt 1 view .LVU883
 3098 006e 1D68     		ldr	r5, [r3]
 3099 0070 EC68     		ldr	r4, [r5, #12]
 3100 0072 24F44014 		bic	r4, r4, #3145728
 3101 0076 91F82A20 		ldrb	r2, [r1, #42]	@ zero_extendqisi2
 3102              	.LVL225:
 3103              	.LBB52:
 3104              	.LBI52:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3105              		.loc 2 850 57 view .LVU884
 3106              	.LBB53:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3107              		.loc 2 852 3 view .LVU885
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3108              		.loc 2 857 4 view .LVU886
 3109 007a 4FF40010 		mov	r0, #2097152
 3110              		.syntax unified
 3111              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3112 007e 90FAA0F0 		rbit r0, r0
 3113              	@ 0 "" 2
 3114              	.LVL226:
ARM GAS  /tmp/cckWcrpf.s 			page 109


 3115              		.loc 2 870 3 view .LVU887
 3116              		.loc 2 870 3 is_stmt 0 view .LVU888
 3117              		.thumb
 3118              		.syntax unified
 3119              	.LBE53:
 3120              	.LBE52:
 3121              		.loc 1 1974 7 view .LVU889
 3122 0082 B0FA80F0 		clz	r0, r0
 3123 0086 8240     		lsls	r2, r2, r0
 3124 0088 91F82860 		ldrb	r6, [r1, #40]	@ zero_extendqisi2
 3125              	.LVL227:
 3126              	.LBB54:
 3127              	.LBI54:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3128              		.loc 2 850 57 is_stmt 1 view .LVU890
 3129              	.LBB55:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3130              		.loc 2 852 3 view .LVU891
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3131              		.loc 2 857 4 view .LVU892
 3132 008c 4FF48010 		mov	r0, #1048576
 3133              		.syntax unified
 3134              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3135 0090 90FAA0F0 		rbit r0, r0
 3136              	@ 0 "" 2
 3137              	.LVL228:
 3138              		.loc 2 870 3 view .LVU893
 3139              		.loc 2 870 3 is_stmt 0 view .LVU894
 3140              		.thumb
 3141              		.syntax unified
 3142              	.LBE55:
 3143              	.LBE54:
 3144              		.loc 1 1974 7 view .LVU895
 3145 0094 B0FA80F0 		clz	r0, r0
 3146 0098 06FA00F0 		lsl	r0, r6, r0
 3147 009c 0243     		orrs	r2, r2, r0
 3148 009e 2243     		orrs	r2, r2, r4
 3149 00a0 EA60     		str	r2, [r5, #12]
 3150              	.L279:
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext)
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                ADC_CFGR_INJECT_DISCCONTINUOUS(sConfigInjected->InjectedDiscontinuou
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is   */
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* discarded.                                                             */
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext) );
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
ARM GAS  /tmp/cckWcrpf.s 			page 110


1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 3151              		.loc 1 1995 3 is_stmt 1 view .LVU896
 3152              		.loc 1 1995 7 is_stmt 0 view .LVU897
 3153 00a2 1A68     		ldr	r2, [r3]
 3154 00a4 9068     		ldr	r0, [r2, #8]
 3155              		.loc 1 1995 6 view .LVU898
 3156 00a6 10F00C0F 		tst	r0, #12
 3157 00aa 40F08D81 		bne	.L326
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 3158              		.loc 1 1999 5 is_stmt 1 view .LVU899
 3159              		.loc 1 1999 25 is_stmt 0 view .LVU900
 3160 00ae C86A     		ldr	r0, [r1, #44]
 3161              		.loc 1 1999 8 view .LVU901
 3162 00b0 0128     		cmp	r0, #1
 3163 00b2 03D0     		beq	.L282
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 3164              		.loc 1 2000 28 view .LVU902
 3165 00b4 086B     		ldr	r0, [r1, #48]
 3166              		.loc 1 2000 9 view .LVU903
 3167 00b6 0028     		cmp	r0, #0
 3168 00b8 40F0C180 		bne	.L283
 3169              	.L282:
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 3170              		.loc 1 2002 7 is_stmt 1 view .LVU904
 3171              		.loc 1 2002 26 is_stmt 0 view .LVU905
 3172 00bc 91F82900 		ldrb	r0, [r1, #41]	@ zero_extendqisi2
 3173              		.loc 1 2002 10 view .LVU906
 3174 00c0 0128     		cmp	r0, #1
 3175 00c2 00F0B680 		beq	.L338
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 3176              		.loc 1 2008 9 is_stmt 1 view .LVU907
 3177 00c6 D068     		ldr	r0, [r2, #12]
 3178 00c8 20F00070 		bic	r0, r0, #33554432
 3179 00cc D060     		str	r0, [r2, #12]
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 3180              		.loc 1 1748 21 is_stmt 0 view .LVU908
 3181 00ce 0020     		movs	r0, #0
 3182              	.LVL229:
 3183              	.L285:
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
ARM GAS  /tmp/cckWcrpf.s 			page 111


2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status  = HAL_ERROR;
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 3184              		.loc 1 2028 5 is_stmt 1 view .LVU909
 3185              		.loc 1 2028 24 is_stmt 0 view .LVU910
 3186 00d0 91F83420 		ldrb	r2, [r1, #52]	@ zero_extendqisi2
 3187              		.loc 1 2028 8 view .LVU911
 3188 00d4 012A     		cmp	r2, #1
 3189 00d6 00F0C180 		beq	.L339
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE|ADC_CFGR2_TROVS) == (ADC_CFGR2
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Left  bit shift                                                     */
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_INJ_FIELDS,
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                         ADC_CFGR2_JOVSE                          |
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                         sConfigInjected->InjecOversampling.Ratio |
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                         sConfigInjected->InjecOversampling.RightBitShift);
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        CLEAR_BIT( hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 3190              		.loc 1 2051 8 is_stmt 1 view .LVU912
 3191 00da 1C68     		ldr	r4, [r3]
 3192 00dc 2269     		ldr	r2, [r4, #16]
 3193 00de 22F00202 		bic	r2, r2, #2
 3194 00e2 2261     		str	r2, [r4, #16]
 3195              	.L288:
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      /* Set the LeftShift parameter: it is applied to the final result with or without oversampling
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, sConfigInjected->InjectedLeftBitShift);
 3196              		.loc 1 2054 6 view .LVU913
 3197 00e4 1C68     		ldr	r4, [r3]
 3198 00e6 2269     		ldr	r2, [r4, #16]
 3199 00e8 22F07042 		bic	r2, r2, #-268435456
 3200 00ec 0D6A     		ldr	r5, [r1, #32]
 3201 00ee 2A43     		orrs	r2, r2, r5
ARM GAS  /tmp/cckWcrpf.s 			page 112


 3202 00f0 2261     		str	r2, [r4, #16]
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Sampling time configuration of the selected channel */
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
 3203              		.loc 1 2058 5 view .LVU914
 3204              		.loc 1 2058 24 is_stmt 0 view .LVU915
 3205 00f2 0A68     		ldr	r2, [r1]
 3206              		.loc 1 2058 8 view .LVU916
 3207 00f4 092A     		cmp	r2, #9
 3208 00f6 40F2BD80 		bls	.L289
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear the old sample time and set the new one */
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2,
 3209              		.loc 1 2061 7 is_stmt 1 view .LVU917
 3210 00fa 1F68     		ldr	r7, [r3]
 3211 00fc BE69     		ldr	r6, [r7, #24]
 3212              	.LVL230:
 3213              	.LBB56:
 3214              	.LBI56:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3215              		.loc 2 850 57 view .LVU918
 3216              	.LBB57:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3217              		.loc 2 852 3 view .LVU919
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3218              		.loc 2 857 4 view .LVU920
 3219 00fe 3824     		movs	r4, #56
 3220              		.syntax unified
 3221              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3222 0100 94FAA4F5 		rbit r5, r4
 3223              	@ 0 "" 2
 3224              	.LVL231:
 3225              		.loc 2 870 3 view .LVU921
 3226              		.loc 2 870 3 is_stmt 0 view .LVU922
 3227              		.thumb
 3228              		.syntax unified
 3229              	.LBE57:
 3230              	.LBE56:
 3231              		.loc 1 2061 7 view .LVU923
 3232 0104 B5FA85F5 		clz	r5, r5
 3233 0108 0A3A     		subs	r2, r2, #10
 3234 010a 02FB05F5 		mul	r5, r2, r5
 3235 010e 4FF0070C 		mov	ip, #7
 3236 0112 0CFA05F5 		lsl	r5, ip, r5
 3237 0116 26EA0506 		bic	r6, r6, r5
 3238 011a 8D68     		ldr	r5, [r1, #8]
 3239              	.LVL232:
 3240              	.LBB58:
 3241              	.LBI58:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3242              		.loc 2 850 57 is_stmt 1 view .LVU924
 3243              	.LBB59:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3244              		.loc 2 852 3 view .LVU925
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3245              		.loc 2 857 4 view .LVU926
ARM GAS  /tmp/cckWcrpf.s 			page 113


 3246              		.syntax unified
 3247              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3248 011c 94FAA4F4 		rbit r4, r4
 3249              	@ 0 "" 2
 3250              	.LVL233:
 3251              		.loc 2 870 3 view .LVU927
 3252              		.loc 2 870 3 is_stmt 0 view .LVU928
 3253              		.thumb
 3254              		.syntax unified
 3255              	.LBE59:
 3256              	.LBE58:
 3257              		.loc 1 2061 7 view .LVU929
 3258 0120 B4FA84F4 		clz	r4, r4
 3259 0124 04FB02F2 		mul	r2, r4, r2
 3260 0128 05FA02F2 		lsl	r2, r5, r2
 3261 012c 3243     		orrs	r2, r2, r6
 3262 012e BA61     		str	r2, [r7, #24]
 3263              	.L290:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel),
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel));
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else /* if ADC_Channel_0 ... ADC_Channel_9 is selected */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear the old sample time and set the new one */
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1,
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel),
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel));
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 15, the LSB (right bits) are set to 0 */
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 3264              		.loc 1 2078 5 is_stmt 1 view .LVU930
 3265              		.loc 1 2078 24 is_stmt 0 view .LVU931
 3266 0130 4C69     		ldr	r4, [r1, #20]
 3267 0132 1D68     		ldr	r5, [r3]
 3268 0134 EA68     		ldr	r2, [r5, #12]
 3269 0136 C2F38202 		ubfx	r2, r2, #2, #3
 3270 013a 5200     		lsls	r2, r2, #1
 3271              		.loc 1 2078 22 view .LVU932
 3272 013c 04FA02F2 		lsl	r2, r4, r2
 3273              	.LVL234:
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     switch (sConfigInjected->InjectedOffsetNumber)
 3274              		.loc 1 2080 5 is_stmt 1 view .LVU933
 3275              		.loc 1 2080 28 is_stmt 0 view .LVU934
 3276 0140 0C69     		ldr	r4, [r1, #16]
 3277              		.loc 1 2080 5 view .LVU935
 3278 0142 013C     		subs	r4, r4, #1
 3279 0144 032C     		cmp	r4, #3
 3280 0146 00F24081 		bhi	.L281
 3281 014a DFE814F0 		tbh	[pc, r4, lsl #1]
 3282              	.L292:
 3283 014e AE00     		.2byte	(.L295-.L292)/2
ARM GAS  /tmp/cckWcrpf.s 			page 114


 3284 0150 D100     		.2byte	(.L294-.L292)/2
 3285 0152 F500     		.2byte	(.L293-.L292)/2
 3286 0154 1901     		.2byte	(.L291-.L292)/2
 3287              	.LVL235:
 3288              		.p2align 1
 3289              	.L337:
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           && (sConfigInjected->ExternalTrigInjecConvEdge != ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 3290              		.loc 1 1865 7 is_stmt 1 view .LVU936
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           && (sConfigInjected->ExternalTrigInjecConvEdge != ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 3291              		.loc 1 1865 27 is_stmt 0 view .LVU937
 3292 0156 CA6A     		ldr	r2, [r1, #44]
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           && (sConfigInjected->ExternalTrigInjecConvEdge != ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 3293              		.loc 1 1865 10 view .LVU938
 3294 0158 012A     		cmp	r2, #1
 3295 015a 0DD0     		beq	.L275
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3296              		.loc 1 1866 30 view .LVU939
 3297 015c 086B     		ldr	r0, [r1, #48]
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3298              		.loc 1 1866 11 view .LVU940
 3299 015e 58B1     		cbz	r0, .L275
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
 3300              		.loc 1 1868 9 is_stmt 1 view .LVU941
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
 3301              		.loc 1 1868 45 is_stmt 0 view .LVU942
 3302 0160 0D68     		ldr	r5, [r1]
 3303              	.LVL236:
 3304              	.LBB60:
 3305              	.LBI60:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3306              		.loc 2 850 57 is_stmt 1 view .LVU943
 3307              	.LBB61:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3308              		.loc 2 852 3 view .LVU944
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3309              		.loc 2 857 4 view .LVU945
 3310 0162 4FF47854 		mov	r4, #15872
 3311              		.syntax unified
 3312              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3313 0166 94FAA4F4 		rbit r4, r4
 3314              	@ 0 "" 2
 3315              	.LVL237:
 3316              		.loc 2 870 3 view .LVU946
 3317              		.loc 2 870 3 is_stmt 0 view .LVU947
 3318              		.thumb
 3319              		.syntax unified
 3320              	.LBE61:
 3321              	.LBE60:
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
 3322              		.loc 1 1868 45 view .LVU948
 3323 016a B4FA84F4 		clz	r4, r4
 3324 016e 05FA04F4 		lsl	r4, r5, r4
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
 3325              		.loc 1 1868 112 view .LVU949
 3326 0172 2243     		orrs	r2, r2, r4
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
 3327              		.loc 1 1868 41 view .LVU950
ARM GAS  /tmp/cckWcrpf.s 			page 115


 3328 0174 1043     		orrs	r0, r0, r2
 3329              	.LVL238:
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                              sConfigInjected->ExternalTrigInjecConv     |
 3330              		.loc 1 1868 41 view .LVU951
 3331 0176 07E0     		b	.L276
 3332              	.LVL239:
 3333              	.L275:
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3334              		.loc 1 1874 9 is_stmt 1 view .LVU952
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3335              		.loc 1 1874 45 is_stmt 0 view .LVU953
 3336 0178 0868     		ldr	r0, [r1]
 3337              	.LVL240:
 3338              	.LBB62:
 3339              	.LBI62:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3340              		.loc 2 850 57 is_stmt 1 view .LVU954
 3341              	.LBB63:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3342              		.loc 2 852 3 view .LVU955
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3343              		.loc 2 857 4 view .LVU956
 3344 017a 4FF47852 		mov	r2, #15872
 3345              		.syntax unified
 3346              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3347 017e 92FAA2F2 		rbit r2, r2
 3348              	@ 0 "" 2
 3349              	.LVL241:
 3350              		.loc 2 870 3 view .LVU957
 3351              		.loc 2 870 3 is_stmt 0 view .LVU958
 3352              		.thumb
 3353              		.syntax unified
 3354              	.LBE63:
 3355              	.LBE62:
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3356              		.loc 1 1874 45 view .LVU959
 3357 0182 B2FA82F2 		clz	r2, r2
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3358              		.loc 1 1874 41 view .LVU960
 3359 0186 9040     		lsls	r0, r0, r2
 3360              	.LVL242:
 3361              	.L276:
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 3362              		.loc 1 1878 7 is_stmt 1 view .LVU961
 3363 0188 1C68     		ldr	r4, [r3]
 3364 018a E26C     		ldr	r2, [r4, #76]
 3365 018c 22F07B42 		bic	r2, r2, #-83886080
 3366 0190 22F46F02 		bic	r2, r2, #15663104
 3367 0194 22F43F42 		bic	r2, r2, #48896
 3368 0198 22F0FF02 		bic	r2, r2, #255
 3369 019c 0243     		orrs	r2, r2, r0
 3370 019e E264     		str	r2, [r4, #76]
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3371              		.loc 1 1880 7 view .LVU962
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3372              		.loc 1 1880 42 is_stmt 0 view .LVU963
 3373 01a0 D865     		str	r0, [r3, #92]
ARM GAS  /tmp/cckWcrpf.s 			page 116


 3374 01a2 54E7     		b	.L274
 3375              	.LVL243:
 3376              	.L278:
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3377              		.loc 1 1925 9 is_stmt 1 view .LVU964
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3378              		.loc 1 1925 60 is_stmt 0 view .LVU965
 3379 01a4 4C6A     		ldr	r4, [r1, #36]
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3380              		.loc 1 1925 41 view .LVU966
 3381 01a6 013C     		subs	r4, r4, #1
 3382              	.LVL244:
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3383              		.loc 1 1925 41 view .LVU967
 3384 01a8 00E0     		b	.L277
 3385              	.LVL245:
 3386              	.L325:
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3387              		.loc 1 1754 12 view .LVU968
 3388 01aa 0024     		movs	r4, #0
 3389              	.LVL246:
 3390              	.L277:
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3391              		.loc 1 1935 5 is_stmt 1 view .LVU969
 3392              	.LBB64:
 3393              	.LBI64:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3394              		.loc 2 850 57 view .LVU970
 3395              	.LBB65:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3396              		.loc 2 852 3 view .LVU971
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3397              		.loc 2 857 4 view .LVU972
 3398 01ac 4FF47852 		mov	r2, #15872
 3399              		.syntax unified
 3400              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3401 01b0 92FAA2F0 		rbit r0, r2
 3402              	@ 0 "" 2
 3403              	.LVL247:
 3404              		.loc 2 870 3 view .LVU973
 3405              		.loc 2 870 3 is_stmt 0 view .LVU974
 3406              		.thumb
 3407              		.syntax unified
 3408              	.LBE65:
 3409              	.LBE64:
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3410              		.loc 1 1935 41 view .LVU975
 3411 01b4 B0FA80F0 		clz	r0, r0
 3412 01b8 0338     		subs	r0, r0, #3
 3413 01ba 4D68     		ldr	r5, [r1, #4]
 3414 01bc 05FB00F0 		mul	r0, r5, r0
 3415 01c0 0330     		adds	r0, r0, #3
 3416 01c2 1F26     		movs	r6, #31
 3417 01c4 06FA00F0 		lsl	r0, r6, r0
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3418              		.loc 1 1935 37 view .LVU976
 3419 01c8 24EA0004 		bic	r4, r4, r0
ARM GAS  /tmp/cckWcrpf.s 			page 117


 3420              	.LVL248:
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3421              		.loc 1 1938 5 is_stmt 1 view .LVU977
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3422              		.loc 1 1938 40 is_stmt 0 view .LVU978
 3423 01cc 0868     		ldr	r0, [r1]
 3424              	.LVL249:
 3425              	.LBB66:
 3426              	.LBI66:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3427              		.loc 2 850 57 is_stmt 1 view .LVU979
 3428              	.LBB67:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3429              		.loc 2 852 3 view .LVU980
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3430              		.loc 2 857 4 view .LVU981
 3431              		.syntax unified
 3432              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3433 01ce 92FAA2F2 		rbit r2, r2
 3434              	@ 0 "" 2
 3435              	.LVL250:
 3436              		.loc 2 870 3 view .LVU982
 3437              		.loc 2 870 3 is_stmt 0 view .LVU983
 3438              		.thumb
 3439              		.syntax unified
 3440              	.LBE67:
 3441              	.LBE66:
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3442              		.loc 1 1938 40 view .LVU984
 3443 01d2 B2FA82F2 		clz	r2, r2
 3444 01d6 033A     		subs	r2, r2, #3
 3445 01d8 02FB05F2 		mul	r2, r2, r5
 3446 01dc 0332     		adds	r2, r2, #3
 3447 01de 00FA02F2 		lsl	r2, r0, r2
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3448              		.loc 1 1938 37 view .LVU985
 3449 01e2 2243     		orrs	r2, r2, r4
 3450              	.LVL251:
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3451              		.loc 1 1941 5 is_stmt 1 view .LVU986
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3452              		.loc 1 1941 26 is_stmt 0 view .LVU987
 3453 01e4 186E     		ldr	r0, [r3, #96]
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3454              		.loc 1 1941 39 view .LVU988
 3455 01e6 0138     		subs	r0, r0, #1
 3456 01e8 1866     		str	r0, [r3, #96]
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3457              		.loc 1 1947 5 is_stmt 1 view .LVU989
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3458              		.loc 1 1947 40 is_stmt 0 view .LVU990
 3459 01ea DC6D     		ldr	r4, [r3, #92]
 3460 01ec 2243     		orrs	r2, r2, r4
 3461              	.LVL252:
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3462              		.loc 1 1947 40 view .LVU991
 3463 01ee DA65     		str	r2, [r3, #92]
ARM GAS  /tmp/cckWcrpf.s 			page 118


1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3464              		.loc 1 1951 5 is_stmt 1 view .LVU992
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3465              		.loc 1 1951 8 is_stmt 0 view .LVU993
 3466 01f0 0028     		cmp	r0, #0
 3467 01f2 7FF42CAF 		bne	.L274
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3468              		.loc 1 1953 7 is_stmt 1 view .LVU994
 3469 01f6 1C68     		ldr	r4, [r3]
 3470 01f8 E06C     		ldr	r0, [r4, #76]
 3471 01fa 20F07B40 		bic	r0, r0, #-83886080
 3472 01fe 20F46F00 		bic	r0, r0, #15663104
 3473 0202 20F43F40 		bic	r0, r0, #48896
 3474 0206 20F0FF00 		bic	r0, r0, #255
 3475 020a 0243     		orrs	r2, r2, r0
 3476 020c E264     		str	r2, [r4, #76]
 3477 020e 1EE7     		b	.L274
 3478              	.L280:
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext) );
 3479              		.loc 1 1982 8 view .LVU995
 3480 0210 1D68     		ldr	r5, [r3]
 3481 0212 EA68     		ldr	r2, [r5, #12]
 3482 0214 22F44012 		bic	r2, r2, #3145728
 3483 0218 91F82A40 		ldrb	r4, [r1, #42]	@ zero_extendqisi2
 3484              	.LVL253:
 3485              	.LBB68:
 3486              	.LBI68:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3487              		.loc 2 850 57 view .LVU996
 3488              	.LBB69:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3489              		.loc 2 852 3 view .LVU997
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3490              		.loc 2 857 4 view .LVU998
 3491 021c 4FF40010 		mov	r0, #2097152
 3492              		.syntax unified
 3493              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3494 0220 90FAA0F0 		rbit r0, r0
 3495              	@ 0 "" 2
 3496              	.LVL254:
 3497              		.loc 2 870 3 view .LVU999
 3498              		.loc 2 870 3 is_stmt 0 view .LVU1000
 3499              		.thumb
 3500              		.syntax unified
 3501              	.LBE69:
 3502              	.LBE68:
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext) );
 3503              		.loc 1 1982 8 view .LVU1001
 3504 0224 B0FA80F0 		clz	r0, r0
 3505 0228 04FA00F0 		lsl	r0, r4, r0
 3506 022c 0243     		orrs	r2, r2, r0
 3507 022e EA60     		str	r2, [r5, #12]
 3508 0230 37E7     		b	.L279
 3509              	.L338:
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3510              		.loc 1 2004 9 is_stmt 1 view .LVU1002
 3511 0232 D068     		ldr	r0, [r2, #12]
ARM GAS  /tmp/cckWcrpf.s 			page 119


 3512 0234 40F00070 		orr	r0, r0, #33554432
 3513 0238 D060     		str	r0, [r2, #12]
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 3514              		.loc 1 1748 21 is_stmt 0 view .LVU1003
 3515 023a 0020     		movs	r0, #0
 3516 023c 48E7     		b	.L285
 3517              	.L283:
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3518              		.loc 1 2015 7 is_stmt 1 view .LVU1004
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3519              		.loc 1 2015 26 is_stmt 0 view .LVU1005
 3520 023e 91F82900 		ldrb	r0, [r1, #41]	@ zero_extendqisi2
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3521              		.loc 1 2015 10 view .LVU1006
 3522 0242 0128     		cmp	r0, #1
 3523 0244 05D0     		beq	.L340
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3524              		.loc 1 2024 9 is_stmt 1 view .LVU1007
 3525 0246 D068     		ldr	r0, [r2, #12]
 3526 0248 20F00070 		bic	r0, r0, #33554432
 3527 024c D060     		str	r0, [r2, #12]
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 3528              		.loc 1 1748 21 is_stmt 0 view .LVU1008
 3529 024e 0020     		movs	r0, #0
 3530 0250 3EE7     		b	.L285
 3531              	.L340:
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3532              		.loc 1 2018 9 is_stmt 1 view .LVU1009
 3533 0252 5A6D     		ldr	r2, [r3, #84]
 3534 0254 42F02002 		orr	r2, r2, #32
 3535 0258 5A65     		str	r2, [r3, #84]
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3536              		.loc 1 2020 9 view .LVU1010
 3537              	.LVL255:
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3538              		.loc 1 2020 9 is_stmt 0 view .LVU1011
 3539 025a 39E7     		b	.L285
 3540              	.LVL256:
 3541              	.L339:
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
 3542              		.loc 1 2030 7 is_stmt 1 view .LVU1012
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3543              		.loc 1 2031 7 view .LVU1013
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3544              		.loc 1 2034 7 view .LVU1014
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                         ADC_CFGR2_JOVSE                          |
 3545              		.loc 1 2043 7 view .LVU1015
 3546 025c 1D68     		ldr	r5, [r3]
 3547 025e 2C69     		ldr	r4, [r5, #16]
 3548 0260 AD4A     		ldr	r2, .L356
 3549 0262 2240     		ands	r2, r2, r4
 3550 0264 8C6B     		ldr	r4, [r1, #56]
 3551 0266 CE6B     		ldr	r6, [r1, #60]
 3552 0268 3443     		orrs	r4, r4, r6
 3553 026a 2243     		orrs	r2, r2, r4
 3554 026c 42F00202 		orr	r2, r2, #2
 3555 0270 2A61     		str	r2, [r5, #16]
ARM GAS  /tmp/cckWcrpf.s 			page 120


 3556 0272 37E7     		b	.L288
 3557              	.L289:
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel),
 3558              		.loc 1 2068 7 view .LVU1016
 3559 0274 1F68     		ldr	r7, [r3]
 3560 0276 7E69     		ldr	r6, [r7, #20]
 3561              	.LVL257:
 3562              	.LBB70:
 3563              	.LBI70:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3564              		.loc 2 850 57 view .LVU1017
 3565              	.LBB71:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3566              		.loc 2 852 3 view .LVU1018
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3567              		.loc 2 857 4 view .LVU1019
 3568 0278 3824     		movs	r4, #56
 3569              		.syntax unified
 3570              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3571 027a 94FAA4F5 		rbit r5, r4
 3572              	@ 0 "" 2
 3573              	.LVL258:
 3574              		.loc 2 870 3 view .LVU1020
 3575              		.loc 2 870 3 is_stmt 0 view .LVU1021
 3576              		.thumb
 3577              		.syntax unified
 3578              	.LBE71:
 3579              	.LBE70:
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel),
 3580              		.loc 1 2068 7 view .LVU1022
 3581 027e B5FA85F5 		clz	r5, r5
 3582 0282 05FB02F5 		mul	r5, r5, r2
 3583 0286 4FF0070C 		mov	ip, #7
 3584 028a 0CFA05F5 		lsl	r5, ip, r5
 3585 028e 26EA0506 		bic	r6, r6, r5
 3586 0292 8D68     		ldr	r5, [r1, #8]
 3587              	.LVL259:
 3588              	.LBB72:
 3589              	.LBI72:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3590              		.loc 2 850 57 is_stmt 1 view .LVU1023
 3591              	.LBB73:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3592              		.loc 2 852 3 view .LVU1024
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3593              		.loc 2 857 4 view .LVU1025
 3594              		.syntax unified
 3595              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3596 0294 94FAA4F4 		rbit r4, r4
 3597              	@ 0 "" 2
 3598              	.LVL260:
 3599              		.loc 2 870 3 view .LVU1026
 3600              		.loc 2 870 3 is_stmt 0 view .LVU1027
 3601              		.thumb
 3602              		.syntax unified
 3603              	.LBE73:
 3604              	.LBE72:
ARM GAS  /tmp/cckWcrpf.s 			page 121


2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel),
 3605              		.loc 1 2068 7 view .LVU1028
 3606 0298 B4FA84F4 		clz	r4, r4
 3607 029c 04FB02F2 		mul	r2, r4, r2
 3608 02a0 05FA02F2 		lsl	r2, r5, r2
 3609 02a4 3243     		orrs	r2, r2, r6
 3610 02a6 7A61     		str	r2, [r7, #20]
 3611 02a8 42E7     		b	.L290
 3612              	.LVL261:
 3613              	.L295:
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       case ADC_OFFSET_1:
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Configure offset register 1:                                         */
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Enable offset                                                      */
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set channel number                                                 */
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set offset value                                                   */
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->OFR1,
 3614              		.loc 1 2087 9 is_stmt 1 view .LVU1029
 3615 02aa 2E6E     		ldr	r6, [r5, #96]
 3616 02ac 06F00046 		and	r6, r6, #-2147483648
 3617 02b0 0C68     		ldr	r4, [r1]
 3618              	.LVL262:
 3619              	.LBB74:
 3620              	.LBI74:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3621              		.loc 2 850 57 view .LVU1030
 3622              	.LBB75:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3623              		.loc 2 852 3 view .LVU1031
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3624              		.loc 2 857 4 view .LVU1032
 3625 02b2 4FF0F847 		mov	r7, #2080374784
 3626              		.syntax unified
 3627              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3628 02b6 97FAA7F7 		rbit r7, r7
 3629              	@ 0 "" 2
 3630              	.LVL263:
 3631              		.loc 2 870 3 view .LVU1033
 3632              		.loc 2 870 3 is_stmt 0 view .LVU1034
 3633              		.thumb
 3634              		.syntax unified
 3635              	.LBE75:
 3636              	.LBE74:
 3637              		.loc 1 2087 9 view .LVU1035
 3638 02ba B7FA87F7 		clz	r7, r7
 3639 02be BC40     		lsls	r4, r4, r7
 3640 02c0 2243     		orrs	r2, r2, r4
 3641              	.LVL264:
 3642              		.loc 1 2087 9 view .LVU1036
 3643 02c2 3243     		orrs	r2, r2, r6
 3644 02c4 2A66     		str	r2, [r5, #96]
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR1_OFFSET1 | ADC_OFR1_OFFSET1_CH,
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) | tmpOffsetShifted);
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT1, sConfigInjected-> InjectedOffsetRightS
 3645              		.loc 1 2090 9 is_stmt 1 view .LVU1037
 3646 02c6 1C68     		ldr	r4, [r3]
 3647 02c8 2269     		ldr	r2, [r4, #16]
ARM GAS  /tmp/cckWcrpf.s 			page 122


 3648 02ca 22F40062 		bic	r2, r2, #2048
 3649 02ce 8D69     		ldr	r5, [r1, #24]
 3650 02d0 2A43     		orrs	r2, r2, r5
 3651 02d2 2261     		str	r2, [r4, #16]
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Enable or disable the signed saturation bit */
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if(sConfigInjected->InjectedOffsetSignedSaturation != DISABLE)
 3652              		.loc 1 2092 9 view .LVU1038
 3653              		.loc 1 2092 27 is_stmt 0 view .LVU1039
 3654 02d4 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
 3655              		.loc 1 2092 11 view .LVU1040
 3656 02d6 2AB1     		cbz	r2, .L296
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 3657              		.loc 1 2094 11 is_stmt 1 view .LVU1041
 3658 02d8 1C68     		ldr	r4, [r3]
 3659 02da 226E     		ldr	r2, [r4, #96]
 3660 02dc 42F00042 		orr	r2, r2, #-2147483648
 3661 02e0 2266     		str	r2, [r4, #96]
 3662 02e2 72E0     		b	.L281
 3663              	.L296:
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 3664              		.loc 1 2098 11 view .LVU1042
 3665 02e4 1C68     		ldr	r4, [r3]
 3666 02e6 226E     		ldr	r2, [r4, #96]
 3667 02e8 22F00042 		bic	r2, r2, #-2147483648
 3668 02ec 2266     		str	r2, [r4, #96]
 3669 02ee 6CE0     		b	.L281
 3670              	.LVL265:
 3671              	.L294:
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         break;
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       case ADC_OFFSET_2:
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Configure offset register 2:                                         */
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Enable offset                                                      */
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set channel number                                                 */
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set offset value                                                   */
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set Right shift after offset application                           */
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->OFR2,
 3672              		.loc 1 2108 9 view .LVU1043
 3673 02f0 6E6E     		ldr	r6, [r5, #100]
 3674 02f2 06F00046 		and	r6, r6, #-2147483648
 3675 02f6 0C68     		ldr	r4, [r1]
 3676              	.LVL266:
 3677              	.LBB76:
 3678              	.LBI76:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3679              		.loc 2 850 57 view .LVU1044
 3680              	.LBB77:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3681              		.loc 2 852 3 view .LVU1045
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3682              		.loc 2 857 4 view .LVU1046
 3683 02f8 4FF0F847 		mov	r7, #2080374784
ARM GAS  /tmp/cckWcrpf.s 			page 123


 3684              		.syntax unified
 3685              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3686 02fc 97FAA7F7 		rbit r7, r7
 3687              	@ 0 "" 2
 3688              	.LVL267:
 3689              		.loc 2 870 3 view .LVU1047
 3690              		.loc 2 870 3 is_stmt 0 view .LVU1048
 3691              		.thumb
 3692              		.syntax unified
 3693              	.LBE77:
 3694              	.LBE76:
 3695              		.loc 1 2108 9 view .LVU1049
 3696 0300 B7FA87F7 		clz	r7, r7
 3697 0304 BC40     		lsls	r4, r4, r7
 3698 0306 2243     		orrs	r2, r2, r4
 3699              	.LVL268:
 3700              		.loc 1 2108 9 view .LVU1050
 3701 0308 3243     		orrs	r2, r2, r6
 3702 030a 6A66     		str	r2, [r5, #100]
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR2_OFFSET2 | ADC_OFR2_OFFSET2_CH,
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) | tmpOffsetShifted);
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT2, sConfigInjected-> InjectedOffsetRight
 3703              		.loc 1 2111 10 is_stmt 1 view .LVU1051
 3704 030c 1C68     		ldr	r4, [r3]
 3705 030e 2269     		ldr	r2, [r4, #16]
 3706 0310 22F48052 		bic	r2, r2, #4096
 3707 0314 8D69     		ldr	r5, [r1, #24]
 3708 0316 42EA4502 		orr	r2, r2, r5, lsl #1
 3709 031a 2261     		str	r2, [r4, #16]
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Enable or disable the signed saturation bit */
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if(sConfigInjected->InjectedOffsetSignedSaturation != DISABLE)
 3710              		.loc 1 2113 9 view .LVU1052
 3711              		.loc 1 2113 27 is_stmt 0 view .LVU1053
 3712 031c 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
 3713              		.loc 1 2113 11 view .LVU1054
 3714 031e 2AB1     		cbz	r2, .L297
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 3715              		.loc 1 2115 11 is_stmt 1 view .LVU1055
 3716 0320 1C68     		ldr	r4, [r3]
 3717 0322 626E     		ldr	r2, [r4, #100]
 3718 0324 42F00042 		orr	r2, r2, #-2147483648
 3719 0328 6266     		str	r2, [r4, #100]
 3720 032a 4EE0     		b	.L281
 3721              	.L297:
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 3722              		.loc 1 2119 11 view .LVU1056
 3723 032c 1C68     		ldr	r4, [r3]
 3724 032e 626E     		ldr	r2, [r4, #100]
 3725 0330 22F00042 		bic	r2, r2, #-2147483648
 3726 0334 6266     		str	r2, [r4, #100]
 3727 0336 48E0     		b	.L281
 3728              	.LVL269:
 3729              	.L293:
ARM GAS  /tmp/cckWcrpf.s 			page 124


2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         break;
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       case ADC_OFFSET_3:
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Configure offset register 3:                                         */
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Enable offset                                                      */
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set channel number                                                 */
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set offset value                                                   */
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set Right shift after offset application                           */
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->OFR3,
 3730              		.loc 1 2129 9 view .LVU1057
 3731 0338 AE6E     		ldr	r6, [r5, #104]
 3732 033a 06F00046 		and	r6, r6, #-2147483648
 3733 033e 0C68     		ldr	r4, [r1]
 3734              	.LVL270:
 3735              	.LBB78:
 3736              	.LBI78:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3737              		.loc 2 850 57 view .LVU1058
 3738              	.LBB79:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3739              		.loc 2 852 3 view .LVU1059
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3740              		.loc 2 857 4 view .LVU1060
 3741 0340 4FF0F847 		mov	r7, #2080374784
 3742              		.syntax unified
 3743              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3744 0344 97FAA7F7 		rbit r7, r7
 3745              	@ 0 "" 2
 3746              	.LVL271:
 3747              		.loc 2 870 3 view .LVU1061
 3748              		.loc 2 870 3 is_stmt 0 view .LVU1062
 3749              		.thumb
 3750              		.syntax unified
 3751              	.LBE79:
 3752              	.LBE78:
 3753              		.loc 1 2129 9 view .LVU1063
 3754 0348 B7FA87F7 		clz	r7, r7
 3755 034c BC40     		lsls	r4, r4, r7
 3756 034e 2243     		orrs	r2, r2, r4
 3757              	.LVL272:
 3758              		.loc 1 2129 9 view .LVU1064
 3759 0350 3243     		orrs	r2, r2, r6
 3760 0352 AA66     		str	r2, [r5, #104]
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR3_OFFSET3 | ADC_OFR3_OFFSET3_CH,
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) | tmpOffsetShifted);
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT3, sConfigInjected-> InjectedOffsetRightS
 3761              		.loc 1 2132 9 is_stmt 1 view .LVU1065
 3762 0354 1C68     		ldr	r4, [r3]
 3763 0356 2269     		ldr	r2, [r4, #16]
 3764 0358 22F40052 		bic	r2, r2, #8192
 3765 035c 8D69     		ldr	r5, [r1, #24]
 3766 035e 42EA8502 		orr	r2, r2, r5, lsl #2
 3767 0362 2261     		str	r2, [r4, #16]
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Enable or disable the signed saturation bit */
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if(sConfigInjected->InjectedOffsetSignedSaturation != DISABLE)
 3768              		.loc 1 2134 9 view .LVU1066
ARM GAS  /tmp/cckWcrpf.s 			page 125


 3769              		.loc 1 2134 27 is_stmt 0 view .LVU1067
 3770 0364 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
 3771              		.loc 1 2134 11 view .LVU1068
 3772 0366 2AB1     		cbz	r2, .L298
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 3773              		.loc 1 2136 11 is_stmt 1 view .LVU1069
 3774 0368 1C68     		ldr	r4, [r3]
 3775 036a A26E     		ldr	r2, [r4, #104]
 3776 036c 42F00042 		orr	r2, r2, #-2147483648
 3777 0370 A266     		str	r2, [r4, #104]
 3778 0372 2AE0     		b	.L281
 3779              	.L298:
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 3780              		.loc 1 2140 11 view .LVU1070
 3781 0374 1C68     		ldr	r4, [r3]
 3782 0376 A26E     		ldr	r2, [r4, #104]
 3783 0378 22F00042 		bic	r2, r2, #-2147483648
 3784 037c A266     		str	r2, [r4, #104]
 3785 037e 24E0     		b	.L281
 3786              	.LVL273:
 3787              	.L291:
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         break;
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       case ADC_OFFSET_4:
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Configure offset register 1:                                         */
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Enable offset                                                      */
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set channel number                                                 */
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* - Set offset value                                                   */
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->OFR4,
 3788              		.loc 1 2149 9 view .LVU1071
 3789 0380 EE6E     		ldr	r6, [r5, #108]
 3790 0382 06F00046 		and	r6, r6, #-2147483648
 3791 0386 0C68     		ldr	r4, [r1]
 3792              	.LVL274:
 3793              	.LBB80:
 3794              	.LBI80:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3795              		.loc 2 850 57 view .LVU1072
 3796              	.LBB81:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3797              		.loc 2 852 3 view .LVU1073
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3798              		.loc 2 857 4 view .LVU1074
 3799 0388 4FF0F847 		mov	r7, #2080374784
 3800              		.syntax unified
 3801              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3802 038c 97FAA7F7 		rbit r7, r7
 3803              	@ 0 "" 2
 3804              	.LVL275:
 3805              		.loc 2 870 3 view .LVU1075
 3806              		.loc 2 870 3 is_stmt 0 view .LVU1076
 3807              		.thumb
ARM GAS  /tmp/cckWcrpf.s 			page 126


 3808              		.syntax unified
 3809              	.LBE81:
 3810              	.LBE80:
 3811              		.loc 1 2149 9 view .LVU1077
 3812 0390 B7FA87F7 		clz	r7, r7
 3813 0394 BC40     		lsls	r4, r4, r7
 3814 0396 2243     		orrs	r2, r2, r4
 3815              	.LVL276:
 3816              		.loc 1 2149 9 view .LVU1078
 3817 0398 3243     		orrs	r2, r2, r6
 3818 039a EA66     		str	r2, [r5, #108]
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR4_OFFSET4 | ADC_OFR4_OFFSET4_CH,
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) | tmpOffsetShifted);
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT4, sConfigInjected-> InjectedOffsetRightS
 3819              		.loc 1 2152 9 is_stmt 1 view .LVU1079
 3820 039c 1C68     		ldr	r4, [r3]
 3821 039e 2269     		ldr	r2, [r4, #16]
 3822 03a0 22F48042 		bic	r2, r2, #16384
 3823 03a4 8D69     		ldr	r5, [r1, #24]
 3824 03a6 42EAC502 		orr	r2, r2, r5, lsl #3
 3825 03aa 2261     		str	r2, [r4, #16]
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Enable or disable the signed saturation bit */
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if(sConfigInjected->InjectedOffsetSignedSaturation != DISABLE)
 3826              		.loc 1 2154 9 view .LVU1080
 3827              		.loc 1 2154 27 is_stmt 0 view .LVU1081
 3828 03ac 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
 3829              		.loc 1 2154 11 view .LVU1082
 3830 03ae 2AB1     		cbz	r2, .L299
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 3831              		.loc 1 2156 11 is_stmt 1 view .LVU1083
 3832 03b0 1C68     		ldr	r4, [r3]
 3833 03b2 E26E     		ldr	r2, [r4, #108]
 3834 03b4 42F00042 		orr	r2, r2, #-2147483648
 3835 03b8 E266     		str	r2, [r4, #108]
 3836 03ba 06E0     		b	.L281
 3837              	.L299:
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 3838              		.loc 1 2160 11 view .LVU1084
 3839 03bc 1C68     		ldr	r4, [r3]
 3840 03be E26E     		ldr	r2, [r4, #108]
 3841 03c0 22F00042 		bic	r2, r2, #-2147483648
 3842 03c4 E266     		str	r2, [r4, #108]
 3843 03c6 00E0     		b	.L281
 3844              	.LVL277:
 3845              	.L326:
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 3846              		.loc 1 1748 21 is_stmt 0 view .LVU1085
 3847 03c8 0020     		movs	r0, #0
 3848              	.LVL278:
 3849              	.L281:
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         break;
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       
ARM GAS  /tmp/cckWcrpf.s 			page 127


2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case ADC_OFFSET_NONE */
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       default :
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         break;
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   } /* if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET) */
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 3850              		.loc 1 2176 3 is_stmt 1 view .LVU1086
 3851              		.loc 1 2176 7 is_stmt 0 view .LVU1087
 3852 03ca 1C68     		ldr	r4, [r3]
 3853 03cc A268     		ldr	r2, [r4, #8]
 3854 03ce 02F00302 		and	r2, r2, #3
 3855 03d2 012A     		cmp	r2, #1
 3856 03d4 21D0     		beq	.L341
 3857              	.L300:
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 3858              		.loc 1 2179 5 is_stmt 1 view .LVU1088
 3859              		.loc 1 2179 24 is_stmt 0 view .LVU1089
 3860 03d6 CA68     		ldr	r2, [r1, #12]
 3861              		.loc 1 2179 8 view .LVU1090
 3862 03d8 B2F1804F 		cmp	r2, #1073741824
 3863 03dc 22D0     		beq	.L302
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
 3864              		.loc 1 2182 7 is_stmt 1 view .LVU1091
 3865 03de D4F8C020 		ldr	r2, [r4, #192]
 3866 03e2 0E68     		ldr	r6, [r1]
 3867 03e4 0125     		movs	r5, #1
 3868 03e6 B540     		lsls	r5, r5, r6
 3869 03e8 22EA0502 		bic	r2, r2, r5
 3870 03ec C4F8C020 		str	r2, [r4, #192]
 3871              	.L303:
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable differential mode */
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Sampling time configuration of channel ADC_IN+1 (negative input) */
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For channels 9 to 15 for ADC1, ADC2, 9 to 11 for ADC3 */
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_9)
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear the old sample time and set the new one */
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                 ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1),
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                 ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel +
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else /* For channels 0 to 8 */
ARM GAS  /tmp/cckWcrpf.s 			page 128


2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          /* Clear the old sample time and set the new one */
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1),
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****              ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel +1))
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* HAL_ADC_deInit().                                                      */
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if((hadc->Instance == ADC1) || (hadc->Instance == ADC2))
 3872              		.loc 1 2216 5 view .LVU1092
 3873              		.loc 1 2216 13 is_stmt 0 view .LVU1093
 3874 03f0 1A68     		ldr	r2, [r3]
 3875              		.loc 1 2216 7 view .LVU1094
 3876 03f2 4A4D     		ldr	r5, .L356+4
 3877 03f4 4A4C     		ldr	r4, .L356+8
 3878 03f6 A242     		cmp	r2, r4
 3879 03f8 18BF     		it	ne
 3880 03fa AA42     		cmpne	r2, r5
 3881 03fc 55D1     		bne	.L327
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Pointer to the common control register                                 */
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
 3882              		.loc 1 2219 21 view .LVU1095
 3883 03fe 04F50074 		add	r4, r4, #512
 3884              	.L305:
 3885              	.LVL279:
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Pointer to the common control register                                 */
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpADC_Common = ADC3_COMMON_REGISTER(hadc);
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (( (sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) &&
 3886              		.loc 1 2229 5 is_stmt 1 view .LVU1096
 3887              		.loc 1 2229 27 is_stmt 0 view .LVU1097
 3888 0402 0968     		ldr	r1, [r1]
 3889              	.LVL280:
 3890              		.loc 1 2229 8 view .LVU1098
 3891 0404 1229     		cmp	r1, #18
 3892 0406 52D0     		beq	.L342
 3893              	.L306:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 3894              		.loc 1 2230 75 view .LVU1099
 3895 0408 1129     		cmp	r1, #17
 3896 040a 7AD0     		beq	.L343
ARM GAS  /tmp/cckWcrpf.s 			page 129


 3897              	.L308:
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT_DIV4)       &&
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 3898              		.loc 1 2232 75 view .LVU1100
 3899 040c 1329     		cmp	r1, #19
 3900 040e 7DD0     		beq	.L344
 3901              	.LVL281:
 3902              	.L301:
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        )
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)   &&
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If Channel 17 is selected, enable Temp. sensor measurement path    */
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available only on ADC3        */
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) &&
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (hadc->Instance == ADC3))
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           while(WaitLoopIndex < ADC_TEMPSENSOR_DELAY_US)
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             WaitLoopIndex++;
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If Channel 18 is selected, enable VBAT measurement path            */
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Note: VBAT internal internal channels available only on ADC3       */
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT_DIV4) &&
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If Channel 0 is selected, enable VREFINT measurement path          */
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Note: VREFINT internal channels available only on ADC3             */
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT) &&
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Discrepancy found out between ADC instance and internal
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****              channel request */
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           tmp_hal_status  = HAL_ERROR;
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
ARM GAS  /tmp/cckWcrpf.s 			page 130


2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status  = HAL_ERROR;
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   } /* if (ADC_IS_ENABLE(hadc) == RESET) */
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3903              		.loc 1 2293 3 is_stmt 1 view .LVU1101
 3904              		.loc 1 2293 3 view .LVU1102
 3905 0410 0022     		movs	r2, #0
 3906 0412 83F85020 		strb	r2, [r3, #80]
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 3907              		.loc 1 2296 3 view .LVU1103
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3908              		.loc 1 2297 1 is_stmt 0 view .LVU1104
 3909 0416 F0BC     		pop	{r4, r5, r6, r7}
 3910              	.LCFI43:
 3911              		.cfi_remember_state
 3912              		.cfi_restore 7
 3913              		.cfi_restore 6
 3914              		.cfi_restore 5
 3915              		.cfi_restore 4
 3916              		.cfi_def_cfa_offset 0
 3917 0418 7047     		bx	lr
 3918              	.LVL282:
 3919              	.L341:
 3920              	.LCFI44:
 3921              		.cfi_restore_state
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 3922              		.loc 1 2176 7 discriminator 1 view .LVU1105
 3923 041a 2268     		ldr	r2, [r4]
 3924 041c 12F0010F 		tst	r2, #1
 3925 0420 F6D1     		bne	.L301
 3926 0422 D8E7     		b	.L300
 3927              	.L302:
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3928              		.loc 1 2187 7 is_stmt 1 view .LVU1106
 3929 0424 D4F8C020 		ldr	r2, [r4, #192]
 3930 0428 0E68     		ldr	r6, [r1]
 3931 042a 0125     		movs	r5, #1
 3932 042c B540     		lsls	r5, r5, r6
 3933 042e 2A43     		orrs	r2, r2, r5
 3934 0430 C4F8C020 		str	r2, [r4, #192]
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3935              		.loc 1 2191 7 view .LVU1107
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3936              		.loc 1 2191 26 is_stmt 0 view .LVU1108
 3937 0434 0C68     		ldr	r4, [r1]
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3938              		.loc 1 2191 10 view .LVU1109
ARM GAS  /tmp/cckWcrpf.s 			page 131


 3939 0436 082C     		cmp	r4, #8
 3940 0438 1BD9     		bls	.L304
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                 ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1),
 3941              		.loc 1 2194 9 is_stmt 1 view .LVU1110
 3942 043a 1F68     		ldr	r7, [r3]
 3943 043c BE69     		ldr	r6, [r7, #24]
 3944              	.LVL283:
 3945              	.LBB82:
 3946              	.LBI82:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3947              		.loc 2 850 57 view .LVU1111
 3948              	.LBB83:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3949              		.loc 2 852 3 view .LVU1112
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3950              		.loc 2 857 4 view .LVU1113
 3951 043e 3822     		movs	r2, #56
 3952              		.syntax unified
 3953              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3954 0440 92FAA2F5 		rbit r5, r2
 3955              	@ 0 "" 2
 3956              	.LVL284:
 3957              		.loc 2 870 3 view .LVU1114
 3958              		.loc 2 870 3 is_stmt 0 view .LVU1115
 3959              		.thumb
 3960              		.syntax unified
 3961              	.LBE83:
 3962              	.LBE82:
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                 ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1),
 3963              		.loc 1 2194 9 view .LVU1116
 3964 0444 B5FA85F5 		clz	r5, r5
 3965 0448 093C     		subs	r4, r4, #9
 3966 044a 04FB05F5 		mul	r5, r4, r5
 3967 044e 4FF0070C 		mov	ip, #7
 3968 0452 0CFA05F5 		lsl	r5, ip, r5
 3969 0456 26EA0506 		bic	r6, r6, r5
 3970 045a 8D68     		ldr	r5, [r1, #8]
 3971              	.LVL285:
 3972              	.LBB84:
 3973              	.LBI84:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3974              		.loc 2 850 57 is_stmt 1 view .LVU1117
 3975              	.LBB85:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3976              		.loc 2 852 3 view .LVU1118
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3977              		.loc 2 857 4 view .LVU1119
 3978              		.syntax unified
 3979              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3980 045c 92FAA2F2 		rbit r2, r2
 3981              	@ 0 "" 2
 3982              	.LVL286:
 3983              		.loc 2 870 3 view .LVU1120
 3984              		.loc 2 870 3 is_stmt 0 view .LVU1121
 3985              		.thumb
 3986              		.syntax unified
 3987              	.LBE85:
ARM GAS  /tmp/cckWcrpf.s 			page 132


 3988              	.LBE84:
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                 ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1),
 3989              		.loc 1 2194 9 view .LVU1122
 3990 0460 B2FA82F2 		clz	r2, r2
 3991 0464 02FB04F4 		mul	r4, r2, r4
 3992 0468 05FA04F4 		lsl	r4, r5, r4
 3993 046c 3443     		orrs	r4, r4, r6
 3994 046e BC61     		str	r4, [r7, #24]
 3995 0470 BEE7     		b	.L303
 3996              	.L304:
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1),
 3997              		.loc 1 2201 9 is_stmt 1 view .LVU1123
 3998 0472 1F68     		ldr	r7, [r3]
 3999 0474 7E69     		ldr	r6, [r7, #20]
 4000              	.LVL287:
 4001              	.LBB86:
 4002              	.LBI86:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4003              		.loc 2 850 57 view .LVU1124
 4004              	.LBB87:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4005              		.loc 2 852 3 view .LVU1125
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4006              		.loc 2 857 4 view .LVU1126
 4007 0476 3822     		movs	r2, #56
 4008              		.syntax unified
 4009              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4010 0478 92FAA2F5 		rbit r5, r2
 4011              	@ 0 "" 2
 4012              	.LVL288:
 4013              		.loc 2 870 3 view .LVU1127
 4014              		.loc 2 870 3 is_stmt 0 view .LVU1128
 4015              		.thumb
 4016              		.syntax unified
 4017              	.LBE87:
 4018              	.LBE86:
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1),
 4019              		.loc 1 2201 9 view .LVU1129
 4020 047c B5FA85F5 		clz	r5, r5
 4021 0480 0134     		adds	r4, r4, #1
 4022 0482 04FB05F5 		mul	r5, r4, r5
 4023 0486 4FF0070C 		mov	ip, #7
 4024 048a 0CFA05F5 		lsl	r5, ip, r5
 4025 048e 26EA0506 		bic	r6, r6, r5
 4026 0492 8D68     		ldr	r5, [r1, #8]
 4027              	.LVL289:
 4028              	.LBB88:
 4029              	.LBI88:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4030              		.loc 2 850 57 is_stmt 1 view .LVU1130
 4031              	.LBB89:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4032              		.loc 2 852 3 view .LVU1131
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4033              		.loc 2 857 4 view .LVU1132
 4034              		.syntax unified
 4035              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cckWcrpf.s 			page 133


 4036 0494 92FAA2F2 		rbit r2, r2
 4037              	@ 0 "" 2
 4038              	.LVL290:
 4039              		.loc 2 870 3 view .LVU1133
 4040              		.loc 2 870 3 is_stmt 0 view .LVU1134
 4041              		.thumb
 4042              		.syntax unified
 4043              	.LBE89:
 4044              	.LBE88:
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1),
 4045              		.loc 1 2201 9 view .LVU1135
 4046 0498 B2FA82F2 		clz	r2, r2
 4047 049c 02FB04F2 		mul	r2, r2, r4
 4048 04a0 05FA02F2 		lsl	r2, r5, r2
 4049 04a4 3243     		orrs	r2, r2, r6
 4050 04a6 7A61     		str	r2, [r7, #20]
 4051 04a8 A2E7     		b	.L303
 4052              	.L327:
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4053              		.loc 1 2224 21 view .LVU1136
 4054 04aa 1E4C     		ldr	r4, .L356+12
 4055 04ac A9E7     		b	.L305
 4056              	.LVL291:
 4057              	.L342:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT_DIV4)       &&
 4058              		.loc 1 2230 12 discriminator 1 view .LVU1137
 4059 04ae A568     		ldr	r5, [r4, #8]
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 4060              		.loc 1 2229 72 discriminator 1 view .LVU1138
 4061 04b0 15F4000F 		tst	r5, #8388608
 4062 04b4 A8D1     		bne	.L306
 4063              	.L307:
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4064              		.loc 1 2240 7 is_stmt 1 view .LVU1139
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4065              		.loc 1 2240 12 is_stmt 0 view .LVU1140
 4066 04b6 9568     		ldr	r5, [r2, #8]
 4067 04b8 05F00305 		and	r5, r5, #3
 4068 04bc 012D     		cmp	r5, #1
 4069 04be 33D0     		beq	.L345
 4070              	.L309:
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4071              		.loc 1 2240 10 view .LVU1141
 4072 04c0 164D     		ldr	r5, .L356+4
 4073 04c2 AA42     		cmp	r2, r5
 4074 04c4 3AD0     		beq	.L346
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4075              		.loc 1 2241 12 view .LVU1142
 4076 04c6 164D     		ldr	r5, .L356+8
 4077 04c8 AA42     		cmp	r2, r5
 4078 04ca 50D0     		beq	.L347
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4079              		.loc 1 2241 12 discriminator 10 view .LVU1143
 4080 04cc 134D     		ldr	r5, .L356+4
 4081 04ce AD68     		ldr	r5, [r5, #8]
 4082 04d0 05F00305 		and	r5, r5, #3
 4083 04d4 012D     		cmp	r5, #1
ARM GAS  /tmp/cckWcrpf.s 			page 134


 4084 04d6 6BD0     		beq	.L348
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4085              		.loc 1 2241 12 view .LVU1144
 4086 04d8 0025     		movs	r5, #0
 4087              	.L318:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4088              		.loc 1 2241 12 discriminator 27 view .LVU1145
 4089 04da 4DBB     		cbnz	r5, .L310
 4090              	.L317:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4091              		.loc 1 2241 12 discriminator 29 view .LVU1146
 4092 04dc 104D     		ldr	r5, .L356+8
 4093 04de AD68     		ldr	r5, [r5, #8]
 4094 04e0 05F00305 		and	r5, r5, #3
 4095 04e4 012D     		cmp	r5, #1
 4096 04e6 6CD0     		beq	.L349
 4097              	.L313:
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (hadc->Instance == ADC3))
 4098              		.loc 1 2245 9 is_stmt 1 view .LVU1147
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (hadc->Instance == ADC3))
 4099              		.loc 1 2245 12 is_stmt 0 view .LVU1148
 4100 04e8 1229     		cmp	r1, #18
 4101 04ea 70D0     		beq	.L350
 4102              	.L319:
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
 4103              		.loc 1 2258 14 is_stmt 1 view .LVU1149
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
 4104              		.loc 1 2258 17 is_stmt 0 view .LVU1150
 4105 04ec 1129     		cmp	r1, #17
 4106 04ee 7BD0     		beq	.L351
 4107              	.L322:
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
 4108              		.loc 1 2265 14 is_stmt 1 view .LVU1151
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
 4109              		.loc 1 2265 17 is_stmt 0 view .LVU1152
 4110 04f0 1329     		cmp	r1, #19
 4111 04f2 00F08180 		beq	.L352
 4112              	.L323:
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           tmp_hal_status  = HAL_ERROR;
 4113              		.loc 1 2274 11 is_stmt 1 view .LVU1153
 4114 04f6 5A6D     		ldr	r2, [r3, #84]
 4115 04f8 42F02002 		orr	r2, r2, #32
 4116 04fc 5A65     		str	r2, [r3, #84]
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4117              		.loc 1 2275 11 view .LVU1154
 4118              	.LVL292:
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4119              		.loc 1 2275 27 is_stmt 0 view .LVU1155
 4120 04fe 0120     		movs	r0, #1
 4121 0500 86E7     		b	.L301
 4122              	.LVL293:
 4123              	.L343:
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 4124              		.loc 1 2232 12 view .LVU1156
 4125 0502 A568     		ldr	r5, [r4, #8]
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 4126              		.loc 1 2231 77 view .LVU1157
ARM GAS  /tmp/cckWcrpf.s 			page 135


 4127 0504 15F0807F 		tst	r5, #16777216
 4128 0508 D5D0     		beq	.L307
 4129 050a 7FE7     		b	.L308
 4130              	.L344:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        )
 4131              		.loc 1 2234 12 view .LVU1158
 4132 050c A568     		ldr	r5, [r4, #8]
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 4133              		.loc 1 2233 72 view .LVU1159
 4134 050e 15F4800F 		tst	r5, #4194304
 4135 0512 7FF47DAF 		bne	.L301
 4136 0516 CEE7     		b	.L307
 4137              	.L357:
 4138              		.align	2
 4139              	.L356:
 4140 0518 1DFE00FC 		.word	-67043811
 4141 051c 00200240 		.word	1073881088
 4142 0520 00210240 		.word	1073881344
 4143 0524 00630258 		.word	1476551424
 4144              	.L345:
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4145              		.loc 1 2240 12 discriminator 1 view .LVU1160
 4146 0528 1568     		ldr	r5, [r2]
 4147 052a 15F0010F 		tst	r5, #1
 4148 052e C7D0     		beq	.L309
 4149              	.L310:
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4150              		.loc 1 2284 9 is_stmt 1 view .LVU1161
 4151 0530 5A6D     		ldr	r2, [r3, #84]
 4152 0532 42F02002 		orr	r2, r2, #32
 4153 0536 5A65     		str	r2, [r3, #84]
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4154              		.loc 1 2286 9 view .LVU1162
 4155              	.LVL294:
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4156              		.loc 1 2286 25 is_stmt 0 view .LVU1163
 4157 0538 0120     		movs	r0, #1
 4158 053a 69E7     		b	.L301
 4159              	.LVL295:
 4160              	.L346:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4161              		.loc 1 2241 12 view .LVU1164
 4162 053c 05F58075 		add	r5, r5, #256
 4163 0540 AD68     		ldr	r5, [r5, #8]
 4164 0542 05F00305 		and	r5, r5, #3
 4165 0546 012D     		cmp	r5, #1
 4166 0548 0BD0     		beq	.L353
 4167              	.L312:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4168              		.loc 1 2241 12 discriminator 4 view .LVU1165
 4169 054a 314D     		ldr	r5, .L358
 4170 054c AD68     		ldr	r5, [r5, #8]
 4171 054e 05F00305 		and	r5, r5, #3
 4172 0552 012D     		cmp	r5, #1
 4173 0554 C8D1     		bne	.L313
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4174              		.loc 1 2241 12 discriminator 5 view .LVU1166
ARM GAS  /tmp/cckWcrpf.s 			page 136


 4175 0556 2E4D     		ldr	r5, .L358
 4176 0558 2D68     		ldr	r5, [r5]
 4177 055a 15F0010F 		tst	r5, #1
 4178 055e E7D1     		bne	.L310
 4179 0560 C2E7     		b	.L313
 4180              	.L353:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4181              		.loc 1 2241 12 discriminator 1 view .LVU1167
 4182 0562 2C4D     		ldr	r5, .L358+4
 4183 0564 2D68     		ldr	r5, [r5]
 4184 0566 15F0010F 		tst	r5, #1
 4185 056a E1D1     		bne	.L310
 4186 056c EDE7     		b	.L312
 4187              	.L347:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4188              		.loc 1 2241 12 discriminator 9 view .LVU1168
 4189 056e A5F58075 		sub	r5, r5, #256
 4190 0572 AD68     		ldr	r5, [r5, #8]
 4191 0574 05F00305 		and	r5, r5, #3
 4192 0578 012D     		cmp	r5, #1
 4193 057a 09D0     		beq	.L354
 4194              	.L315:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4195              		.loc 1 2241 12 discriminator 14 view .LVU1169
 4196 057c 244D     		ldr	r5, .L358
 4197 057e AD68     		ldr	r5, [r5, #8]
 4198 0580 05F00305 		and	r5, r5, #3
 4199 0584 012D     		cmp	r5, #1
 4200 0586 0AD0     		beq	.L355
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4201              		.loc 1 2241 12 view .LVU1170
 4202 0588 0025     		movs	r5, #0
 4203              	.L316:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4204              		.loc 1 2241 12 discriminator 20 view .LVU1171
 4205 058a 002D     		cmp	r5, #0
 4206 058c D0D1     		bne	.L310
 4207 058e A5E7     		b	.L317
 4208              	.L354:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4209              		.loc 1 2241 12 discriminator 11 view .LVU1172
 4210 0590 214D     		ldr	r5, .L358+8
 4211 0592 2D68     		ldr	r5, [r5]
 4212 0594 15F0010F 		tst	r5, #1
 4213 0598 F0D0     		beq	.L315
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4214              		.loc 1 2241 12 view .LVU1173
 4215 059a 0125     		movs	r5, #1
 4216 059c F5E7     		b	.L316
 4217              	.L355:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4218              		.loc 1 2241 12 discriminator 15 view .LVU1174
 4219 059e 1C4D     		ldr	r5, .L358
 4220 05a0 2D68     		ldr	r5, [r5]
 4221 05a2 15F0010F 		tst	r5, #1
 4222 05a6 01D1     		bne	.L330
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cckWcrpf.s 			page 137


 4223              		.loc 1 2241 12 view .LVU1175
 4224 05a8 0025     		movs	r5, #0
 4225 05aa EEE7     		b	.L316
 4226              	.L330:
 4227 05ac 0125     		movs	r5, #1
 4228 05ae ECE7     		b	.L316
 4229              	.L348:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4230              		.loc 1 2241 12 discriminator 22 view .LVU1176
 4231 05b0 194D     		ldr	r5, .L358+8
 4232 05b2 2D68     		ldr	r5, [r5]
 4233 05b4 15F0010F 		tst	r5, #1
 4234 05b8 01D1     		bne	.L332
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4235              		.loc 1 2241 12 view .LVU1177
 4236 05ba 0025     		movs	r5, #0
 4237 05bc 8DE7     		b	.L318
 4238              	.L332:
 4239 05be 0125     		movs	r5, #1
 4240 05c0 8BE7     		b	.L318
 4241              	.L349:
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4242              		.loc 1 2241 12 discriminator 30 view .LVU1178
 4243 05c2 144D     		ldr	r5, .L358+4
 4244 05c4 2D68     		ldr	r5, [r5]
 4245 05c6 15F0010F 		tst	r5, #1
 4246 05ca B1D1     		bne	.L310
 4247 05cc 8CE7     		b	.L313
 4248              	.L350:
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (hadc->Instance == ADC3))
 4249              		.loc 1 2245 74 discriminator 1 view .LVU1179
 4250 05ce 104D     		ldr	r5, .L358
 4251 05d0 AA42     		cmp	r2, r5
 4252 05d2 8BD1     		bne	.L319
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4253              		.loc 1 2248 11 is_stmt 1 view .LVU1180
 4254 05d4 A268     		ldr	r2, [r4, #8]
 4255 05d6 42F40002 		orr	r2, r2, #8388608
 4256 05da A260     		str	r2, [r4, #8]
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 4257              		.loc 1 2251 11 view .LVU1181
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4258              		.loc 1 1751 12 is_stmt 0 view .LVU1182
 4259 05dc 0022     		movs	r2, #0
 4260              	.LVL296:
 4261              	.L320:
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 4262              		.loc 1 2251 16 view .LVU1183
 4263 05de 772A     		cmp	r2, #119
 4264 05e0 3FF616AF 		bhi	.L301
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 4265              		.loc 1 2253 13 is_stmt 1 view .LVU1184
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 4266              		.loc 1 2253 26 is_stmt 0 view .LVU1185
 4267 05e4 0132     		adds	r2, r2, #1
 4268              	.LVL297:
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
ARM GAS  /tmp/cckWcrpf.s 			page 138


 4269              		.loc 1 2253 26 view .LVU1186
 4270 05e6 FAE7     		b	.L320
 4271              	.LVL298:
 4272              	.L351:
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
 4273              		.loc 1 2258 78 discriminator 1 view .LVU1187
 4274 05e8 094D     		ldr	r5, .L358
 4275 05ea AA42     		cmp	r2, r5
 4276 05ec 80D1     		bne	.L322
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4277              		.loc 1 2261 11 is_stmt 1 view .LVU1188
 4278 05ee A268     		ldr	r2, [r4, #8]
 4279 05f0 42F08072 		orr	r2, r2, #16777216
 4280 05f4 A260     		str	r2, [r4, #8]
 4281 05f6 0BE7     		b	.L301
 4282              	.L352:
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  (hadc->Instance == ADC3))
 4283              		.loc 1 2265 76 is_stmt 0 discriminator 1 view .LVU1189
 4284 05f8 0549     		ldr	r1, .L358
 4285 05fa 8A42     		cmp	r2, r1
 4286 05fc 7FF47BAF 		bne	.L323
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4287              		.loc 1 2268 11 is_stmt 1 view .LVU1190
 4288 0600 A268     		ldr	r2, [r4, #8]
 4289 0602 42F48002 		orr	r2, r2, #4194304
 4290 0606 A260     		str	r2, [r4, #8]
 4291 0608 02E7     		b	.L301
 4292              	.LVL299:
 4293              	.L324:
 4294              	.LCFI45:
 4295              		.cfi_def_cfa_offset 0
 4296              		.cfi_restore 4
 4297              		.cfi_restore 5
 4298              		.cfi_restore 6
 4299              		.cfi_restore 7
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4300              		.loc 1 1823 3 is_stmt 0 view .LVU1191
 4301 060a 0220     		movs	r0, #2
 4302              		.loc 1 2297 1 view .LVU1192
 4303 060c 7047     		bx	lr
 4304              	.L359:
 4305 060e 00BF     		.align	2
 4306              	.L358:
 4307 0610 00600258 		.word	1476550656
 4308 0614 00210240 		.word	1073881344
 4309 0618 00200240 		.word	1073881088
 4310              		.cfi_endproc
 4311              	.LFE160:
 4313              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 4314              		.align	1
 4315              		.global	HAL_ADCEx_MultiModeConfigChannel
 4316              		.syntax unified
 4317              		.thumb
 4318              		.thumb_func
 4319              		.fpu fpv5-d16
 4321              	HAL_ADCEx_MultiModeConfigChannel:
 4322              	.LVL300:
ARM GAS  /tmp/cckWcrpf.s 			page 139


 4323              	.LFB161:
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without reseting
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         the ADCs.
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: Master ADC handle
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  multimode : Structure of ADC multimode configuration
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 4324              		.loc 1 2316 1 is_stmt 1 view -0
 4325              		.cfi_startproc
 4326              		@ args = 0, pretend = 0, frame = 104
 4327              		@ frame_needed = 0, uses_anonymous_args = 0
 4328              		@ link register save eliminated.
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef  tmp_hal_status  = HAL_OK;
 4329              		.loc 1 2317 3 view .LVU1194
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4330              		.loc 1 2318 3 view .LVU1195
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef  tmphadcSlave;
 4331              		.loc 1 2319 3 view .LVU1196
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 4332              		.loc 1 2322 3 view .LVU1197
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
 4333              		.loc 1 2323 3 view .LVU1198
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if(multimode->Mode != ADC_MODE_INDEPENDENT)
 4334              		.loc 1 2324 3 view .LVU1199
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
 4335              		.loc 1 2326 5 view .LVU1200
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
 4336              		.loc 1 2327 5 view .LVU1201
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 4337              		.loc 1 2331 3 view .LVU1202
 4338              		.loc 1 2331 3 view .LVU1203
 4339 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 4340 0004 012A     		cmp	r2, #1
 4341 0006 7CD0     		beq	.L372
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef  tmp_hal_status  = HAL_OK;
 4342              		.loc 1 2316 1 is_stmt 0 discriminator 2 view .LVU1204
 4343 0008 30B4     		push	{r4, r5}
 4344              	.LCFI46:
ARM GAS  /tmp/cckWcrpf.s 			page 140


 4345              		.cfi_def_cfa_offset 8
 4346              		.cfi_offset 4, -8
 4347              		.cfi_offset 5, -4
 4348 000a 9AB0     		sub	sp, sp, #104
 4349              	.LCFI47:
 4350              		.cfi_def_cfa_offset 112
 4351 000c 0346     		mov	r3, r0
 4352              		.loc 1 2331 3 is_stmt 1 discriminator 2 view .LVU1205
 4353 000e 0122     		movs	r2, #1
 4354 0010 80F85020 		strb	r2, [r0, #80]
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 4355              		.loc 1 2333 3 discriminator 2 view .LVU1206
 4356 0014 0268     		ldr	r2, [r0]
 4357 0016 3C48     		ldr	r0, .L387
 4358              	.LVL301:
 4359              		.loc 1 2333 3 is_stmt 0 discriminator 2 view .LVU1207
 4360 0018 8242     		cmp	r2, r0
 4361 001a 2BD0     		beq	.L381
 4362 001c 0020     		movs	r0, #0
 4363 001e 0190     		str	r0, [sp, #4]
 4364              	.L363:
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmphadcSlave.Instance == NULL)
 4365              		.loc 1 2335 3 is_stmt 1 view .LVU1208
 4366              		.loc 1 2335 19 is_stmt 0 view .LVU1209
 4367 0020 0198     		ldr	r0, [sp, #4]
 4368              		.loc 1 2335 6 view .LVU1210
 4369 0022 58B3     		cbz	r0, .L382
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process unlocked */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Multimode DATA Format configuration                                           */
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ( (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 4370              		.loc 1 2349 3 is_stmt 1 view .LVU1211
 4371              		.loc 1 2349 9 is_stmt 0 view .LVU1212
 4372 0024 9268     		ldr	r2, [r2, #8]
 4373              		.loc 1 2349 6 view .LVU1213
 4374 0026 12F0040F 		tst	r2, #4
 4375 002a 5FD1     		bne	.L365
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave) == RESET) )
 4376              		.loc 1 2350 11 view .LVU1214
 4377 002c 8268     		ldr	r2, [r0, #8]
 4378              		.loc 1 2350 7 view .LVU1215
 4379 002e 12F0040F 		tst	r2, #4
 4380 0032 5BD1     		bne	.L365
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cckWcrpf.s 			page 141


2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
 4381              		.loc 1 2354 5 is_stmt 1 view .LVU1216
 4382              	.LVL302:
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode paramaters.          */
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if(multimode->Mode != ADC_MODE_INDEPENDENT)
 4383              		.loc 1 2359 5 view .LVU1217
 4384              		.loc 1 2359 17 is_stmt 0 view .LVU1218
 4385 0034 0A68     		ldr	r2, [r1]
 4386              		.loc 1 2359 7 view .LVU1219
 4387 0036 002A     		cmp	r2, #0
 4388 0038 35D0     		beq	.L366
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 4389              		.loc 1 2361 7 is_stmt 1 view .LVU1220
 4390 003a 344C     		ldr	r4, .L387+4
 4391 003c A268     		ldr	r2, [r4, #8]
 4392 003e 22F44042 		bic	r2, r2, #49152
 4393 0042 4D68     		ldr	r5, [r1, #4]
 4394 0044 2A43     		orrs	r2, r2, r5
 4395 0046 A260     		str	r2, [r4, #8]
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                   */
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 9 clock cycles for 16 bits                              */
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 9 clock cycles for 14 bits,                             */
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 12 bits                              */
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay  */
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    range                                                               */
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                             &&
 4396              		.loc 1 2373 7 view .LVU1221
 4397              		.loc 1 2373 12 is_stmt 0 view .LVU1222
 4398 0048 1C68     		ldr	r4, [r3]
 4399 004a A268     		ldr	r2, [r4, #8]
 4400 004c 02F00302 		and	r2, r2, #3
 4401 0050 012A     		cmp	r2, #1
 4402 0052 1CD0     		beq	.L383
 4403              	.L367:
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSlave) == RESET)  )
 4404              		.loc 1 2374 12 view .LVU1223
 4405 0054 8268     		ldr	r2, [r0, #8]
 4406 0056 02F00302 		and	r2, r2, #3
 4407 005a 012A     		cmp	r2, #1
 4408 005c 1DD0     		beq	.L384
 4409              	.L369:
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY,
 4410              		.loc 1 2376 9 is_stmt 1 view .LVU1224
 4411 005e 2B4C     		ldr	r4, .L387+4
 4412 0060 A068     		ldr	r0, [r4, #8]
 4413 0062 2B4A     		ldr	r2, .L387+8
ARM GAS  /tmp/cckWcrpf.s 			page 142


 4414 0064 0240     		ands	r2, r2, r0
 4415 0066 0868     		ldr	r0, [r1]
 4416 0068 8968     		ldr	r1, [r1, #8]
 4417              	.LVL303:
 4418              		.loc 1 2376 9 is_stmt 0 view .LVU1225
 4419 006a 0843     		orrs	r0, r0, r1
 4420 006c 0243     		orrs	r2, r2, r0
 4421 006e A260     		str	r2, [r4, #8]
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4422              		.loc 1 2317 22 view .LVU1226
 4423 0070 0020     		movs	r0, #0
 4424 0072 40E0     		b	.L368
 4425              	.LVL304:
 4426              	.L381:
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4427              		.loc 1 2333 3 discriminator 1 view .LVU1227
 4428 0074 00F58070 		add	r0, r0, #256
 4429 0078 0190     		str	r0, [sp, #4]
 4430 007a D1E7     		b	.L363
 4431              	.L382:
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4432              		.loc 1 2338 5 is_stmt 1 view .LVU1228
 4433 007c 5A6D     		ldr	r2, [r3, #84]
 4434 007e 42F02002 		orr	r2, r2, #32
 4435 0082 5A65     		str	r2, [r3, #84]
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4436              		.loc 1 2341 5 view .LVU1229
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4437              		.loc 1 2341 5 view .LVU1230
 4438 0084 0022     		movs	r2, #0
 4439 0086 83F85020 		strb	r2, [r3, #80]
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 4440              		.loc 1 2343 5 view .LVU1231
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 4441              		.loc 1 2343 12 is_stmt 0 view .LVU1232
 4442 008a 0120     		movs	r0, #1
 4443 008c 36E0     		b	.L361
 4444              	.LVL305:
 4445              	.L383:
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSlave) == RESET)  )
 4446              		.loc 1 2373 12 discriminator 1 view .LVU1233
 4447 008e 2268     		ldr	r2, [r4]
 4448 0090 12F0010F 		tst	r2, #1
 4449 0094 DED0     		beq	.L367
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4450              		.loc 1 2317 22 view .LVU1234
 4451 0096 0020     		movs	r0, #0
 4452 0098 2DE0     		b	.L368
 4453              	.L384:
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4454              		.loc 1 2374 12 discriminator 1 view .LVU1235
 4455 009a 0268     		ldr	r2, [r0]
 4456 009c 12F0010F 		tst	r2, #1
 4457 00a0 DDD0     		beq	.L369
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4458              		.loc 1 2317 22 view .LVU1236
 4459 00a2 0020     		movs	r0, #0
ARM GAS  /tmp/cckWcrpf.s 			page 143


 4460 00a4 27E0     		b	.L368
 4461              	.L366:
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                multimode->Mode | multimode->TwoSamplingDelay );
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 4462              		.loc 1 2382 7 is_stmt 1 view .LVU1237
 4463 00a6 1949     		ldr	r1, .L387+4
 4464              	.LVL306:
 4465              		.loc 1 2382 7 is_stmt 0 view .LVU1238
 4466 00a8 8A68     		ldr	r2, [r1, #8]
 4467 00aa 22F44042 		bic	r2, r2, #49152
 4468 00ae 8A60     		str	r2, [r1, #8]
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                             &&
 4469              		.loc 1 2387 7 is_stmt 1 view .LVU1239
 4470              		.loc 1 2387 12 is_stmt 0 view .LVU1240
 4471 00b0 1968     		ldr	r1, [r3]
 4472 00b2 8A68     		ldr	r2, [r1, #8]
 4473 00b4 02F00302 		and	r2, r2, #3
 4474 00b8 012A     		cmp	r2, #1
 4475 00ba 0BD0     		beq	.L385
 4476              	.L370:
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSlave) == RESET)  )
 4477              		.loc 1 2388 12 view .LVU1241
 4478 00bc 8268     		ldr	r2, [r0, #8]
 4479 00be 02F00302 		and	r2, r2, #3
 4480 00c2 012A     		cmp	r2, #1
 4481 00c4 0CD0     		beq	.L386
 4482              	.L371:
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 4483              		.loc 1 2390 9 is_stmt 1 view .LVU1242
 4484 00c6 1149     		ldr	r1, .L387+4
 4485 00c8 8868     		ldr	r0, [r1, #8]
 4486 00ca 114A     		ldr	r2, .L387+8
 4487 00cc 0240     		ands	r2, r2, r0
 4488 00ce 8A60     		str	r2, [r1, #8]
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4489              		.loc 1 2317 22 is_stmt 0 view .LVU1243
 4490 00d0 0020     		movs	r0, #0
 4491 00d2 10E0     		b	.L368
 4492              	.L385:
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSlave) == RESET)  )
 4493              		.loc 1 2387 12 discriminator 1 view .LVU1244
 4494 00d4 0A68     		ldr	r2, [r1]
 4495 00d6 12F0010F 		tst	r2, #1
 4496 00da EFD0     		beq	.L370
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4497              		.loc 1 2317 22 view .LVU1245
 4498 00dc 0020     		movs	r0, #0
 4499 00de 0AE0     		b	.L368
ARM GAS  /tmp/cckWcrpf.s 			page 144


 4500              	.L386:
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4501              		.loc 1 2388 12 discriminator 1 view .LVU1246
 4502 00e0 0268     		ldr	r2, [r0]
 4503 00e2 12F0010F 		tst	r2, #1
 4504 00e6 EED0     		beq	.L371
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4505              		.loc 1 2317 22 view .LVU1247
 4506 00e8 0020     		movs	r0, #0
 4507 00ea 04E0     		b	.L368
 4508              	.LVL307:
 4509              	.L365:
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 4510              		.loc 1 2399 5 is_stmt 1 view .LVU1248
 4511 00ec 5A6D     		ldr	r2, [r3, #84]
 4512 00ee 42F02002 		orr	r2, r2, #32
 4513 00f2 5A65     		str	r2, [r3, #84]
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status  = HAL_ERROR;
 4514              		.loc 1 2401 5 view .LVU1249
 4515              	.LVL308:
 4516              		.loc 1 2401 21 is_stmt 0 view .LVU1250
 4517 00f4 0120     		movs	r0, #1
 4518              	.LVL309:
 4519              	.L368:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4520              		.loc 1 2406 3 is_stmt 1 view .LVU1251
 4521              		.loc 1 2406 3 view .LVU1252
 4522 00f6 0022     		movs	r2, #0
 4523 00f8 83F85020 		strb	r2, [r3, #80]
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status ;
 4524              		.loc 1 2409 3 view .LVU1253
 4525              	.LVL310:
 4526              	.L361:
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 4527              		.loc 1 2410 1 is_stmt 0 view .LVU1254
 4528 00fc 1AB0     		add	sp, sp, #104
 4529              	.LCFI48:
 4530              		.cfi_def_cfa_offset 8
 4531              		@ sp needed
 4532 00fe 30BC     		pop	{r4, r5}
 4533              	.LCFI49:
 4534              		.cfi_restore 5
ARM GAS  /tmp/cckWcrpf.s 			page 145


 4535              		.cfi_restore 4
 4536              		.cfi_def_cfa_offset 0
 4537 0100 7047     		bx	lr
 4538              	.LVL311:
 4539              	.L372:
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4540              		.loc 1 2331 3 view .LVU1255
 4541 0102 0220     		movs	r0, #2
 4542              	.LVL312:
 4543              		.loc 1 2410 1 view .LVU1256
 4544 0104 7047     		bx	lr
 4545              	.L388:
 4546 0106 00BF     		.align	2
 4547              	.L387:
 4548 0108 00200240 		.word	1073881088
 4549 010c 00230240 		.word	1073881856
 4550 0110 E0F0FFFF 		.word	-3872
 4551              		.cfi_endproc
 4552              	.LFE161:
 4554              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 4555              		.align	1
 4556              		.global	HAL_ADCEx_EnableInjectedQueue
 4557              		.syntax unified
 4558              		.thumb
 4559              		.thumb_func
 4560              		.fpu fpv5-d16
 4562              	HAL_ADCEx_EnableInjectedQueue:
 4563              	.LVL313:
 4564              	.LFB162:
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regulart nor injected
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is ongoing.
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef* hadc)
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 4565              		.loc 1 2424 1 is_stmt 1 view -0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 0
 4568              		@ frame_needed = 0, uses_anonymous_args = 0
 4569              		@ link register save eliminated.
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going                   */
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 4570              		.loc 1 2426 3 view .LVU1258
 4571              		.loc 1 2426 7 is_stmt 0 view .LVU1259
 4572 0000 0368     		ldr	r3, [r0]
 4573 0002 9A68     		ldr	r2, [r3, #8]
 4574              		.loc 1 2426 6 view .LVU1260
 4575 0004 12F00C0F 		tst	r2, #12
 4576 0008 09D1     		bne	.L391
ARM GAS  /tmp/cckWcrpf.s 			page 146


2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 4577              		.loc 1 2428 5 is_stmt 1 view .LVU1261
 4578 000a DA68     		ldr	r2, [r3, #12]
 4579 000c 22F00042 		bic	r2, r2, #-2147483648
 4580 0010 DA60     		str	r2, [r3, #12]
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 4581              		.loc 1 2431 5 view .LVU1262
 4582 0012 436D     		ldr	r3, [r0, #84]
 4583 0014 23F48043 		bic	r3, r3, #16384
 4584 0018 4365     		str	r3, [r0, #84]
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_OK;
 4585              		.loc 1 2433 5 view .LVU1263
 4586              		.loc 1 2433 12 is_stmt 0 view .LVU1264
 4587 001a 0020     		movs	r0, #0
 4588              	.LVL314:
 4589              		.loc 1 2433 12 view .LVU1265
 4590 001c 7047     		bx	lr
 4591              	.LVL315:
 4592              	.L391:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
 4593              		.loc 1 2437 12 view .LVU1266
 4594 001e 0120     		movs	r0, #1
 4595              	.LVL316:
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 4596              		.loc 1 2439 1 view .LVU1267
 4597 0020 7047     		bx	lr
 4598              		.cfi_endproc
 4599              	.LFE162:
 4601              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 4602              		.align	1
 4603              		.global	HAL_ADCEx_DisableInjectedQueue
 4604              		.syntax unified
 4605              		.thumb
 4606              		.thumb_func
 4607              		.fpu fpv5-d16
 4609              	HAL_ADCEx_DisableInjectedQueue:
 4610              	.LVL317:
 4611              	.LFB163:
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regulart nor injected
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is ongoing.
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef* hadc)
ARM GAS  /tmp/cckWcrpf.s 			page 147


2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 4612              		.loc 1 2451 1 is_stmt 1 view -0
 4613              		.cfi_startproc
 4614              		@ args = 0, pretend = 0, frame = 0
 4615              		@ frame_needed = 0, uses_anonymous_args = 0
 4616              		@ link register save eliminated.
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going                   */
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 4617              		.loc 1 2453 3 view .LVU1269
 4618              		.loc 1 2453 7 is_stmt 0 view .LVU1270
 4619 0000 0368     		ldr	r3, [r0]
 4620 0002 9A68     		ldr	r2, [r3, #8]
 4621              		.loc 1 2453 6 view .LVU1271
 4622 0004 12F00C0F 		tst	r2, #12
 4623 0008 05D1     		bne	.L394
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 4624              		.loc 1 2455 5 is_stmt 1 view .LVU1272
 4625 000a DA68     		ldr	r2, [r3, #12]
 4626 000c 42F00042 		orr	r2, r2, #-2147483648
 4627 0010 DA60     		str	r2, [r3, #12]
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_OK;
 4628              		.loc 1 2456 5 view .LVU1273
 4629              		.loc 1 2456 12 is_stmt 0 view .LVU1274
 4630 0012 0020     		movs	r0, #0
 4631              	.LVL318:
 4632              		.loc 1 2456 12 view .LVU1275
 4633 0014 7047     		bx	lr
 4634              	.LVL319:
 4635              	.L394:
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
 4636              		.loc 1 2460 12 view .LVU1276
 4637 0016 0120     		movs	r0, #1
 4638              	.LVL320:
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 4639              		.loc 1 2462 1 view .LVU1277
 4640 0018 7047     		bx	lr
 4641              		.cfi_endproc
 4642              	.LFE163:
 4644              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 4645              		.align	1
 4646              		.global	HAL_ADCEx_DisableVoltageRegulator
 4647              		.syntax unified
 4648              		.thumb
 4649              		.thumb_func
 4650              		.fpu fpv5-d16
 4652              	HAL_ADCEx_DisableVoltageRegulator:
 4653              	.LVL321:
 4654              	.LFB164:
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
ARM GAS  /tmp/cckWcrpf.s 			page 148


2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef* hadc)
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 4655              		.loc 1 2475 1 is_stmt 1 view -0
 4656              		.cfi_startproc
 4657              		@ args = 0, pretend = 0, frame = 0
 4658              		@ frame_needed = 0, uses_anonymous_args = 0
 4659              		@ link register save eliminated.
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* ADVREGEN can be written only when the ADC is disabled  */
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 4660              		.loc 1 2477 3 view .LVU1279
 4661              		.loc 1 2477 7 is_stmt 0 view .LVU1280
 4662 0000 0368     		ldr	r3, [r0]
 4663 0002 9A68     		ldr	r2, [r3, #8]
 4664 0004 02F00302 		and	r2, r2, #3
 4665 0008 012A     		cmp	r2, #1
 4666 000a 03D1     		bne	.L396
 4667              		.loc 1 2477 7 discriminator 1 view .LVU1281
 4668 000c 1A68     		ldr	r2, [r3]
 4669 000e 12F0010F 		tst	r2, #1
 4670 0012 05D1     		bne	.L398
 4671              	.L396:
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN);
 4672              		.loc 1 2479 5 is_stmt 1 view .LVU1282
 4673 0014 9A68     		ldr	r2, [r3, #8]
 4674 0016 22F08052 		bic	r2, r2, #268435456
 4675 001a 9A60     		str	r2, [r3, #8]
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_OK;
 4676              		.loc 1 2480 5 view .LVU1283
 4677              		.loc 1 2480 12 is_stmt 0 view .LVU1284
 4678 001c 0020     		movs	r0, #0
 4679              	.LVL322:
 4680              		.loc 1 2480 12 view .LVU1285
 4681 001e 7047     		bx	lr
 4682              	.LVL323:
 4683              	.L398:
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
 4684              		.loc 1 2484 12 view .LVU1286
 4685 0020 0120     		movs	r0, #1
 4686              	.LVL324:
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 4687              		.loc 1 2486 1 view .LVU1287
 4688 0022 7047     		bx	lr
 4689              		.cfi_endproc
 4690              	.LFE164:
 4692              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
ARM GAS  /tmp/cckWcrpf.s 			page 149


 4693              		.align	1
 4694              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 4695              		.syntax unified
 4696              		.thumb
 4697              		.thumb_func
 4698              		.fpu fpv5-d16
 4700              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 4701              	.LVL325:
 4702              	.LFB165:
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         entering STOP1 or STOP2 modes.
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         calibration is lost.
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         saved calibration factor.
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef* hadc)
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 4703              		.loc 1 2505 1 is_stmt 1 view -0
 4704              		.cfi_startproc
 4705              		@ args = 0, pretend = 0, frame = 0
 4706              		@ frame_needed = 0, uses_anonymous_args = 0
 4707              		@ link register save eliminated.
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* DEEPPWD can be written only when the ADC is disabled  */
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 4708              		.loc 1 2507 3 view .LVU1289
 4709              		.loc 1 2507 7 is_stmt 0 view .LVU1290
 4710 0000 0368     		ldr	r3, [r0]
 4711 0002 9A68     		ldr	r2, [r3, #8]
 4712 0004 02F00302 		and	r2, r2, #3
 4713 0008 012A     		cmp	r2, #1
 4714 000a 03D1     		bne	.L400
 4715              		.loc 1 2507 7 discriminator 1 view .LVU1291
 4716 000c 1A68     		ldr	r2, [r3]
 4717 000e 12F0010F 		tst	r2, #1
 4718 0012 05D1     		bne	.L402
 4719              	.L400:
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 4720              		.loc 1 2509 5 is_stmt 1 view .LVU1292
 4721 0014 9A68     		ldr	r2, [r3, #8]
 4722 0016 42F00052 		orr	r2, r2, #536870912
 4723 001a 9A60     		str	r2, [r3, #8]
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_OK;
 4724              		.loc 1 2510 5 view .LVU1293
 4725              		.loc 1 2510 12 is_stmt 0 view .LVU1294
 4726 001c 0020     		movs	r0, #0
ARM GAS  /tmp/cckWcrpf.s 			page 150


 4727              	.LVL326:
 4728              		.loc 1 2510 12 view .LVU1295
 4729 001e 7047     		bx	lr
 4730              	.LVL327:
 4731              	.L402:
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
 4732              		.loc 1 2514 12 view .LVU1296
 4733 0020 0120     		movs	r0, #1
 4734              	.LVL328:
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 4735              		.loc 1 2516 1 view .LVU1297
 4736 0022 7047     		bx	lr
 4737              		.cfi_endproc
 4738              	.LFE165:
 4740              		.text
 4741              	.Letext0:
 4742              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4743              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4744              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 4745              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 4746              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 4747              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 4748              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 4749              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
 4750              		.file 11 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 4751              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 4752              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 4753              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 4754              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 4755              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 4756              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cckWcrpf.s 			page 151


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_adc_ex.c
     /tmp/cckWcrpf.s:17     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/cckWcrpf.s:25     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/cckWcrpf.s:165    .text.HAL_ADCEx_Calibration_Start:000000000000009c $d
     /tmp/cckWcrpf.s:170    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
     /tmp/cckWcrpf.s:177    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
     /tmp/cckWcrpf.s:234    .text.HAL_ADCEx_Calibration_GetValue:0000000000000028 $d
     /tmp/cckWcrpf.s:239    .text.HAL_ADCEx_LinearCalibration_GetValue:0000000000000000 $t
     /tmp/cckWcrpf.s:246    .text.HAL_ADCEx_LinearCalibration_GetValue:0000000000000000 HAL_ADCEx_LinearCalibration_GetValue
     /tmp/cckWcrpf.s:328    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
     /tmp/cckWcrpf.s:335    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
     /tmp/cckWcrpf.s:499    .text.HAL_ADCEx_Calibration_SetValue:000000000000008c $d
     /tmp/cckWcrpf.s:506    .text.HAL_ADCEx_LinearCalibration_SetValue:0000000000000000 $t
     /tmp/cckWcrpf.s:513    .text.HAL_ADCEx_LinearCalibration_SetValue:0000000000000000 HAL_ADCEx_LinearCalibration_SetValue
     /tmp/cckWcrpf.s:685    .text.HAL_ADCEx_LinearCalibration_SetValue:00000000000000b0 $d
     /tmp/cckWcrpf.s:691    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/cckWcrpf.s:698    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/cckWcrpf.s:904    .text.HAL_ADCEx_InjectedStart:00000000000000fc $d
     /tmp/cckWcrpf.s:913    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/cckWcrpf.s:920    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/cckWcrpf.s:1011   .text.HAL_ADCEx_InjectedStop:0000000000000058 $d
     /tmp/cckWcrpf.s:1016   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/cckWcrpf.s:1023   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/cckWcrpf.s:1315   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000130 $d
     /tmp/cckWcrpf.s:1323   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/cckWcrpf.s:1330   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cckWcrpf.s:1580   .text.HAL_ADCEx_InjectedStart_IT:0000000000000140 $d
     /tmp/cckWcrpf.s:1589   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/cckWcrpf.s:1596   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cckWcrpf.s:1692   .text.HAL_ADCEx_InjectedStop_IT:0000000000000064 $d
     /tmp/cckWcrpf.s:1697   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/cckWcrpf.s:1704   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cckWcrpf.s:1891   .text.HAL_ADCEx_MultiModeStart_DMA:00000000000000c8 $d
     /tmp/cckWcrpf.s:1902   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/cckWcrpf.s:1909   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cckWcrpf.s:2123   .text.HAL_ADCEx_MultiModeStop_DMA:00000000000000e0 $d
     /tmp/cckWcrpf.s:2129   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/cckWcrpf.s:2136   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cckWcrpf.s:2157   .text.HAL_ADCEx_MultiModeGetValue:0000000000000008 $d
     /tmp/cckWcrpf.s:2162   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/cckWcrpf.s:2169   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/cckWcrpf.s:2231   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/cckWcrpf.s:2238   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cckWcrpf.s:2253   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
     /tmp/cckWcrpf.s:2260   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/cckWcrpf.s:2275   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
     /tmp/cckWcrpf.s:2282   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/cckWcrpf.s:2297   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
     /tmp/cckWcrpf.s:2304   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/cckWcrpf.s:2319   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 $t
     /tmp/cckWcrpf.s:2326   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/cckWcrpf.s:2341   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
     /tmp/cckWcrpf.s:2348   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
     /tmp/cckWcrpf.s:2443   .text.HAL_ADCEx_RegularStop:0000000000000060 $d
     /tmp/cckWcrpf.s:2448   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
     /tmp/cckWcrpf.s:2455   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
ARM GAS  /tmp/cckWcrpf.s 			page 152


     /tmp/cckWcrpf.s:2555   .text.HAL_ADCEx_RegularStop_IT:000000000000006c $d
     /tmp/cckWcrpf.s:2560   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
     /tmp/cckWcrpf.s:2567   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
     /tmp/cckWcrpf.s:2702   .text.HAL_ADCEx_RegularStop_DMA:0000000000000090 $d
     /tmp/cckWcrpf.s:2707   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 $t
     /tmp/cckWcrpf.s:2714   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 HAL_ADCEx_RegularMultiModeStop_DMA
     /tmp/cckWcrpf.s:2948   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000000000000f4 $d
     /tmp/cckWcrpf.s:2954   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/cckWcrpf.s:2961   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cckWcrpf.s:3283   .text.HAL_ADCEx_InjectedConfigChannel:000000000000014e $d
     /tmp/cckWcrpf.s:3288   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000156 $t
     /tmp/cckWcrpf.s:4140   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000518 $d
     /tmp/cckWcrpf.s:4146   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000528 $t
     /tmp/cckWcrpf.s:4307   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000610 $d
     /tmp/cckWcrpf.s:4314   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/cckWcrpf.s:4321   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cckWcrpf.s:4548   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000108 $d
     /tmp/cckWcrpf.s:4555   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 $t
     /tmp/cckWcrpf.s:4562   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/cckWcrpf.s:4602   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 $t
     /tmp/cckWcrpf.s:4609   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/cckWcrpf.s:4645   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 $t
     /tmp/cckWcrpf.s:4652   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/cckWcrpf.s:4693   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 $t
     /tmp/cckWcrpf.s:4700   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 HAL_ADCEx_EnterADCDeepPowerDownMode

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
SystemCoreClock
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
