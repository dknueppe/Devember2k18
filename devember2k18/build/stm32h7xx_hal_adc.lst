ARM GAS  /tmp/ccodtIyF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_adc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_ADC_MspInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_ADC_MspInit:
  26              	.LVL0:
  27              	.LFB139:
  28              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @file    stm32h7xx_hal_adc.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @author  MCD Application conversion
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Initialization and deinitialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Start, stop, get result of regular conversions of regular
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          "stm32h7xx_hal_adc_ex.c".
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    @verbatim
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ##### ADC specific features #####
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   [..]
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) 16-bit, 14-bit, 12-bit, 10-bit or 8-bit configurable resolution.
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       analog watchdog or overrun events.
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC offset on regular groups.
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC calibration
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC conversion of regular group.
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       Vdda or to an external voltage reference).
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ##### How to use this driver #####
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ============================================================
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Enable the ADC interface
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    or asynchronous clock derived from system clock, the PLL2 or the PLL3 running up
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) Example:
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    other device clock parameters configuration:
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL2 enable:                   (optional: if asynchronous clock sel
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL2;
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
ARM GAS  /tmp/ccodtIyF.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC pins configuration
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_GPIO_Init()
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the NVIC for ADC
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADCx_IRQHandler().
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_DMA_Init().
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     *** Configuration of ADC, group regular, channels parameters ***
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ================================================================
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_Init().
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         monitored, thresholds, ...)
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Execution of ADC conversions ***
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ====================================
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         conversion accuracy
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         transfer by DMA.
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion by polling:
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start()
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
ARM GAS  /tmp/ccodtIyF.s 			page 4


 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Retrieve conversion results
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion by interruption:
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 (this function must be implemented in user program)
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Retrieve conversion results
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 (these functions must be implemented in user program)
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 destination variable address.
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Deinitialization of ADC ***
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ============================================================
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Disable the ADC interface
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              using macro __HAL_RCC_ADCx_FORCE_RESET(), __HAL_RCC_ADCx_RELEASE_RESET().
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC clock disable
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) Example:
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    other device clock parameters configuration:
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_DISABLE();                  (if not used anymore)
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                RCC_ADCCLKSOURCE_CLKP restore:                      (optional)
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_CLKP;
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
ARM GAS  /tmp/ccodtIyF.s 			page 5


 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC pins configuration
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Deinitialize the DMA
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_DMA_Init().
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     @endverbatim
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @attention
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *      without specific prior written permission.
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #include "stm32h7xx_hal.h"
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @addtogroup STM32H7xx_HAL_Driver
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC ADC
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief ADC HAL module driver
ARM GAS  /tmp/ccodtIyF.s 			page 6


 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((uint32_t)(ADC_CFGR_RES    |\
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL)) /*!< ADC_CFGR fields of 
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                   when no regular c
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR_FIELDS_2  ((uint32_t)(ADC_CFGR_DMNGT | ADC_CFGR_AUTDLY)) /*!< ADC_CFGR2 fields of 
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                  (neither regular n
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR2_FIELDS  ((uint32_t)(ADC_CFGR2_ROVSE | ADC_CFGR2_OSR   |\
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR2_OVSS | ADC_CFGR2_TROVS |\
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR2_ROVSM))
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR_WD_FIELDS  ((uint32_t)(ADC_CFGR_AWD1SGL | ADC_CFGR_JAWD1EN | \
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                         ADC_CFGR_AWD1EN | ADC_CFGR_AWD1CH)) /*!< ADC_CFGR fields of
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                   conversion (neith
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_OFR_FIELDS  ((uint32_t)(ADC_OFR1_OFFSET1 | ADC_OFR1_OFFSET1_CH)) /*!< ADC_OFR fields of
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                                    
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Delay to wait before setting ADEN once ADCAL has been reset
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    must be at least 4 ADC clock cycles.
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    Assuming lowest ADC clock (350 KHz according to DS), this
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    4 ADC clock cycles duration is equal to
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    4 / 350,000 = 0.011 ms.
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    ADC_ENABLE_TIMEOUT set to 2 is a margin large enough to ensure
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    the 4 ADC clock cycles have elapsed while waiting for ADRDY
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    to become 1 */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              ((uint32_t)  2)    /*!< ADC enable time-out value  */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             ((uint32_t)  2)    /*!< ADC disable time-out value */
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout fixed to worst case, for 1 channel.                                */
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - maximum sampling time (830.5 adc_clk)                                  */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - ADC resolution (Tsar 16 bits= 16.5 adc_clk)                            */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - ADC clock with prescaler 256                                           */
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*     823 * 256 = 210688 clock cycles max                                    */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES ((uint32_t) 210688)  /*!< ADC conversion completion time
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
ARM GAS  /tmp/ccodtIyF.s 			page 7


 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and deinitialization functions
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ##### Initialization and deinitialization functions #####
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..] This section provides functions allowing to:
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Deinitialize the ADC.
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         depending on possible clock sources: PLL2/PLL3 clocks or AHB clock.
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         this function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         before HAL_ADC_Init().
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned by ADC state.
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         only if all ADCs are disabled.
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         without  disabling the other ADCs.
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
ARM GAS  /tmp/ccodtIyF.s 			page 8


 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR = 0;
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check ADC handle */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if(hadc == NULL)
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSIONDATAMGT(hadc->Init.ConversionDataManagement));
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.BoostMode));
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* DISCEN and CONT bits can not be set at the same time */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the low level hardware */
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to none */
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize Lock */
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  Exit deep power down mode if still in that state                        */
ARM GAS  /tmp/ccodtIyF.s 			page 9


 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_DEEPPWD))
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Exit deep power down mode */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        be relaunched or a previously saved calibration factor
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        re-applied once the ADC voltage regulator is enabled   */
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if  (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN);
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Delay for ADC stabilization time                                       */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait loop initialization and execution                                 */
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially                    */
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       CPU processing cycles.                                           */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / (1000000 * 2)));
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(wait_loop_index != 0)
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       wait_loop_index--;
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)  )
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize the ADC state */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if((hadc->Instance == ADC1) || (hadc->Instance == ADC2))
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  /tmp/ccodtIyF.s 			page 10


 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Pointer to the common control register                               */
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Pointer to the common control register                               */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Common = ADC3_COMMON_REGISTER(hadc);
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Multimode clock configuration                                       */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)   &&
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset configuration of ADC common register CCR:                      */
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*                                                                      */
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    source and sets the clock division factor.                        */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*                                                                      */
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* parameters):                                                         */
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*   - when multimode feature is available, multimode-related           */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*     parameters:DELAY,DUAL(set by API                                 */
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*     HAL_ADCEx_MultiModeConfigChannel())                              */
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() or                             */
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_PRESC|ADC_CCR_CKMODE, hadc->Init.ClockPrescaler);
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmpCFGR  = ( ADC_CFGR_CONTINUOUS(hadc->Init.ContinuousConvMode)          |
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Overrun                                          |
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Resolution                                       |
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS(hadc->Init.DiscontinuousConvMode)  );
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* start.                                                                 */
ARM GAS  /tmp/ccodtIyF.s 			page 11


 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note:  parameter ExternalTrigConvEdge set to "trigger edge none" is    */
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*        equivalent to software start.                                   */
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ExternalTrigConvEdge != ADC_EXTERNALTRIGCONVEDGE_NONE))
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR |= ( hadc->Init.ExternalTrigConv |  hadc->Init.ExternalTrigConvEdge);
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Conversion data management      Init.ConversionDataManagement       */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Boost Mode                      BoostMode                           */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR = ( ADC_CFGR_AUTOWAIT(hadc->Init.LowPowerAutoWait)       |
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.ConversionDataManagement) );
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Multi trigger is not applicable to software-triggered conversions */
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER))
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        /* Configuration of Oversampler:                                       */
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        /*  - Oversampling Ratio                                               */
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        /*  - Right bit shift                                                  */
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        /*  - Leftt bit shift                                                  */
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        /*  - Triggered mode                                                   */
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        /*  - Oversampling mode (continued/resumed)                            */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          ADC_CFGR2_ROVSE                       |
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          (hadc->Init.Oversampling.Ratio << 16) |
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          hadc->Init.Oversampling.RightBitShift |
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          hadc->Init.Oversampling.TriggeredMode |
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          hadc->Init.Oversampling.OversamplingStopReset);
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
ARM GAS  /tmp/ccodtIyF.s 			page 12


 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Disable Regular OverSampling */
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT( hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set the LeftShift parameter: it is applied to the final result with or without oversamplin
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure the BOOST Mode */
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if(hadc->Init.BoostMode == ENABLE)
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_BOOST);
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CR, ADC_CR_BOOST);
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }   /*  if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET) */
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize the ADC state */
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }  /*  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL)  && (ADC_IS_CONVERSION_ONGOI
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 13


 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Keep in mind that all ADCs use the same clock: disabling
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the clock will reset all ADCs.
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() sets DEEPPWD: this saves more power by
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         reducing the leakage currents and is particularly interesting before
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         entering STOP 1 or STOP 2 modes.
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check ADC handle */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if(hadc == NULL)
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      return HAL_ERROR;
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* No check on ADC_ConversionStop() return status, if the conversion
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     stop failed, it is up to HAL_ADC_MspDeInit() to reset the ADC IP */
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* injected sequence.                                                       */
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable the ADC peripheral                                               */
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* No check on ADC_Disable() return status, if the ADC disabling process
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      failed, it is up to HAL_ADC_MspDeInit() to reset the ADC IP              */
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Disable(hadc);
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register IER */
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY                 ) );
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 14


 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register ISR */
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY                   ) );
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CR */
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     no direct reset applicable.
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     Update CR register to reset value where doable by software */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CFGR */
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AWD1CH  | ADC_CFGR_JAUTO   | ADC_CFGR_JAWD1EN |
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CFGR_JDISCEN | ADC_CFGR_DISCNUM | ADC_CFGR_DISCEN  |
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CFGR_AUTDLY  | ADC_CFGR_CONT    | ADC_CFGR_OVRMOD  |
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CFGR_EXTEN   | ADC_CFGR_EXTSEL  |
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CFGR_RES     | ADC_CFGR_DMNGT);
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CFGR2 */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM | ADC_CFGR2_TROVS | ADC_CFGR2_OVSS |
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_CFGR2_OSR   | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE );
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SMPR1 */
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_SMP9 | ADC_SMPR1_SMP8 | ADC_SMPR1_SMP7 |
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 |
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR1_SMP3 | ADC_SMPR1_SMP2 | ADC_SMPR1_SMP1 |
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR1_SMP0 );
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SMPR2 */
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10 );
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR1 and HTR1 */
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR1, ADC_LTR1_LT1);
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR1, ADC_HTR1_HT1);
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR2 and HTR2*/
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR2, ADC_LTR2_LT2);
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2, ADC_HTR2_HT2);
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR3 and HTR3 */
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR3, ADC_LTR3_LT3);
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR3, ADC_HTR3_HT3);
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR1 */
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_SQR1_SQ1 | ADC_SQR1_L);
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR2 */
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
ARM GAS  /tmp/ccodtIyF.s 			page 15


 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR3 */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR4 */
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DR */
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR1 */
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR3 */
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR4 */
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register AWD2CR */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register AWD3CR */
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DIFSEL */
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CALFACT */
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ADCs are disabled.   */
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((ADC_IS_ENABLE(hadc) == RESET)   &&
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - multimode related parameters(when this feature is available): DELAY, DUAL
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (set into  HAL_ADCEx_MultiModeConfigChannel() )
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     */
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if((hadc->Instance == ADC1)||(hadc->Instance == ADC2))
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
ARM GAS  /tmp/ccodtIyF.s 			page 16


 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Common = ADC3_COMMON_REGISTER(hadc);
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_CKMODE |
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_PRESC  |
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_VBATEN |
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_TSEN   |
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_VREFEN |
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_DAMDF  |
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_DELAY  |
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_DUAL  );
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* DeInit the low level hardware.
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      For example:
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     the clock will reset all ADCs.
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC error code to none */
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
  29              		.loc 1 882 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccodtIyF.s 			page 17


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
  34              		.loc 1 884 3 view .LVU1
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
  35              		.loc 1 888 1 is_stmt 0 view .LVU2
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE139:
  40              		.section	.text.HAL_ADC_Init,"ax",%progbits
  41              		.align	1
  42              		.global	HAL_ADC_Init
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv5-d16
  48              	HAL_ADC_Init:
  49              	.LVL1:
  50              	.LFB137:
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  51              		.loc 1 369 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 8
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  55              		.loc 1 369 1 is_stmt 0 view .LVU4
  56 0000 30B5     		push	{r4, r5, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 12
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 5, -8
  61              		.cfi_offset 14, -4
  62 0002 83B0     		sub	sp, sp, #12
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 24
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  65              		.loc 1 370 3 is_stmt 1 view .LVU5
  66              	.LVL2:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR = 0;
  67              		.loc 1 372 3 view .LVU6
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
  68              		.loc 1 373 3 view .LVU7
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  69              		.loc 1 374 3 view .LVU8
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  70              		.loc 1 374 17 is_stmt 0 view .LVU9
  71 0004 0023     		movs	r3, #0
  72 0006 0193     		str	r3, [sp, #4]
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
  73              		.loc 1 377 3 is_stmt 1 view .LVU10
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
  74              		.loc 1 377 5 is_stmt 0 view .LVU11
  75 0008 0028     		cmp	r0, #0
ARM GAS  /tmp/ccodtIyF.s 			page 18


  76 000a 00F06581 		beq	.L32
  77 000e 0446     		mov	r4, r0
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  78              		.loc 1 383 3 is_stmt 1 view .LVU12
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  79              		.loc 1 384 3 view .LVU13
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  80              		.loc 1 385 3 view .LVU14
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  81              		.loc 1 386 3 view .LVU15
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  82              		.loc 1 387 3 view .LVU16
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
  83              		.loc 1 388 3 view .LVU17
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSIONDATAMGT(hadc->Init.ConversionDataManagement));
  84              		.loc 1 389 3 view .LVU18
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  85              		.loc 1 390 3 view .LVU19
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  86              		.loc 1 391 3 view .LVU20
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  87              		.loc 1 392 3 view .LVU21
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
  88              		.loc 1 393 3 view .LVU22
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.BoostMode));
  89              		.loc 1 394 3 view .LVU23
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  90              		.loc 1 395 3 view .LVU24
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
  91              		.loc 1 397 3 view .LVU25
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
  92              		.loc 1 404 7 view .LVU26
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  93              		.loc 1 410 3 view .LVU27
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
  94              		.loc 1 415 3 view .LVU28
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
  95              		.loc 1 415 11 is_stmt 0 view .LVU29
  96 0010 436D     		ldr	r3, [r0, #84]
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
  97              		.loc 1 415 6 view .LVU30
  98 0012 0BB3     		cbz	r3, .L48
  99              	.LVL3:
 100              	.L4:
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 101              		.loc 1 430 3 is_stmt 1 view .LVU31
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 102              		.loc 1 430 7 is_stmt 0 view .LVU32
 103 0014 2368     		ldr	r3, [r4]
 104 0016 9A68     		ldr	r2, [r3, #8]
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 105              		.loc 1 430 6 view .LVU33
 106 0018 12F0005F 		tst	r2, #536870912
 107 001c 03D0     		beq	.L5
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 108              		.loc 1 433 5 is_stmt 1 view .LVU34
 109 001e 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccodtIyF.s 			page 19


 110 0020 22F00052 		bic	r2, r2, #536870912
 111 0024 9A60     		str	r2, [r3, #8]
 112              	.L5:
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 113              		.loc 1 441 3 view .LVU35
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 114              		.loc 1 441 8 is_stmt 0 view .LVU36
 115 0026 2368     		ldr	r3, [r4]
 116 0028 9A68     		ldr	r2, [r3, #8]
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 117              		.loc 1 441 7 view .LVU37
 118 002a 12F0805F 		tst	r2, #268435456
 119 002e 1AD1     		bne	.L6
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Delay for ADC stabilization time                                       */
 120              		.loc 1 444 5 is_stmt 1 view .LVU38
 121 0030 9A68     		ldr	r2, [r3, #8]
 122 0032 42F08052 		orr	r2, r2, #268435456
 123 0036 9A60     		str	r2, [r3, #8]
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(wait_loop_index != 0)
 124              		.loc 1 449 5 view .LVU39
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(wait_loop_index != 0)
 125              		.loc 1 449 61 is_stmt 0 view .LVU40
 126 0038 A84B     		ldr	r3, .L62
 127 003a 1B68     		ldr	r3, [r3]
 128 003c A84A     		ldr	r2, .L62+4
 129 003e A2FB0323 		umull	r2, r3, r2, r3
 130 0042 DB0C     		lsrs	r3, r3, #19
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(wait_loop_index != 0)
 131              		.loc 1 449 42 view .LVU41
 132 0044 03EB8303 		add	r3, r3, r3, lsl #2
 133 0048 5A00     		lsls	r2, r3, #1
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(wait_loop_index != 0)
 134              		.loc 1 449 21 view .LVU42
 135 004a 0192     		str	r2, [sp, #4]
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 136              		.loc 1 450 5 is_stmt 1 view .LVU43
 137              	.L7:
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 138              		.loc 1 450 27 is_stmt 0 view .LVU44
 139 004c 019B     		ldr	r3, [sp, #4]
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 140              		.loc 1 450 10 view .LVU45
 141 004e 53B1     		cbz	r3, .L6
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 142              		.loc 1 452 7 is_stmt 1 view .LVU46
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 143              		.loc 1 452 22 is_stmt 0 view .LVU47
 144 0050 019B     		ldr	r3, [sp, #4]
 145 0052 013B     		subs	r3, r3, #1
 146 0054 0193     		str	r3, [sp, #4]
 147 0056 F9E7     		b	.L7
 148              	.LVL4:
 149              	.L48:
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 150              		.loc 1 418 5 is_stmt 1 view .LVU48
 151 0058 FFF7FEFF 		bl	HAL_ADC_MspInit
 152              	.LVL5:
ARM GAS  /tmp/ccodtIyF.s 			page 20


 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 153              		.loc 1 421 5 view .LVU49
 154 005c 0023     		movs	r3, #0
 155 005e A365     		str	r3, [r4, #88]
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 156              		.loc 1 424 5 view .LVU50
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 157              		.loc 1 424 16 is_stmt 0 view .LVU51
 158 0060 84F85030 		strb	r3, [r4, #80]
 159 0064 D6E7     		b	.L4
 160              	.L6:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 161              		.loc 1 460 3 is_stmt 1 view .LVU52
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 162              		.loc 1 460 7 is_stmt 0 view .LVU53
 163 0066 2368     		ldr	r3, [r4]
 164 0068 9A68     		ldr	r2, [r3, #8]
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 165              		.loc 1 460 6 view .LVU54
 166 006a 12F0805F 		tst	r2, #268435456
 167 006e 3AD1     		bne	.L33
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 168              		.loc 1 463 5 is_stmt 1 view .LVU55
 169 0070 626D     		ldr	r2, [r4, #84]
 170 0072 42F01002 		orr	r2, r2, #16
 171 0076 6265     		str	r2, [r4, #84]
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 172              		.loc 1 466 5 view .LVU56
 173 0078 A26D     		ldr	r2, [r4, #88]
 174 007a 42F00102 		orr	r2, r2, #1
 175 007e A265     		str	r2, [r4, #88]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 176              		.loc 1 468 5 view .LVU57
 177              	.LVL6:
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 178              		.loc 1 468 20 is_stmt 0 view .LVU58
 179 0080 0120     		movs	r0, #1
 180              	.LVL7:
 181              	.L9:
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)  )
 182              		.loc 1 476 3 is_stmt 1 view .LVU59
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)  )
 183              		.loc 1 476 7 is_stmt 0 view .LVU60
 184 0082 626D     		ldr	r2, [r4, #84]
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)  )
 185              		.loc 1 476 6 view .LVU61
 186 0084 12F0100F 		tst	r2, #16
 187 0088 40F01F81 		bne	.L10
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 188              		.loc 1 477 8 discriminator 1 view .LVU62
 189 008c 9A68     		ldr	r2, [r3, #8]
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)  )
 190              		.loc 1 476 65 discriminator 1 view .LVU63
 191 008e 12F0040F 		tst	r2, #4
 192 0092 40F01A81 		bne	.L10
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 193              		.loc 1 481 5 is_stmt 1 view .LVU64
ARM GAS  /tmp/ccodtIyF.s 			page 21


 194 0096 626D     		ldr	r2, [r4, #84]
 195 0098 42F00202 		orr	r2, r2, #2
 196 009c 6265     		str	r2, [r4, #84]
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 197              		.loc 1 485 5 view .LVU65
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 198              		.loc 1 485 7 is_stmt 0 view .LVU66
 199 009e 9149     		ldr	r1, .L62+8
 200 00a0 914A     		ldr	r2, .L62+12
 201 00a2 9342     		cmp	r3, r2
 202 00a4 18BF     		it	ne
 203 00a6 8B42     		cmpne	r3, r1
 204 00a8 1FD1     		bne	.L34
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 205              		.loc 1 488 21 view .LVU67
 206 00aa 01F54071 		add	r1, r1, #768
 207              	.L11:
 208              	.LVL8:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 209              		.loc 1 499 5 is_stmt 1 view .LVU68
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 210              		.loc 1 499 10 is_stmt 0 view .LVU69
 211 00ae 9A68     		ldr	r2, [r3, #8]
 212 00b0 02F00302 		and	r2, r2, #3
 213 00b4 012A     		cmp	r2, #1
 214 00b6 1AD0     		beq	.L49
 215              	.L12:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 216              		.loc 1 500 38 view .LVU70
 217 00b8 8A4A     		ldr	r2, .L62+8
 218 00ba 9342     		cmp	r3, r2
 219 00bc 1CD0     		beq	.L50
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 220              		.loc 1 500 10 discriminator 2 view .LVU71
 221 00be 8A4A     		ldr	r2, .L62+12
 222 00c0 9342     		cmp	r3, r2
 223 00c2 39D0     		beq	.L51
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 224              		.loc 1 500 10 discriminator 14 view .LVU72
 225 00c4 874B     		ldr	r3, .L62+8
 226 00c6 9B68     		ldr	r3, [r3, #8]
 227 00c8 03F00303 		and	r3, r3, #3
 228 00cc 012B     		cmp	r3, #1
 229 00ce 54D0     		beq	.L52
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 230              		.loc 1 500 10 view .LVU73
 231 00d0 0023     		movs	r3, #0
 232              	.L23:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 233              		.loc 1 500 10 discriminator 31 view .LVU74
 234 00d2 002B     		cmp	r3, #0
 235 00d4 61D1     		bne	.L44
 236              	.L22:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 237              		.loc 1 500 10 discriminator 33 view .LVU75
 238 00d6 844B     		ldr	r3, .L62+12
 239 00d8 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccodtIyF.s 			page 22


 240 00da 03F00303 		and	r3, r3, #3
 241 00de 012B     		cmp	r3, #1
 242 00e0 54D0     		beq	.L53
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 243              		.loc 1 500 10 view .LVU76
 244 00e2 0023     		movs	r3, #0
 245 00e4 5AE0     		b	.L21
 246              	.LVL9:
 247              	.L33:
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 248              		.loc 1 370 21 view .LVU77
 249 00e6 0020     		movs	r0, #0
 250 00e8 CBE7     		b	.L9
 251              	.LVL10:
 252              	.L34:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 253              		.loc 1 493 21 view .LVU78
 254 00ea 8049     		ldr	r1, .L62+16
 255 00ec DFE7     		b	.L11
 256              	.LVL11:
 257              	.L49:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 258              		.loc 1 499 10 discriminator 1 view .LVU79
 259 00ee 1A68     		ldr	r2, [r3]
 260 00f0 12F0010F 		tst	r2, #1
 261 00f4 5BD1     		bne	.L13
 262 00f6 DFE7     		b	.L12
 263              	.L50:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 264              		.loc 1 500 10 discriminator 1 view .LVU80
 265 00f8 7B4B     		ldr	r3, .L62+12
 266 00fa 9B68     		ldr	r3, [r3, #8]
 267 00fc 03F00303 		and	r3, r3, #3
 268 0100 012B     		cmp	r3, #1
 269 0102 09D0     		beq	.L54
 270              	.L15:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 271              		.loc 1 500 10 discriminator 6 view .LVU81
 272 0104 7A4B     		ldr	r3, .L62+20
 273 0106 9B68     		ldr	r3, [r3, #8]
 274 0108 03F00303 		and	r3, r3, #3
 275 010c 012B     		cmp	r3, #1
 276 010e 0AD0     		beq	.L55
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 277              		.loc 1 500 10 view .LVU82
 278 0110 0023     		movs	r3, #0
 279              	.L16:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 280              		.loc 1 500 38 discriminator 12 view .LVU83
 281 0112 83F00103 		eor	r3, r3, #1
 282 0116 43E0     		b	.L17
 283              	.L54:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 284              		.loc 1 500 10 discriminator 3 view .LVU84
 285 0118 734B     		ldr	r3, .L62+12
 286 011a 1B68     		ldr	r3, [r3]
 287 011c 13F0010F 		tst	r3, #1
ARM GAS  /tmp/ccodtIyF.s 			page 23


 288 0120 F0D0     		beq	.L15
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 289              		.loc 1 500 10 view .LVU85
 290 0122 0123     		movs	r3, #1
 291 0124 F5E7     		b	.L16
 292              	.L55:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 293              		.loc 1 500 10 discriminator 7 view .LVU86
 294 0126 724B     		ldr	r3, .L62+20
 295 0128 1B68     		ldr	r3, [r3]
 296 012a 13F0010F 		tst	r3, #1
 297 012e 01D1     		bne	.L37
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 298              		.loc 1 500 10 view .LVU87
 299 0130 0023     		movs	r3, #0
 300 0132 EEE7     		b	.L16
 301              	.L37:
 302 0134 0123     		movs	r3, #1
 303 0136 ECE7     		b	.L16
 304              	.L51:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 305              		.loc 1 500 10 discriminator 13 view .LVU88
 306 0138 6A4B     		ldr	r3, .L62+8
 307 013a 9B68     		ldr	r3, [r3, #8]
 308 013c 03F00303 		and	r3, r3, #3
 309 0140 012B     		cmp	r3, #1
 310 0142 0AD0     		beq	.L56
 311              	.L19:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 312              		.loc 1 500 10 discriminator 18 view .LVU89
 313 0144 6A4B     		ldr	r3, .L62+20
 314 0146 9B68     		ldr	r3, [r3, #8]
 315 0148 03F00303 		and	r3, r3, #3
 316 014c 012B     		cmp	r3, #1
 317 014e 0BD0     		beq	.L57
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 318              		.loc 1 500 10 view .LVU90
 319 0150 0023     		movs	r3, #0
 320              	.L20:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 321              		.loc 1 500 10 discriminator 24 view .LVU91
 322 0152 002B     		cmp	r3, #0
 323 0154 BFD0     		beq	.L22
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 324              		.loc 1 500 10 view .LVU92
 325 0156 0123     		movs	r3, #1
 326 0158 20E0     		b	.L21
 327              	.L56:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 328              		.loc 1 500 10 discriminator 15 view .LVU93
 329 015a 624B     		ldr	r3, .L62+8
 330 015c 1B68     		ldr	r3, [r3]
 331 015e 13F0010F 		tst	r3, #1
 332 0162 EFD0     		beq	.L19
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 333              		.loc 1 500 10 view .LVU94
 334 0164 0123     		movs	r3, #1
ARM GAS  /tmp/ccodtIyF.s 			page 24


 335 0166 F4E7     		b	.L20
 336              	.L57:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 337              		.loc 1 500 10 discriminator 19 view .LVU95
 338 0168 614B     		ldr	r3, .L62+20
 339 016a 1B68     		ldr	r3, [r3]
 340 016c 13F0010F 		tst	r3, #1
 341 0170 01D1     		bne	.L40
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 342              		.loc 1 500 10 view .LVU96
 343 0172 0023     		movs	r3, #0
 344 0174 EDE7     		b	.L20
 345              	.L40:
 346 0176 0123     		movs	r3, #1
 347 0178 EBE7     		b	.L20
 348              	.L52:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 349              		.loc 1 500 10 discriminator 26 view .LVU97
 350 017a 5A4B     		ldr	r3, .L62+8
 351 017c 1B68     		ldr	r3, [r3]
 352 017e 13F0010F 		tst	r3, #1
 353 0182 01D1     		bne	.L43
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 354              		.loc 1 500 10 view .LVU98
 355 0184 0023     		movs	r3, #0
 356 0186 A4E7     		b	.L23
 357              	.L43:
 358 0188 0123     		movs	r3, #1
 359 018a A2E7     		b	.L23
 360              	.L53:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 361              		.loc 1 500 10 discriminator 34 view .LVU99
 362 018c 564B     		ldr	r3, .L62+12
 363 018e 1B68     		ldr	r3, [r3]
 364 0190 13F0010F 		tst	r3, #1
 365 0194 6CD1     		bne	.L46
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 366              		.loc 1 500 10 view .LVU100
 367 0196 0023     		movs	r3, #0
 368 0198 00E0     		b	.L21
 369              	.L44:
 370 019a 0123     		movs	r3, #1
 371              	.L21:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 372              		.loc 1 500 38 discriminator 39 view .LVU101
 373 019c 83F00103 		eor	r3, r3, #1
 374              	.L17:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 375              		.loc 1 499 42 view .LVU102
 376 01a0 2BB1     		cbz	r3, .L13
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 377              		.loc 1 520 7 is_stmt 1 view .LVU103
 378 01a2 8B68     		ldr	r3, [r1, #8]
 379 01a4 23F47C13 		bic	r3, r3, #4128768
 380 01a8 6268     		ldr	r2, [r4, #4]
 381 01aa 1343     		orrs	r3, r3, r2
 382 01ac 8B60     		str	r3, [r1, #8]
ARM GAS  /tmp/ccodtIyF.s 			page 25


 383              	.L13:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Overrun                                          |
 384              		.loc 1 532 5 view .LVU104
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Overrun                                          |
 385              		.loc 1 532 18 is_stmt 0 view .LVU105
 386 01ae 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 387              	.LVL12:
 388              	.LBB60:
 389              	.LBI60:
 390              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/ccodtIyF.s 			page 26


  48:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccodtIyF.s 			page 27


 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccodtIyF.s 			page 28


 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
ARM GAS  /tmp/ccodtIyF.s 			page 29


 219:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccodtIyF.s 			page 30


 276:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccodtIyF.s 			page 31


 333:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccodtIyF.s 			page 32


 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccodtIyF.s 			page 33


 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /tmp/ccodtIyF.s 			page 34


 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccodtIyF.s 			page 35


 561:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccodtIyF.s 			page 36


 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/ccodtIyF.s 			page 37


 675:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
ARM GAS  /tmp/ccodtIyF.s 			page 38


 732:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 776:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
ARM GAS  /tmp/ccodtIyF.s 			page 39


 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 792:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 813:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 822:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 841:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
ARM GAS  /tmp/ccodtIyF.s 			page 40


 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 391              		.loc 2 850 57 is_stmt 1 view .LVU106
 392              	.LBB61:
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 852:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 393              		.loc 2 852 3 view .LVU107
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 394              		.loc 2 857 4 view .LVU108
 395 01b0 4FF40052 		mov	r2, #8192
 396              		.syntax unified
 397              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 398 01b4 92FAA2F2 		rbit r2, r2
 399              	@ 0 "" 2
 400              	.LVL13:
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 859:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 401              		.loc 2 870 3 view .LVU109
 402              		.loc 2 870 3 is_stmt 0 view .LVU110
 403              		.thumb
 404              		.syntax unified
 405              	.LBE61:
 406              	.LBE60:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Overrun                                          |
 407              		.loc 1 532 18 view .LVU111
 408 01b8 B2FA82F2 		clz	r2, r2
 409 01bc 9340     		lsls	r3, r3, r2
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Resolution                                       |
 410              		.loc 1 533 28 view .LVU112
 411 01be 226B     		ldr	r2, [r4, #48]
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Overrun                                          |
 412              		.loc 1 532 78 view .LVU113
 413 01c0 1343     		orrs	r3, r3, r2
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS(hadc->Init.DiscontinuousConvMode)  );
 414              		.loc 1 534 28 view .LVU114
 415 01c2 A268     		ldr	r2, [r4, #8]
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Resolution                                       |
 416              		.loc 1 533 78 view .LVU115
 417 01c4 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccodtIyF.s 			page 41


 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 418              		.loc 1 535 17 view .LVU116
 419 01c6 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 420              	.LVL14:
 421              	.LBB62:
 422              	.LBI62:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 423              		.loc 2 850 57 is_stmt 1 view .LVU117
 424              	.LBB63:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 425              		.loc 2 852 3 view .LVU118
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 426              		.loc 2 857 4 view .LVU119
 427 01c8 4FF48033 		mov	r3, #65536
 428              		.syntax unified
 429              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 430 01cc 93FAA3F3 		rbit r3, r3
 431              	@ 0 "" 2
 432              	.LVL15:
 433              		.loc 2 870 3 view .LVU120
 434              		.loc 2 870 3 is_stmt 0 view .LVU121
 435              		.thumb
 436              		.syntax unified
 437              	.LBE63:
 438              	.LBE62:
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 439              		.loc 1 535 17 view .LVU122
 440 01d0 B3FA83F3 		clz	r3, r3
 441 01d4 01FA03F3 		lsl	r3, r1, r3
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  hadc->Init.Overrun                                          |
 442              		.loc 1 532 14 view .LVU123
 443 01d8 1343     		orrs	r3, r3, r2
 444              	.LVL16:
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 445              		.loc 1 537 5 is_stmt 1 view .LVU124
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 446              		.loc 1 537 8 is_stmt 0 view .LVU125
 447 01da 0129     		cmp	r1, #1
 448 01dc 4AD0     		beq	.L58
 449              	.L24:
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ExternalTrigConvEdge != ADC_EXTERNALTRIGCONVEDGE_NONE))
 450              		.loc 1 548 5 is_stmt 1 view .LVU126
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ExternalTrigConvEdge != ADC_EXTERNALTRIGCONVEDGE_NONE))
 451              		.loc 1 548 20 is_stmt 0 view .LVU127
 452 01de 626A     		ldr	r2, [r4, #36]
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ExternalTrigConvEdge != ADC_EXTERNALTRIGCONVEDGE_NONE))
 453              		.loc 1 548 8 view .LVU128
 454 01e0 012A     		cmp	r2, #1
 455 01e2 03D0     		beq	.L25
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 456              		.loc 1 549 23 view .LVU129
 457 01e4 A16A     		ldr	r1, [r4, #40]
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 458              		.loc 1 549 9 view .LVU130
 459 01e6 09B1     		cbz	r1, .L25
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 460              		.loc 1 551 7 is_stmt 1 view .LVU131
ARM GAS  /tmp/ccodtIyF.s 			page 42


 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 461              		.loc 1 551 48 is_stmt 0 view .LVU132
 462 01e8 0A43     		orrs	r2, r2, r1
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 463              		.loc 1 551 15 view .LVU133
 464 01ea 1343     		orrs	r3, r3, r2
 465              	.LVL17:
 466              	.L25:
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 467              		.loc 1 555 5 is_stmt 1 view .LVU134
 468 01ec 2168     		ldr	r1, [r4]
 469 01ee CD68     		ldr	r5, [r1, #12]
 470 01f0 404A     		ldr	r2, .L62+24
 471 01f2 2A40     		ands	r2, r2, r5
 472 01f4 1343     		orrs	r3, r3, r2
 473              	.LVL18:
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 474              		.loc 1 555 5 is_stmt 0 view .LVU135
 475 01f6 CB60     		str	r3, [r1, #12]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 476              		.loc 1 565 5 is_stmt 1 view .LVU136
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 477              		.loc 1 565 9 is_stmt 0 view .LVU137
 478 01f8 2368     		ldr	r3, [r4]
 479 01fa 9A68     		ldr	r2, [r3, #8]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 480              		.loc 1 565 8 view .LVU138
 481 01fc 12F00C0F 		tst	r2, #12
 482 0200 27D1     		bne	.L26
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.ConversionDataManagement) );
 483              		.loc 1 567 7 is_stmt 1 view .LVU139
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.ConversionDataManagement) );
 484              		.loc 1 567 19 is_stmt 0 view .LVU140
 485 0202 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 486              	.LVL19:
 487              	.LBB64:
 488              	.LBI64:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 489              		.loc 2 850 57 is_stmt 1 view .LVU141
 490              	.LBB65:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491              		.loc 2 852 3 view .LVU142
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 492              		.loc 2 857 4 view .LVU143
 493 0204 4FF48041 		mov	r1, #16384
 494              		.syntax unified
 495              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 496 0208 91FAA1F1 		rbit r1, r1
 497              	@ 0 "" 2
 498              	.LVL20:
 499              		.loc 2 870 3 view .LVU144
 500              		.loc 2 870 3 is_stmt 0 view .LVU145
 501              		.thumb
 502              		.syntax unified
 503              	.LBE65:
 504              	.LBE64:
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.ConversionDataManagement) );
ARM GAS  /tmp/ccodtIyF.s 			page 43


 505              		.loc 1 567 19 view .LVU146
 506 020c B1FA81F1 		clz	r1, r1
 507 0210 8A40     		lsls	r2, r2, r1
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 508              		.loc 1 568 19 view .LVU147
 509 0212 E16A     		ldr	r1, [r4, #44]
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.ConversionDataManagement) );
 510              		.loc 1 567 15 view .LVU148
 511 0214 1143     		orrs	r1, r1, r2
 512              	.LVL21:
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 513              		.loc 1 570 7 is_stmt 1 view .LVU149
 514 0216 DD68     		ldr	r5, [r3, #12]
 515 0218 374A     		ldr	r2, .L62+28
 516 021a 2A40     		ands	r2, r2, r5
 517 021c 0A43     		orrs	r2, r2, r1
 518 021e DA60     		str	r2, [r3, #12]
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 519              		.loc 1 573 7 view .LVU150
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 520              		.loc 1 573 21 is_stmt 0 view .LVU151
 521 0220 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 522              		.loc 1 573 10 view .LVU152
 523 0224 012B     		cmp	r3, #1
 524 0226 30D0     		beq	.L59
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 525              		.loc 1 604 9 is_stmt 1 view .LVU153
 526 0228 2268     		ldr	r2, [r4]
 527 022a 1369     		ldr	r3, [r2, #16]
 528 022c 23F00103 		bic	r3, r3, #1
 529 0230 1361     		str	r3, [r2, #16]
 530              	.LVL22:
 531              	.L28:
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 532              		.loc 1 608 7 view .LVU154
 533 0232 2268     		ldr	r2, [r4]
 534 0234 1369     		ldr	r3, [r2, #16]
 535 0236 23F07043 		bic	r3, r3, #-268435456
 536 023a 616B     		ldr	r1, [r4, #52]
 537 023c 0B43     		orrs	r3, r3, r1
 538 023e 1361     		str	r3, [r2, #16]
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 539              		.loc 1 611 7 view .LVU155
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 540              		.loc 1 611 20 is_stmt 0 view .LVU156
 541 0240 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 542              		.loc 1 611 9 view .LVU157
 543 0244 012B     		cmp	r3, #1
 544 0246 31D0     		beq	.L60
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 545              		.loc 1 617 9 is_stmt 1 view .LVU158
 546 0248 2268     		ldr	r2, [r4]
 547 024a 9368     		ldr	r3, [r2, #8]
 548 024c 23F48073 		bic	r3, r3, #256
 549 0250 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccodtIyF.s 			page 44


 550              	.L26:
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 551              		.loc 1 631 5 view .LVU159
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 552              		.loc 1 631 19 is_stmt 0 view .LVU160
 553 0252 E368     		ldr	r3, [r4, #12]
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 554              		.loc 1 631 8 view .LVU161
 555 0254 012B     		cmp	r3, #1
 556 0256 2FD0     		beq	.L61
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 557              		.loc 1 638 7 is_stmt 1 view .LVU162
 558 0258 2268     		ldr	r2, [r4]
 559 025a 136B     		ldr	r3, [r2, #48]
 560 025c 23F00F03 		bic	r3, r3, #15
 561 0260 1363     		str	r3, [r2, #48]
 562              	.L31:
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 563              		.loc 1 644 5 view .LVU163
 564 0262 636D     		ldr	r3, [r4, #84]
 565 0264 23F00303 		bic	r3, r3, #3
 566 0268 43F00103 		orr	r3, r3, #1
 567 026c 6365     		str	r3, [r4, #84]
 568 026e 31E0     		b	.L3
 569              	.LVL23:
 570              	.L46:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 571              		.loc 1 500 10 is_stmt 0 view .LVU164
 572 0270 0123     		movs	r3, #1
 573 0272 93E7     		b	.L21
 574              	.LVL24:
 575              	.L58:
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 576              		.loc 1 539 7 is_stmt 1 view .LVU165
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 577              		.loc 1 539 18 is_stmt 0 view .LVU166
 578 0274 226A     		ldr	r2, [r4, #32]
 579 0276 013A     		subs	r2, r2, #1
 580              	.LVL25:
 581              	.LBB66:
 582              	.LBI66:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 583              		.loc 2 850 57 is_stmt 1 view .LVU167
 584              	.LBB67:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585              		.loc 2 852 3 view .LVU168
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 586              		.loc 2 857 4 view .LVU169
 587 0278 4FF46021 		mov	r1, #917504
 588              		.syntax unified
 589              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 590 027c 91FAA1F1 		rbit r1, r1
 591              	@ 0 "" 2
 592              	.LVL26:
 593              		.loc 2 870 3 view .LVU170
 594              		.loc 2 870 3 is_stmt 0 view .LVU171
 595              		.thumb
ARM GAS  /tmp/ccodtIyF.s 			page 45


 596              		.syntax unified
 597              	.LBE67:
 598              	.LBE66:
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 599              		.loc 1 539 18 view .LVU172
 600 0280 B1FA81F1 		clz	r1, r1
 601 0284 8A40     		lsls	r2, r2, r1
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 602              		.loc 1 539 15 view .LVU173
 603 0286 1343     		orrs	r3, r3, r2
 604              	.LVL27:
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 605              		.loc 1 539 15 view .LVU174
 606 0288 A9E7     		b	.L24
 607              	.LVL28:
 608              	.L59:
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 609              		.loc 1 575 9 is_stmt 1 view .LVU175
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 610              		.loc 1 576 9 view .LVU176
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 611              		.loc 1 577 9 view .LVU177
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 612              		.loc 1 578 9 view .LVU178
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 613              		.loc 1 580 9 view .LVU179
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 614              		.loc 1 584 11 view .LVU180
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          ADC_CFGR2_ROVSE                       |
 615              		.loc 1 594 8 view .LVU181
 616 028a 2168     		ldr	r1, [r4]
 617              	.LVL29:
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                          ADC_CFGR2_ROVSE                       |
 618              		.loc 1 594 8 is_stmt 0 view .LVU182
 619 028c 0A69     		ldr	r2, [r1, #16]
 620 028e 1B4B     		ldr	r3, .L62+32
 621 0290 1340     		ands	r3, r3, r2
 622 0292 E56B     		ldr	r5, [r4, #60]
 623 0294 226C     		ldr	r2, [r4, #64]
 624 0296 42EA0542 		orr	r2, r2, r5, lsl #16
 625 029a 656C     		ldr	r5, [r4, #68]
 626 029c 2A43     		orrs	r2, r2, r5
 627 029e A56C     		ldr	r5, [r4, #72]
 628 02a0 2A43     		orrs	r2, r2, r5
 629 02a2 1343     		orrs	r3, r3, r2
 630 02a4 43F00103 		orr	r3, r3, #1
 631 02a8 0B61     		str	r3, [r1, #16]
 632 02aa C2E7     		b	.L28
 633              	.L60:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 634              		.loc 1 613 9 is_stmt 1 view .LVU183
 635 02ac 2268     		ldr	r2, [r4]
 636 02ae 9368     		ldr	r3, [r2, #8]
 637 02b0 43F48073 		orr	r3, r3, #256
 638 02b4 9360     		str	r3, [r2, #8]
 639 02b6 CCE7     		b	.L26
 640              	.L61:
ARM GAS  /tmp/ccodtIyF.s 			page 46


 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 641              		.loc 1 634 7 view .LVU184
 642 02b8 2168     		ldr	r1, [r4]
 643 02ba 0B6B     		ldr	r3, [r1, #48]
 644 02bc 23F00F03 		bic	r3, r3, #15
 645 02c0 A269     		ldr	r2, [r4, #24]
 646 02c2 013A     		subs	r2, r2, #1
 647 02c4 1343     		orrs	r3, r3, r2
 648 02c6 0B63     		str	r3, [r1, #48]
 649 02c8 CBE7     		b	.L31
 650              	.LVL30:
 651              	.L10:
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 652              		.loc 1 649 5 view .LVU185
 653 02ca 636D     		ldr	r3, [r4, #84]
 654 02cc 43F01003 		orr	r3, r3, #16
 655 02d0 6365     		str	r3, [r4, #84]
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }  /*  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL)  && (ADC_IS_CONVERSION_ONGOI
 656              		.loc 1 651 5 view .LVU186
 657              	.LVL31:
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }  /*  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL)  && (ADC_IS_CONVERSION_ONGOI
 658              		.loc 1 651 20 is_stmt 0 view .LVU187
 659 02d2 0120     		movs	r0, #1
 660              	.LVL32:
 661              	.L3:
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 662              		.loc 1 658 1 view .LVU188
 663 02d4 03B0     		add	sp, sp, #12
 664              	.LCFI2:
 665              		.cfi_remember_state
 666              		.cfi_def_cfa_offset 12
 667              		@ sp needed
 668 02d6 30BD     		pop	{r4, r5, pc}
 669              	.LVL33:
 670              	.L32:
 671              	.LCFI3:
 672              		.cfi_restore_state
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 673              		.loc 1 379 12 view .LVU189
 674 02d8 0120     		movs	r0, #1
 675              	.LVL34:
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 676              		.loc 1 379 12 view .LVU190
 677 02da FBE7     		b	.L3
 678              	.L63:
 679              		.align	2
 680              	.L62:
 681 02dc 00000000 		.word	SystemCoreClock
 682 02e0 83DE1B43 		.word	1125899907
 683 02e4 00200240 		.word	1073881088
 684 02e8 00210240 		.word	1073881344
 685 02ec 00630258 		.word	1476551424
 686 02f0 00600258 		.word	1476550656
 687 02f4 03C0F0FF 		.word	-999421
 688 02f8 FCBFFFFF 		.word	-16388
 689 02fc 1EF800FC 		.word	-67045346
 690              		.cfi_endproc
ARM GAS  /tmp/ccodtIyF.s 			page 47


 691              	.LFE137:
 693              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 694              		.align	1
 695              		.weak	HAL_ADC_MspDeInit
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv5-d16
 701              	HAL_ADC_MspDeInit:
 702              	.LVL35:
 703              	.LFB140:
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   All ADCs use the same clock: disabling the clock will reset all ADCs.
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 704              		.loc 1 897 1 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 709              		.loc 1 899 3 view .LVU192
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 710              		.loc 1 903 1 is_stmt 0 view .LVU193
 711 0000 7047     		bx	lr
 712              		.cfi_endproc
 713              	.LFE140:
 715              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_ADC_PollForConversion
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv5-d16
 723              	HAL_ADC_PollForConversion:
 724              	.LVL36:
 725              	.LFB143:
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 Input and Output operation functions
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    ADC IO operation functions
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              ##### IO operation functions #####
ARM GAS  /tmp/ccodtIyF.s 			page 48


 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..] This section provides functions allowing to:
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group.
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group.
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Poll for conversion event.
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Handle ADC interrupt request
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, starts conversion of regular group.
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled(when multimode feature is available):
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            if ADC is Slave, ADC is enabled but conversion is not started,
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            if ADC is master, ADC is enabled and multimode conversion is started.
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* State machine update: Check if an injected conversion is ongoing */
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR|HAL_ADC_ERROR_DMA));
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to none */
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
ARM GAS  /tmp/ccodtIyF.s 			page 49


 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear HAL_ADC_STATE_READY and regular conversion results bits, set HAL_ADC_STATE_REG_BUSY 
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_READY|HAL_ADC_STATE_REG_EOC|HAL_ADC_STATE_REG_O
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - by default if ADC is Master or Independent
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if MultiMode setting is set to independent mode (no dual regular or injected conversions 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC12_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag                   */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If external trigger has been selected, conversion starts at next     */
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* trigger event.                                                       */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of multimode enabled(when multimode feature is available):      */
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Multimode feature is not available or ADC Instance is Independent or Master,
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              or is not Slave ADC with dual regular conversions enabled.
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              Then, set HAL_ADC_STATE_INJ_BUSY bit and reset HAL_ADC_STATE_INJ_EOC bit if JAUTO is s
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC */
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET)
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }  /* if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET) */
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }    /* if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)) */
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
ARM GAS  /tmp/ccodtIyF.s 			page 50


1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC peripheral disable is forcing stop of potential
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear HAL_ADC_STATE_REG_BUSY and HAL_ADC_STATE_INJ_BUSY bits, set HAL_ADC_STATE_READY bit 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_REG_BUSY|HAL_ADC_STATE_INJ_BUSY), HAL_ADC_STATE
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
ARM GAS  /tmp/ccodtIyF.s 			page 51


1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Depending on hadc->Init.EOCSelection, EOS or EOC is
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         checked and cleared depending on AUTDLY bit status.
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   HAL_ADC_PollForConversion() returns HAL_ERROR if EOC is polled in a
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         DMA-managed conversions configuration: indeed, EOC is immediately
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         reset by the DMA reading the DR register when the converted data is
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         available. Therefore, EOC is set for a too short period to be
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         reliably polled.
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 726              		.loc 1 1099 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		.loc 1 1099 1 is_stmt 0 view .LVU195
 731 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 732              	.LCFI4:
 733              		.cfi_def_cfa_offset 24
 734              		.cfi_offset 3, -24
 735              		.cfi_offset 4, -20
 736              		.cfi_offset 5, -16
 737              		.cfi_offset 6, -12
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t           tickstart = 0;
 740              		.loc 1 1100 3 is_stmt 1 view .LVU196
 741              	.LVL37:
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t           tmp_Flag_EOC   = 0x00;
 742              		.loc 1 1101 3 view .LVU197
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 743              		.loc 1 1102 3 view .LVU198
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
 744              		.loc 1 1103 3 view .LVU199
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t           tmp_cfgr       = 0x00;
 745              		.loc 1 1104 3 view .LVU200
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t           tmp_eos_raised = 0x01; /* by default, assume that EOS is set,
 746              		.loc 1 1105 3 view .LVU201
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                tmp_eos_raised will be corrected
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                accordingly during API execution */
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 747              		.loc 1 1110 3 view .LVU202
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    /* If end of conversion selected to end of sequence conversions */
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 748              		.loc 1 1113 3 view .LVU203
 749              		.loc 1 1113 17 is_stmt 0 view .LVU204
 750 0002 0669     		ldr	r6, [r0, #16]
 751              		.loc 1 1113 6 view .LVU205
 752 0004 082E     		cmp	r6, #8
 753 0006 2DD0     		beq	.L66
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
ARM GAS  /tmp/ccodtIyF.s 			page 52


1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_Flag_EOC = ADC_FLAG_EOS;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else  /* ADC_EOC_SINGLE_CONV */
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check that the ADC is not in a DMA-based configuration. Otherwise,
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        returns an error.  */
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check whether dual regular conversions are disabled or unavailable. */
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET)
 754              		.loc 1 1124 5 is_stmt 1 view .LVU206
 755              		.loc 1 1124 9 is_stmt 0 view .LVU207
 756 0008 0368     		ldr	r3, [r0]
 757 000a 534C     		ldr	r4, .L93
 758 000c 534A     		ldr	r2, .L93+4
 759 000e 9342     		cmp	r3, r2
 760 0010 18BF     		it	ne
 761 0012 A342     		cmpne	r3, r4
 762 0014 21D1     		bne	.L67
 763              		.loc 1 1124 9 discriminator 1 view .LVU208
 764 0016 02F50072 		add	r2, r2, #512
 765 001a 9268     		ldr	r2, [r2, #8]
 766 001c 12F01F0F 		tst	r2, #31
 767 0020 1BD0     		beq	.L67
 768              		.loc 1 1124 9 discriminator 3 view .LVU209
 769 0022 4F4A     		ldr	r2, .L93+8
 770 0024 9268     		ldr	r2, [r2, #8]
 771 0026 02F01F02 		and	r2, r2, #31
 772 002a 052A     		cmp	r2, #5
 773 002c 15D0     		beq	.L67
 774              		.loc 1 1124 9 discriminator 5 view .LVU210
 775 002e 4C4A     		ldr	r2, .L93+8
 776 0030 9268     		ldr	r2, [r2, #8]
 777 0032 02F01F02 		and	r2, r2, #31
 778 0036 092A     		cmp	r2, #9
 779 0038 0FD0     		beq	.L67
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check DMNGT bit in handle ADC CFGR register */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0) != RESET)
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Else need to check Common register CCR DAMDF bit field. */
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set pointer to the common control register */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Pointer to the common control register                                 */
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Dual ADC mode, could be only ADC1 or ADC2                              */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
 780              		.loc 1 1140 7 is_stmt 1 view .LVU211
 781              	.LVL38:
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((READ_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF) == ADC_DUALMODEDATAFORMAT_32_10_BITS)
 782              		.loc 1 1142 7 view .LVU212
ARM GAS  /tmp/ccodtIyF.s 			page 53


 783              		.loc 1 1142 12 is_stmt 0 view .LVU213
 784 003a 494B     		ldr	r3, .L93+8
 785 003c 9B68     		ldr	r3, [r3, #8]
 786 003e 03F44043 		and	r3, r3, #49152
 787              		.loc 1 1142 10 view .LVU214
 788 0042 B3F5004F 		cmp	r3, #32768
 789 0046 2ED0     		beq	.L68
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (READ_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF) == ADC_DUALMODEDATAFORMAT_8_BITS))
 790              		.loc 1 1143 15 view .LVU215
 791 0048 454B     		ldr	r3, .L93+8
 792 004a 9B68     		ldr	r3, [r3, #8]
 793 004c 03F44043 		and	r3, r3, #49152
 794              		.loc 1 1143 11 view .LVU216
 795 0050 B3F5404F 		cmp	r3, #49152
 796 0054 27D0     		beq	.L68
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* no DMA transfer detected, polling ADC_FLAG_EOC is possible */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_Flag_EOC = ADC_FLAG_EOC;
 797              		.loc 1 1151 18 view .LVU217
 798 0056 0426     		movs	r6, #4
 799 0058 04E0     		b	.L66
 800              	.LVL39:
 801              	.L67:
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 802              		.loc 1 1127 7 is_stmt 1 view .LVU218
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 803              		.loc 1 1127 11 is_stmt 0 view .LVU219
 804 005a DB68     		ldr	r3, [r3, #12]
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 805              		.loc 1 1127 10 view .LVU220
 806 005c 13F0010F 		tst	r3, #1
 807 0060 1BD1     		bne	.L90
 808              		.loc 1 1151 18 view .LVU221
 809 0062 0426     		movs	r6, #4
 810              	.L66:
 811 0064 0D46     		mov	r5, r1
 812 0066 0446     		mov	r4, r0
 813              	.LVL40:
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get tick count */
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 814              		.loc 1 1155 3 is_stmt 1 view .LVU222
 815              		.loc 1 1155 15 is_stmt 0 view .LVU223
 816 0068 FFF7FEFF 		bl	HAL_GetTick
 817              	.LVL41:
 818              		.loc 1 1155 15 view .LVU224
 819 006c 0746     		mov	r7, r0
 820              	.LVL42:
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Wait until End of Conversion or Sequence flag is raised */
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   while (HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
ARM GAS  /tmp/ccodtIyF.s 			page 54


 821              		.loc 1 1158 3 is_stmt 1 view .LVU225
 822              	.L72:
 823              		.loc 1 1158 10 is_stmt 0 view .LVU226
 824 006e 2368     		ldr	r3, [r4]
 825 0070 1A68     		ldr	r2, [r3]
 826              		.loc 1 1158 9 view .LVU227
 827 0072 3242     		tst	r2, r6
 828 0074 1DD1     		bne	.L91
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 829              		.loc 1 1161 5 is_stmt 1 view .LVU228
 830              		.loc 1 1161 7 is_stmt 0 view .LVU229
 831 0076 B5F1FF3F 		cmp	r5, #-1
 832 007a F8D0     		beq	.L72
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 833              		.loc 1 1163 7 is_stmt 1 view .LVU230
 834              		.loc 1 1163 9 is_stmt 0 view .LVU231
 835 007c 25B1     		cbz	r5, .L73
 836              		.loc 1 1163 30 discriminator 1 view .LVU232
 837 007e FFF7FEFF 		bl	HAL_GetTick
 838              	.LVL43:
 839              		.loc 1 1163 43 discriminator 1 view .LVU233
 840 0082 C01B     		subs	r0, r0, r7
 841              		.loc 1 1163 25 discriminator 1 view .LVU234
 842 0084 A842     		cmp	r0, r5
 843 0086 F2D9     		bls	.L72
 844              	.L73:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 845              		.loc 1 1166 9 is_stmt 1 view .LVU235
 846 0088 636D     		ldr	r3, [r4, #84]
 847 008a 43F00403 		orr	r3, r3, #4
 848 008e 6365     		str	r3, [r4, #84]
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 849              		.loc 1 1169 9 view .LVU236
 850              		.loc 1 1169 9 view .LVU237
 851 0090 0023     		movs	r3, #0
 852 0092 84F85030 		strb	r3, [r4, #80]
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_TIMEOUT;
 853              		.loc 1 1171 9 view .LVU238
 854              		.loc 1 1171 16 is_stmt 0 view .LVU239
 855 0096 0320     		movs	r0, #3
 856 0098 56E0     		b	.L70
 857              	.LVL44:
 858              	.L90:
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
 859              		.loc 1 1129 9 is_stmt 1 view .LVU240
 860 009a 436D     		ldr	r3, [r0, #84]
 861 009c 43F02003 		orr	r3, r3, #32
 862 00a0 4365     		str	r3, [r0, #84]
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
ARM GAS  /tmp/ccodtIyF.s 			page 55


 863              		.loc 1 1130 9 view .LVU241
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 864              		.loc 1 1130 16 is_stmt 0 view .LVU242
 865 00a2 0120     		movs	r0, #1
 866              	.LVL45:
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 867              		.loc 1 1130 16 view .LVU243
 868 00a4 50E0     		b	.L70
 869              	.LVL46:
 870              	.L68:
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
 871              		.loc 1 1145 9 is_stmt 1 view .LVU244
 872 00a6 436D     		ldr	r3, [r0, #84]
 873 00a8 43F02003 		orr	r3, r3, #32
 874 00ac 4365     		str	r3, [r0, #84]
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 875              		.loc 1 1146 9 view .LVU245
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 876              		.loc 1 1146 16 is_stmt 0 view .LVU246
 877 00ae 0120     		movs	r0, #1
 878              	.LVL47:
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 879              		.loc 1 1146 16 view .LVU247
 880 00b0 4AE0     		b	.L70
 881              	.LVL48:
 882              	.L91:
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Next, to clear the polled flag as well as to update the handle State,
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      EOS is checked and the relevant configuration register is retrieved. */
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*   1. Check whether or not EOS is set */
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->ISR, ADC_FLAG_EOS))
 883              		.loc 1 1179 3 is_stmt 1 view .LVU248
 884              		.loc 1 1179 7 is_stmt 0 view .LVU249
 885 00b2 1A68     		ldr	r2, [r3]
 886              		.loc 1 1179 6 view .LVU250
 887 00b4 12F0080F 		tst	r2, #8
 888 00b8 1DD0     		beq	.L83
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                tmp_eos_raised will be corrected
 889              		.loc 1 1105 22 view .LVU251
 890 00ba 0120     		movs	r0, #1
 891              	.L75:
 892              	.LVL49:
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_eos_raised = 0;
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  2. Check whether or not hadc is the handle of a Slave ADC with dual
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    regular conversions enabled. */
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
 893              		.loc 1 1185 3 is_stmt 1 view .LVU252
 894              		.loc 1 1185 6 is_stmt 0 view .LVU253
 895 00bc 2649     		ldr	r1, .L93
 896 00be 294A     		ldr	r2, .L93+12
 897 00c0 9342     		cmp	r3, r2
 898 00c2 18BF     		it	ne
ARM GAS  /tmp/ccodtIyF.s 			page 56


 899 00c4 8B42     		cmpne	r3, r1
 900 00c6 18D0     		beq	.L76
 901              		.loc 1 1185 7 discriminator 1 view .LVU254
 902 00c8 02F16842 		add	r2, r2, #-402653184
 903 00cc A2F57452 		sub	r2, r2, #15616
 904 00d0 9268     		ldr	r2, [r2, #8]
 905 00d2 12F01F0F 		tst	r2, #31
 906 00d6 10D0     		beq	.L76
 907              		.loc 1 1185 7 discriminator 2 view .LVU255
 908 00d8 214A     		ldr	r2, .L93+8
 909 00da 9268     		ldr	r2, [r2, #8]
 910 00dc 02F01F02 		and	r2, r2, #31
 911 00e0 052A     		cmp	r2, #5
 912 00e2 0AD0     		beq	.L76
 913              		.loc 1 1185 7 discriminator 3 view .LVU256
 914 00e4 1E4A     		ldr	r2, .L93+8
 915 00e6 9268     		ldr	r2, [r2, #8]
 916 00e8 02F01F02 		and	r2, r2, #31
 917 00ec 092A     		cmp	r2, #9
 918 00ee 04D0     		beq	.L76
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmpADC_Master = ADC_MASTER_REGISTER(hadc);
 919              		.loc 1 1193 5 is_stmt 1 discriminator 4 view .LVU257
 920              	.LVL50:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 921              		.loc 1 1194 5 discriminator 4 view .LVU258
 922              		.loc 1 1194 14 is_stmt 0 discriminator 4 view .LVU259
 923 00f0 194A     		ldr	r2, .L93
 924 00f2 D268     		ldr	r2, [r2, #12]
 925              	.LVL51:
 926              		.loc 1 1194 14 discriminator 4 view .LVU260
 927 00f4 02E0     		b	.L78
 928              	.LVL52:
 929              	.L83:
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 930              		.loc 1 1181 20 view .LVU261
 931 00f6 0020     		movs	r0, #0
 932 00f8 E0E7     		b	.L75
 933              	.LVL53:
 934              	.L76:
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 935              		.loc 1 1188 5 is_stmt 1 view .LVU262
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 936              		.loc 1 1188 14 is_stmt 0 view .LVU263
 937 00fa DA68     		ldr	r2, [r3, #12]
 938              	.LVL54:
 939              	.L78:
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Clear polled flag */
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_Flag_EOC == ADC_FLAG_EOS)
ARM GAS  /tmp/ccodtIyF.s 			page 57


 940              		.loc 1 1198 3 is_stmt 1 view .LVU264
 941              		.loc 1 1198 6 is_stmt 0 view .LVU265
 942 00fc 082E     		cmp	r6, #8
 943 00fe 05D0     		beq	.L92
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For regular groups, no new conversion will start before EOC is cleared.*/
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note that 1. reading DR clears EOC.                                    */
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*           2. in multimode with dual regular conversions enabled (when  */
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*              multimode feature is available), Master AUTDLY bit is     */
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*              checked.                                                  */
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
 944              		.loc 1 1213 5 is_stmt 1 view .LVU266
 945              		.loc 1 1213 8 is_stmt 0 view .LVU267
 946 0100 12F4804F 		tst	r2, #16384
 947 0104 04D1     		bne	.L80
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 948              		.loc 1 1215 7 is_stmt 1 view .LVU268
 949 0106 0421     		movs	r1, #4
 950 0108 1960     		str	r1, [r3]
 951 010a 01E0     		b	.L80
 952              	.L92:
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 953              		.loc 1 1200 5 view .LVU269
 954 010c 0821     		movs	r1, #8
 955 010e 1960     		str	r1, [r3]
 956              	.L80:
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Update ADC state machine */
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 957              		.loc 1 1221 3 view .LVU270
 958 0110 636D     		ldr	r3, [r4, #84]
 959 0112 43F40073 		orr	r3, r3, #512
 960 0116 6365     		str	r3, [r4, #84]
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If 1. EOS is set
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         2. conversions are software-triggered
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         3. CONT bit is reset (that of handle ADC or Master ADC if applicable)
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Then regular conversions are over and HAL_ADC_STATE_REG_BUSY can be reset.
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         4. additionally, if no injected conversions are on-going, HAL_ADC_STATE_READY
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           can be set */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_eos_raised)
 961              		.loc 1 1228 3 view .LVU271
 962              		.loc 1 1228 6 is_stmt 0 view .LVU272
 963 0118 A8B1     		cbz	r0, .L84
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (ADC_IS_SOFTWARE_START_REGULAR(hadc))
 964              		.loc 1 1229 11 view .LVU273
ARM GAS  /tmp/ccodtIyF.s 			page 58


 965 011a 2368     		ldr	r3, [r4]
 966 011c DB68     		ldr	r3, [r3, #12]
 967              		.loc 1 1229 7 view .LVU274
 968 011e 13F4406F 		tst	r3, #3072
 969 0122 12D1     		bne	.L85
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET))
 970              		.loc 1 1230 7 view .LVU275
 971 0124 12F4005F 		tst	r2, #8192
 972 0128 11D1     		bne	.L86
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 973              		.loc 1 1232 5 is_stmt 1 view .LVU276
 974 012a 636D     		ldr	r3, [r4, #84]
 975 012c 23F48073 		bic	r3, r3, #256
 976 0130 6365     		str	r3, [r4, #84]
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* If no injected conversion on-going, set HAL_ADC_STATE_READY bit */
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 977              		.loc 1 1234 5 view .LVU277
 978              		.loc 1 1234 9 is_stmt 0 view .LVU278
 979 0132 636D     		ldr	r3, [r4, #84]
 980              		.loc 1 1234 8 view .LVU279
 981 0134 13F4805F 		tst	r3, #4096
 982 0138 0BD1     		bne	.L87
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 983              		.loc 1 1236 7 is_stmt 1 view .LVU280
 984 013a 636D     		ldr	r3, [r4, #84]
 985 013c 43F00103 		orr	r3, r3, #1
 986 0140 6365     		str	r3, [r4, #84]
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
 987              		.loc 1 1242 10 is_stmt 0 view .LVU281
 988 0142 0020     		movs	r0, #0
 989              	.LVL55:
 990              		.loc 1 1242 10 view .LVU282
 991 0144 00E0     		b	.L70
 992              	.LVL56:
 993              	.L84:
 994              		.loc 1 1242 10 view .LVU283
 995 0146 0020     		movs	r0, #0
 996              	.LVL57:
 997              	.L70:
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 998              		.loc 1 1243 1 view .LVU284
 999 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1000              	.LVL58:
 1001              	.L85:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1002              		.loc 1 1242 10 view .LVU285
 1003 014a 0020     		movs	r0, #0
 1004              	.LVL59:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1005              		.loc 1 1242 10 view .LVU286
ARM GAS  /tmp/ccodtIyF.s 			page 59


 1006 014c FCE7     		b	.L70
 1007              	.LVL60:
 1008              	.L86:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1009              		.loc 1 1242 10 view .LVU287
 1010 014e 0020     		movs	r0, #0
 1011              	.LVL61:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1012              		.loc 1 1242 10 view .LVU288
 1013 0150 FAE7     		b	.L70
 1014              	.LVL62:
 1015              	.L87:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1016              		.loc 1 1242 10 view .LVU289
 1017 0152 0020     		movs	r0, #0
 1018              	.LVL63:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1019              		.loc 1 1242 10 view .LVU290
 1020 0154 F8E7     		b	.L70
 1021              	.L94:
 1022 0156 00BF     		.align	2
 1023              	.L93:
 1024 0158 00200240 		.word	1073881088
 1025 015c 00210240 		.word	1073881344
 1026 0160 00230240 		.word	1073881856
 1027 0164 00600258 		.word	1476550656
 1028              		.cfi_endproc
 1029              	.LFE143:
 1031              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1032              		.align	1
 1033              		.global	HAL_ADC_PollForEvent
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv5-d16
 1039              	HAL_ADC_PollForEvent:
 1040              	.LVL64:
 1041              	.LFB144:
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Poll for ADC event.
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  EventType: the ADC event type.
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          This parameter can be one of the following values:
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, DR may be potentially overwritten
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
ARM GAS  /tmp/ccodtIyF.s 			page 60


1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1042              		.loc 1 1266 1 is_stmt 1 view -0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		.loc 1 1266 1 is_stmt 0 view .LVU292
 1047 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1048              	.LCFI5:
 1049              		.cfi_def_cfa_offset 24
 1050              		.cfi_offset 3, -24
 1051              		.cfi_offset 4, -20
 1052              		.cfi_offset 5, -16
 1053              		.cfi_offset 6, -12
 1054              		.cfi_offset 7, -8
 1055              		.cfi_offset 14, -4
 1056 0002 0546     		mov	r5, r0
 1057 0004 0C46     		mov	r4, r1
 1058 0006 1646     		mov	r6, r2
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
 1059              		.loc 1 1267 3 is_stmt 1 view .LVU293
 1060              	.LVL65:
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1061              		.loc 1 1270 3 view .LVU294
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1062              		.loc 1 1271 3 view .LVU295
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get tick count */
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1063              		.loc 1 1274 3 view .LVU296
 1064              		.loc 1 1274 15 is_stmt 0 view .LVU297
 1065 0008 FFF7FEFF 		bl	HAL_GetTick
 1066              	.LVL66:
 1067              		.loc 1 1274 15 view .LVU298
 1068 000c 0746     		mov	r7, r0
 1069              	.LVL67:
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check selected event flag */
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 1070              		.loc 1 1277 3 is_stmt 1 view .LVU299
 1071              	.L97:
 1072              		.loc 1 1277 9 is_stmt 0 view .LVU300
 1073 000e 2B68     		ldr	r3, [r5]
 1074 0010 1A68     		ldr	r2, [r3]
 1075              		.loc 1 1277 8 view .LVU301
 1076 0012 34EA0202 		bics	r2, r4, r2
 1077 0016 11D0     		beq	.L110
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 1078              		.loc 1 1280 5 is_stmt 1 view .LVU302
 1079              		.loc 1 1280 7 is_stmt 0 view .LVU303
 1080 0018 B6F1FF3F 		cmp	r6, #-1
ARM GAS  /tmp/ccodtIyF.s 			page 61


 1081 001c F7D0     		beq	.L97
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 1082              		.loc 1 1282 7 is_stmt 1 view .LVU304
 1083              		.loc 1 1282 9 is_stmt 0 view .LVU305
 1084 001e 26B1     		cbz	r6, .L98
 1085              		.loc 1 1282 30 discriminator 1 view .LVU306
 1086 0020 FFF7FEFF 		bl	HAL_GetTick
 1087              	.LVL68:
 1088              		.loc 1 1282 43 discriminator 1 view .LVU307
 1089 0024 C01B     		subs	r0, r0, r7
 1090              		.loc 1 1282 25 discriminator 1 view .LVU308
 1091 0026 B042     		cmp	r0, r6
 1092 0028 F1D9     		bls	.L97
 1093              	.L98:
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1094              		.loc 1 1285 9 is_stmt 1 view .LVU309
 1095 002a 6B6D     		ldr	r3, [r5, #84]
 1096 002c 43F00403 		orr	r3, r3, #4
 1097 0030 6B65     		str	r3, [r5, #84]
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 1098              		.loc 1 1288 9 view .LVU310
 1099              		.loc 1 1288 9 view .LVU311
 1100 0032 0023     		movs	r3, #0
 1101 0034 85F85030 		strb	r3, [r5, #80]
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_TIMEOUT;
 1102              		.loc 1 1290 9 view .LVU312
 1103              		.loc 1 1290 16 is_stmt 0 view .LVU313
 1104 0038 0320     		movs	r0, #3
 1105 003a 29E0     		b	.L99
 1106              	.L110:
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   switch(EventType)
 1107              		.loc 1 1296 3 is_stmt 1 view .LVU314
 1108 003c B4F5807F 		cmp	r4, #256
 1109 0040 27D0     		beq	.L101
 1110 0042 0BD8     		bhi	.L102
 1111 0044 022C     		cmp	r4, #2
 1112 0046 1CD0     		beq	.L103
 1113 0048 802C     		cmp	r4, #128
 1114 004a 34D1     		bne	.L105
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* End Of Sampling event */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
ARM GAS  /tmp/ccodtIyF.s 			page 62


1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Analog watchdog (level out of window) event                              */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of Analog Watchdog */
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD/2/3 function.                                    */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For example: "if (HAL_ADC_GetState(hadc1) == HAL_ADC_STATE_AWD) "        */
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*              "if (HAL_ADC_GetState(hadc1) == HAL_ADC_STATE_AWD2)"        */
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*              "if (HAL_ADC_GetState(hadc1) == HAL_ADC_STATE_AWD3)"        */
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD_EVENT:
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1115              		.loc 1 1317 7 view .LVU315
 1116 004c 6A6D     		ldr	r2, [r5, #84]
 1117 004e 42F48032 		orr	r2, r2, #65536
 1118 0052 6A65     		str	r2, [r5, #84]
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 1119              		.loc 1 1320 7 view .LVU316
 1120 0054 8022     		movs	r2, #128
 1121 0056 1A60     		str	r2, [r3]
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
 1122              		.loc 1 1322 7 view .LVU317
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected context queue overflow event */
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
ARM GAS  /tmp/ccodtIyF.s 			page 63


1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Overrun event */
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* considered as an error.                                                */
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* overrun ")                                                             */
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC state */
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to overrun */
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            otherwise, data register  is potentially overwritten by new converted data as soon
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            as OVR is cleared. */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
 1123              		.loc 1 1382 10 is_stmt 0 view .LVU318
 1124 0058 0020     		movs	r0, #0
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1125              		.loc 1 1322 7 view .LVU319
 1126 005a 19E0     		b	.L99
 1127              	.L102:
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1128              		.loc 1 1322 7 view .LVU320
 1129 005c B4F5007F 		cmp	r4, #512
 1130 0060 20D0     		beq	.L106
 1131 0062 B4F5806F 		cmp	r4, #1024
 1132 0066 26D1     		bne	.L105
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1133              		.loc 1 1347 7 is_stmt 1 view .LVU321
 1134 0068 6A6D     		ldr	r2, [r5, #84]
 1135 006a 42F48042 		orr	r2, r2, #16384
 1136 006e 6A65     		str	r2, [r5, #84]
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1137              		.loc 1 1350 7 view .LVU322
 1138 0070 AA6D     		ldr	r2, [r5, #88]
 1139 0072 42F00802 		orr	r2, r2, #8
 1140 0076 AA65     		str	r2, [r5, #88]
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1141              		.loc 1 1353 7 view .LVU323
 1142 0078 4FF48062 		mov	r2, #1024
 1143 007c 1A60     		str	r2, [r3]
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
ARM GAS  /tmp/ccodtIyF.s 			page 64


 1144              		.loc 1 1355 7 view .LVU324
 1145              		.loc 1 1382 10 is_stmt 0 view .LVU325
 1146 007e 0020     		movs	r0, #0
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1147              		.loc 1 1355 7 view .LVU326
 1148 0080 06E0     		b	.L99
 1149              	.L103:
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1150              		.loc 1 1301 7 is_stmt 1 view .LVU327
 1151 0082 6A6D     		ldr	r2, [r5, #84]
 1152 0084 42F40062 		orr	r2, r2, #2048
 1153 0088 6A65     		str	r2, [r5, #84]
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1154              		.loc 1 1304 7 view .LVU328
 1155 008a 0222     		movs	r2, #2
 1156 008c 1A60     		str	r2, [r3]
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1157              		.loc 1 1306 7 view .LVU329
 1158              		.loc 1 1382 10 is_stmt 0 view .LVU330
 1159 008e 0020     		movs	r0, #0
 1160              	.L99:
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1161              		.loc 1 1383 1 view .LVU331
 1162 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1163              	.LVL69:
 1164              	.L101:
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1165              		.loc 1 1327 7 is_stmt 1 view .LVU332
 1166 0092 6A6D     		ldr	r2, [r5, #84]
 1167 0094 42F40032 		orr	r2, r2, #131072
 1168 0098 6A65     		str	r2, [r5, #84]
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1169              		.loc 1 1330 7 view .LVU333
 1170 009a 4FF48072 		mov	r2, #256
 1171 009e 1A60     		str	r2, [r3]
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1172              		.loc 1 1332 7 view .LVU334
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1173              		.loc 1 1382 10 is_stmt 0 view .LVU335
 1174 00a0 0020     		movs	r0, #0
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1175              		.loc 1 1332 7 view .LVU336
 1176 00a2 F5E7     		b	.L99
 1177              	.L106:
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1178              		.loc 1 1337 7 is_stmt 1 view .LVU337
 1179 00a4 6A6D     		ldr	r2, [r5, #84]
 1180 00a6 42F48022 		orr	r2, r2, #262144
 1181 00aa 6A65     		str	r2, [r5, #84]
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1182              		.loc 1 1340 7 view .LVU338
 1183 00ac 4FF40072 		mov	r2, #512
 1184 00b0 1A60     		str	r2, [r3]
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1185              		.loc 1 1342 7 view .LVU339
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1186              		.loc 1 1382 10 is_stmt 0 view .LVU340
ARM GAS  /tmp/ccodtIyF.s 			page 65


 1187 00b2 0020     		movs	r0, #0
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1188              		.loc 1 1342 7 view .LVU341
 1189 00b4 ECE7     		b	.L99
 1190              	.L105:
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1191              		.loc 1 1363 7 is_stmt 1 view .LVU342
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1192              		.loc 1 1363 21 is_stmt 0 view .LVU343
 1193 00b6 2A6B     		ldr	r2, [r5, #48]
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1194              		.loc 1 1363 10 view .LVU344
 1195 00b8 4AB9     		cbnz	r2, .L108
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   
 1196              		.loc 1 1366 9 is_stmt 1 view .LVU345
 1197 00ba 6B6D     		ldr	r3, [r5, #84]
 1198 00bc 43F48063 		orr	r3, r3, #1024
 1199 00c0 6B65     		str	r3, [r5, #84]
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1200              		.loc 1 1369 9 view .LVU346
 1201 00c2 AB6D     		ldr	r3, [r5, #88]
 1202 00c4 43F00203 		orr	r3, r3, #2
 1203 00c8 AB65     		str	r3, [r5, #88]
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1204              		.loc 1 1382 10 is_stmt 0 view .LVU347
 1205 00ca 0020     		movs	r0, #0
 1206 00cc E0E7     		b	.L99
 1207              	.L108:
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1208              		.loc 1 1376 9 is_stmt 1 view .LVU348
 1209 00ce 1022     		movs	r2, #16
 1210 00d0 1A60     		str	r2, [r3]
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1211              		.loc 1 1382 10 is_stmt 0 view .LVU349
 1212 00d2 0020     		movs	r0, #0
 1213 00d4 DCE7     		b	.L99
 1214              		.cfi_endproc
 1215              	.LFE144:
 1217              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1218              		.align	1
 1219              		.global	HAL_ADC_GetValue
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu fpv5-d16
 1225              	HAL_ADC_GetValue:
 1226              	.LVL70:
 1227              	.LFB149:
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** * @brief  Enable ADC, start conversion of regular group with interruption.
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         OVR overrun.
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled(when multimode feature is available):
ARM GAS  /tmp/ccodtIyF.s 			page 66


1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC Master.
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() doesn't enable the End Of Sampling
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         mode), the user must
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP);
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         before calling HAL_ADC_Start_IT().
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* State machine update: Check if an injected conversion is ongoing */
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR|HAL_ADC_ERROR_DMA));
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to none */
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear HAL_ADC_STATE_READY and regular conversion results bits, set HAL_ADC_STATE_REG_BUSY 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, (HAL_ADC_STATE_READY|HAL_ADC_STATE_REG_EOC|HAL_ADC_STATE_REG_O
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - by default if ADC is Master or Independent or if multimode feature is not available
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if MultiMode setting is set to independent mode (no dual regular or injected conversions 
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC12_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
ARM GAS  /tmp/ccodtIyF.s 			page 67


1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* By default, disable all interruptions before enabling the desired ones */
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable required interruptions */
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch(hadc->Init.EOCSelection)
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default:
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If external trigger has been selected, conversion starts at next     */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* trigger event.                                                       */
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)   )
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Multimode feature is not available or ADC Instance is Independent or Master,
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            or is not Slave ADC with dual regular conversions enabled.
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            Then set HAL_ADC_STATE_INJ_BUSY and reset HAL_ADC_STATE_INJ_EOC if JAUTO is set. */
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           switch(hadc->Init.EOCSelection)
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             default:
ARM GAS  /tmp/ccodtIyF.s 			page 68


1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         } /*  if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET) */
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC */
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* hadc is the handle of a Slave ADC with dual regular conversions
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            enabled. Therefore, ADC_CR_ADSTART is NOT set */
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET)
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           switch(hadc->Init.EOCSelection)
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             default:
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }  /* if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET) */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       } /*  if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)   ) */
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }  /*  if (tmp_hal_status == HAL_OK) */
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
ARM GAS  /tmp/ccodtIyF.s 			page 69


1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         (HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY),
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  pData: Destination Buffer address.
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  Length: Length of data to be transferred from ADC peripheral to memory (in bytes)
ARM GAS  /tmp/ccodtIyF.s 			page 70


1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Ensure that dual regular conversions are not enabled or unavailable.   */
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET)
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable the ADC peripheral */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* State machine update: Check if an injected conversion is ongoing */
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to none */
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear HAL_ADC_STATE_READY and regular conversion results bits, set HAL_ADC_STATE_REG_BUS
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HA
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            - by default if ADC is Master or Independent or if multimode feature is not available
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            - if multimode setting is set to independent mode (no dual regular or injected conversio
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (ADC12_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA error callback */
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
ARM GAS  /tmp/ccodtIyF.s 			page 71


1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* operations)                                                        */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            ADC_IT_OVR is enabled.  */
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start the DMA channel */
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* trigger event.                                                       */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }  /* if (tmp_hal_status == HAL_OK) */
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     } /* if (ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET) */
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC peripheral.
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC peripheral disable is forcing stop of potential
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
ARM GAS  /tmp/ccodtIyF.s 			page 72


1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMNGT is kept) */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0 |ADC_CFGR_DMNGT_1, 0);
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if DMA channel effectively disabled */
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status != HAL_OK)
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* memory a potential failing status.                                     */
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_Disable(hadc);
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         (HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY),
ARM GAS  /tmp/ccodtIyF.s 			page 73


1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            to flag EOC.
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To clear this flag, either use function:
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC group regular conversion data
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1228              		.loc 1 1825 1 is_stmt 1 view -0
 1229              		.cfi_startproc
 1230              		@ args = 0, pretend = 0, frame = 0
 1231              		@ frame_needed = 0, uses_anonymous_args = 0
 1232              		@ link register save eliminated.
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1233              		.loc 1 1827 3 view .LVU351
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return ADC converted value */
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->Instance->DR;
 1234              		.loc 1 1833 3 view .LVU352
 1235              		.loc 1 1833 14 is_stmt 0 view .LVU353
 1236 0000 0368     		ldr	r3, [r0]
 1237              		.loc 1 1833 24 view .LVU354
 1238 0002 186C     		ldr	r0, [r3, #64]
 1239              	.LVL71:
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1240              		.loc 1 1834 1 view .LVU355
 1241 0004 7047     		bx	lr
ARM GAS  /tmp/ccodtIyF.s 			page 74


 1242              		.cfi_endproc
 1243              	.LFE149:
 1245              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1246              		.align	1
 1247              		.weak	HAL_ADC_ConvCpltCallback
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1251              		.fpu fpv5-d16
 1253              	HAL_ADC_ConvCpltCallback:
 1254              	.LVL72:
 1255              	.LFB151:
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0; /* flag set if overrun occurrence has to be considered as an error */
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_isr      = hadc->Instance->ISR;
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier      = hadc->Instance->IER;
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr     = 0x0;
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr_jqm = 0x0;
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ====== Check End of Sampling flag for regular group ===== */
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* End Of Sampling callback */
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear regular group conversion flag */
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP );
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ====== Check End of Conversion or Sequence flags for regular group ===== */
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if( (((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  /tmp/ccodtIyF.s 			page 75


1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by regular      */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* external trigger or by continuous mode,                                */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* and if scan sequence if completed.                                     */
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc))
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                                */
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Note: if Overrun interrupt was enabled with EOC or EOS interrupt */
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* in HAL_Start_IT(), it isn't disabled here because it can be used */
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* by overrun IRQ process below.                                    */
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Clear HAL_ADC_STATE_REG_BUSY bit */
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* If no injected conversion on-going, set HAL_ADC_STATE_READY bit */
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Change ADC state to error state */
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC error code to ADC IP internal error */
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       } /* if (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT) */
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     } /* if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   */
ARM GAS  /tmp/ccodtIyF.s 			page 76


1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Conversion complete callback */
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note:  HAL_ADC_ConvCpltCallback can resort to
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) or
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOC)) to determine whether
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               sequence.    */
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear regular group conversion flag */
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check End of Conversion flag for injected group ========== */
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if( (((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check whether interruptions can be disabled only if
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - injected conversions are software-triggered when injected queue management is disabled
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         OR
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - auto-injection is enabled, continuous mode is disabled (CONT = 0)
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           and regular conversions are software-triggered */
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If End of Sequence is reached, disable interrupts */
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* First, retrieve proper registers to check */
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* 1a. Are injected conversions that of a dual Slave ? */
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEINJECTED_SLAVE(hadc))
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* hadc is not the handle of a Slave ADC with dual injected conversions enabled:
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            check JQM bit directly in ADC CFGR register */
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr_jqm = READ_REG(hadc->Instance->CFGR);
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* hadc is the handle of a Slave ADC with dual injected conversions enabled:
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            need to check JQM bit of Master ADC CFGR register */
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr_jqm = READ_REG(tmpADC_Master->CFGR);
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* 1b. Is hadc the handle of a Slave ADC with regular conversions enabled? */
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* hadc is not the handle of a Slave ADC with dual regular conversions enabled:
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            check JAUTO and CONT bits directly in ADC CFGR register */
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
ARM GAS  /tmp/ccodtIyF.s 			page 77


1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* hadc is not the handle of a Slave ADC with dual regular conversions enabled:
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            check JAUTO and CONT bits of Master ADC CFGR register */
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc);
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Secondly, check whether JEOC and JEOS interruptions can be disabled */
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((ADC_IS_SOFTWARE_START_INJECTED(hadc) && (READ_BIT(tmp_cfgr_jqm, ADC_CFGR_JQM) != ADC_CFG
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            && (!((READ_BIT(tmp_cfgr, (ADC_CFGR_JAUTO|ADC_CFGR_CONT)) == (ADC_CFGR_JAUTO|ADC_CFGR_CO
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (ADC_IS_SOFTWARE_START_REGULAR(hadc))))    )
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit         */
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* JADSTART==0 (no conversion on going)                               */
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Disable ADC end of sequence conversion interrupt  */
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Clear HAL_ADC_STATE_INJ_BUSY bit */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If no regular conversion on-going, set HAL_ADC_STATE_READY bit */
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Change ADC state to error state */
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     } /* if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS)) */
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected Conversion complete callback */
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               sequence.    */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear injected group conversion flag */
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Analog watchdog flag =================================================== */
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
ARM GAS  /tmp/ccodtIyF.s 			page 78


2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 1 callback */
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Analog watchdog 2 flag ========== */
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 2 callback */
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Analog watchdog 3 flag ========== */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 3 callback */
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* overrun ")                                                             */
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* error.                                                                 */
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       overrun_error = 1;
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Pointer to the common control register */
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((hadc->Instance == ADC1) || (hadc->Instance == ADC2))
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Pointer to the common control register                                 */
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
ARM GAS  /tmp/ccodtIyF.s 			page 79


2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Pointer to the common control register                                 */
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Common = ADC3_COMMON_REGISTER(hadc);
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* check DMA configuration, depending on MultiMode set or not */
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL) == ADC_MODE_INDEPENDENT)
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0))
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           overrun_error = 1;
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* MultiMode is enabled, Common Control Register DAMDF bits must be checked */
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF) != RESET)
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           overrun_error = 1;
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (overrun_error == 1)
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Change ADC state to error state */
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to overrun */
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Error callback */
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear the Overrun flag, to be done AFTER HAL_ADC_ErrorCallback() since
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        old data is preserved until OVR is reset */
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Change ADC state to overrun state */
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Error callback */
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
ARM GAS  /tmp/ccodtIyF.s 			page 80


2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1256              		.loc 1 2172 1 is_stmt 1 view -0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 1261              		.loc 1 2174 3 view .LVU357
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1262              		.loc 1 2179 1 is_stmt 0 view .LVU358
 1263 0000 7047     		bx	lr
 1264              		.cfi_endproc
 1265              	.LFE151:
 1267              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1268              		.align	1
 1269              		.weak	HAL_ADC_ConvHalfCpltCallback
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1273              		.fpu fpv5-d16
 1275              	HAL_ADC_ConvHalfCpltCallback:
 1276              	.LVL73:
 1277              	.LFB152:
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1278              		.loc 1 2187 1 is_stmt 1 view -0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		@ link register save eliminated.
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 1283              		.loc 1 2189 3 view .LVU360
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1284              		.loc 1 2194 1 is_stmt 0 view .LVU361
ARM GAS  /tmp/ccodtIyF.s 			page 81


 1285 0000 7047     		bx	lr
 1286              		.cfi_endproc
 1287              	.LFE152:
 1289              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1290              		.align	1
 1291              		.global	ADC_DMAHalfConvCplt
 1292              		.syntax unified
 1293              		.thumb
 1294              		.thumb_func
 1295              		.fpu fpv5-d16
 1297              	ADC_DMAHalfConvCplt:
 1298              	.LVL74:
 1299              	.LFB163:
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    Peripheral Control functions
ARM GAS  /tmp/ccodtIyF.s 			page 82


2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              ##### Peripheral Control functions #####
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..] This section provides functions allowing to:
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Configure channels on regular group
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Configure the analog watchdog
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         These internal paths can be disabled using function
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         without resetting the ADC.
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  sConfig: Structure of ADC channel assigned to ADC group regular.
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check offset range according to oversampling setting */
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset/(hadc->Init.Oversampling.Ra
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification of channel number */
ARM GAS  /tmp/ccodtIyF.s 			page 83


2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      assert_param(IS_ADC_CHANNEL(sConfig->Channel));
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_DIFF_CHANNEL(sConfig->Channel));
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (hadc->Instance == ADC1)
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC1_DIFF_CHANNEL(sConfig->Channel));
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC2_DIFF_CHANNEL(sConfig->Channel));
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Channel number                                                        */
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Channel rank                                                          */
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Preselection of ADC inputs                                            */
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC channels preselction */
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->Instance->PCSEL |= (1U << sConfig->Channel);
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Regular sequence configuration */
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear the old SQx bits then set the new ones for the selected rank */
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For Rank 1 to 4 */
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (sConfig->Rank < 5)
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1,
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank),
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR1_RK(sConfig->Channel, sConfig->Rank));
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For Rank 5 to 9 */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (sConfig->Rank < 10)
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR2,
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank),
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR2_RK(sConfig->Channel, sConfig->Rank));
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For Rank 10 to 14 */
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (sConfig->Rank < 15)
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR3,
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank),
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR3_RK(sConfig->Channel, sConfig->Rank));
ARM GAS  /tmp/ccodtIyF.s 			page 84


2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For Rank 15 to 16 */
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR4,
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank),
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR4_RK(sConfig->Channel, sConfig->Rank));
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Channel offset                                                        */
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Channel sampling time configuration */
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear the old sample time then set the new one for the selected channel */
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* For channels 10 to 18 */
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (sConfig->Channel >= ADC_CHANNEL_10)
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->SMPR2,
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel),
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel));
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else /* For channels 0 to 9 */
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->SMPR1,
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel),
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel));
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value, Signed saturation feat
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution. */
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 15, the LSB (right bits) are set to 0 */
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfig->Offset);
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (sConfig->OffsetNumber)
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          /* Configure offset register i when applicable:                         */
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          /* - Enable offset                                                      */
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          /* - Set channel number                                                 */
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          /* - Set offset value                                                   */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          /* - Set Right shift after offset application                           */
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_OFFSET_1:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            MODIFY_REG(hadc->Instance->OFR1,
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT1, sConfig->OffsetRightShift);
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            /* Enable or disable the signed saturation bit */
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            if(sConfig->OffsetSignedSaturation != DISABLE)
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
ARM GAS  /tmp/ccodtIyF.s 			page 85


2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            else
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_OFFSET_2:
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->OFR2,
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT2, (sConfig->OffsetRightShift)<<1);
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable or disable the signed saturation bit */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            if(sConfig->OffsetSignedSaturation != DISABLE)
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            else
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_OFFSET_3:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->OFR3,
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT3, (sConfig->OffsetRightShift)<<2);
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable or disable the signed saturation bit */
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            if(sConfig->OffsetSignedSaturation != DISABLE)
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            else
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_OFFSET_4:
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->OFR4,
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_RSHIFT4, (sConfig->OffsetRightShift)<<3);
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable or disable the signed saturation bit */
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if(sConfig->OffsetSignedSaturation != DISABLE)
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Case ADC_OFFSET_NONE */
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default :
ARM GAS  /tmp/ccodtIyF.s 			page 86


2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            If this is the case, offset OFRx is disabled since
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            sConfig->OffsetNumber = ADC_OFFSET_NONE. */
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }  /*  switch (sConfig->OffsetNumber) */
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }  /* if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET) */
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_IS_ENABLE(hadc) == RESET)
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of differential mode */
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Disable differential mode (default mode: single-ended) */
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable differential mode */
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Sampling time configuration of channel ADC_IN+1 (negative input)     */
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear the old sample time then set the new one for the selected      */
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* channel.                                                             */
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* For channels 9 to 15 (ADC1, ADC2) or to 11 (ADC3), SMPR2 register
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            must be configured */
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (sConfig->Channel >= ADC_CHANNEL_9)
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->SMPR2,
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1),
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel +1));
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else /* For channels 0 to 8, SMPR1 must be configured */
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->SMPR1,
ARM GAS  /tmp/ccodtIyF.s 			page 87


2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1),
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel +1));
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  paths.                                                                */
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using           */
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* HAL_ADC_DeInit().                                                      */
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of common ADC parameters                                 */
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((hadc->Instance == ADC1) || (hadc->Instance == ADC2))
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Pointer to the common control register                                 */
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Common = ADC12_COMMON_REGISTER(hadc);
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Pointer to the common control register                                 */
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Common = ADC3_COMMON_REGISTER(hadc);
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled,   */
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* bypass the configuration processing.                                   */
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (( (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VBAT_DIV4)       &&
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configuration of common ADC parameters (continuation)                */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Software is allowed to change common parameters only when all ADCs   */
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* of the common group are disabled.                                    */
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((ADC_IS_ENABLE(hadc) == RESET)   &&
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable Temperature sensor measurement path (channel 18)            */
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Note: Temp. sensor internal channels available on ADC3    */
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((hadc->Instance == ADC3)))
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Wait loop initialization and execution */
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Note: Variable divided by 2 to compensate partially          */
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /*       CPU processing cycles.                                 */
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / (1000000 * 2)));
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             while(wait_loop_index != 0)
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               wait_loop_index--;
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If Channel 18 is selected, enable VBAT measurement path.           */
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Note: VBAT internal internal channels available on ADC1 and ADC3   */
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VBAT_DIV4) && ((hadc->Instance == ADC3)))
ARM GAS  /tmp/ccodtIyF.s 			page 88


2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If Channel 19 is selected, enable VREFINT measurement path          */
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Note: VBAT internal internal channels available on ADC1 only       */
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && (hadc->Instance == ADC3))
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If the requested internal measurement path has already been          */
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* enabled and other ADC of the common group are enabled, internal      */
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* measurement paths cannot be enabled.                                 */
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmp_hal_status = HAL_ERROR;
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     } /* if (ADC_IS_ENABLE(hadc) == RESET) */
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   } /* if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) */
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* parameters.                                                              */
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the ADC.
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         is on going.
ARM GAS  /tmp/ccodtIyF.s 			page 89


2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpADCFlagAWD2orAWD3;
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpADCITAWD2orAWD3;
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verify if threshold is within the selected ADC resolution */
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check threshold range according to oversampling setting */
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold/(hadc->Init.
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold/(hadc->Init.O
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* conversion on going on regular and injected groups:                      */
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
ARM GAS  /tmp/ccodtIyF.s 			page 90


2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Analog watchdogs configuration */
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: regular and/or injected      */
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    groups, one or overall group of channels.                         */
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - Set the Analog watchdog channel (is not used if watchdog          */
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                         */
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR,  ADC_CFGR_WD_FIELDS,
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             AnalogWDGConfig->WatchdogMode | ADC_CFGR_SET_AWD1CH(AnalogWDGConfig->Channel) );
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution:        */
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 15, the LSB (right bits)   */
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* are set to 0                                                         */
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      /* Set the high and low thresholds */
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->LTR1,  ADC_LTR2_LT2 , tmpAWDLowThresholdShifted);
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR2_HT2 , tmpAWDHighThresholdShifted);
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear the ADC Analog watchdog flag (in case left enabled by          */
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* or HAL_ADC_PollForEvent().                                           */
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_IT_AWD1);
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure ADC Analog watchdog interrupt */
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable the ADC Analog watchdog interrupt */
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD1);
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Disable the ADC Analog watchdog interrupt */
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD1);
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Shift the threshold with respect to the selected ADC resolution         */
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* have to be left-aligned on bit 15, the LSB (right bits) are set to 0    */
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* enables the watchdog.                                              */
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Conditional register reset, because several channels can be  */
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*       set by successive calls of this function.                    */
ARM GAS  /tmp/ccodtIyF.s 			page 91


2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE)
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->Instance->AWD2CR, ADC_CFGR_SET_AWD23CR(AnalogWDGConfig->Channel));
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->Instance->AWD2CR,  ADC_AWD2CR_AWD2CH);
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the high and low thresholds */
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR2_HT2, tmpAWDHighThresholdShifted);
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR2,  ADC_LTR2_LT2, tmpAWDLowThresholdShifted);
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* settings.                                                          */
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD2;
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* enables the watchdog.                                              */
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Conditional register reset, because several channels can be  */
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*       set by successive calls of this function.                    */
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE)
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->Instance->AWD3CR, ADC_CFGR_SET_AWD23CR(AnalogWDGConfig->Channel));
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->Instance->AWD3CR,  ADC_AWD3CR_AWD3CH);
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the high and low thresholds */
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR3_HT3, tmpAWDHighThresholdShifted);
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR3,  ADC_LTR3_LT3, tmpAWDLowThresholdShifted);
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* settings.                                                          */
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD3;
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear the ADC Analog watchdog flag (in case left enabled by          */
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* or HAL_ADC_PollForEvent().                                           */
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, tmpADCFlagAWD2orAWD3);
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure ADC Analog watchdog interrupt */
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
ARM GAS  /tmp/ccodtIyF.s 			page 92


2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, tmpADCITAWD2orAWD3);
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, tmpADCITAWD2orAWD3);
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If a conversion is on going on regular or injected groups, no update     */
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief   ADC Peripheral State functions
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..] This subsection provides functions to get in run-time the status of the
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     peripheral.
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Check the ADC state
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Check the ADC error code
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Return the ADC handle state.
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         compared with states bits.
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For example:
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_REG_BUSY)) "
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)    ) "
ARM GAS  /tmp/ccodtIyF.s 			page 93


2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return ADC Handle state */
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->State;
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Return the ADC error code.
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->ErrorCode;
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  ConversionGroup: ADC group regular and/or injected.
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          This parameter can be one of the following values:
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg ADC_REGULAR_GROUP           ADC regular conversion type.
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg ADC_INJECTED_GROUP          ADC injected conversion type.
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup)
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0;
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0;
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 94


2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc))
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* auto-delay mode.                                                       */
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (see reference manual).                                                */
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          && (hadc->Init.ContinuousConvMode==ENABLE)
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          && (hadc->Init.LowPowerAutoWait==ENABLE))
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Use stop of regular group */
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ConversionGroup = ADC_REGULAR_GROUP;
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == RESET)
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES *4))
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear JEOS */
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ConversionGroup != ADC_INJECTED_GROUP)
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) &&
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Stop conversions on regular group */
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTP);
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Stop potential conversion on going on injected group */
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ConversionGroup != ADC_REGULAR_GROUP)
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_JADSTART) &&
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Stop conversions on injected group */
ARM GAS  /tmp/ccodtIyF.s 			page 95


2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTP);
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch(ConversionGroup)
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != RESET)
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((HAL_GetTick()-tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to error */
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   } /* if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc)) */
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 96


3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       return HAL_ERROR;
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_ENABLE(hadc);
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           calibration logic.
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           4 ADC clock cycle duration */
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_ENABLE(hadc);
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((HAL_GetTick()-tickstart) > ADC_ENABLE_TIMEOUT)
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to error */
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         stopped.
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc: ADC handle
ARM GAS  /tmp/ccodtIyF.s 			page 97


3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* disabled.                                                                */
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET )
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Disable the ADC peripheral */
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_DISABLE(hadc);
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       return HAL_ERROR;
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get tick count */
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if((HAL_GetTick()-tickstart) > ADC_DISABLE_TIMEOUT)
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to error */
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
ARM GAS  /tmp/ccodtIyF.s 			page 98


3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, (HAL_ADC_STATE_ERROR_INTERNAL|HAL_ADC_STATE_ERROR_DMA)))
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine */
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->Instance->ISR, ADC_FLAG_EOS))
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc))
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Is CONT bit set ? */
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == RESET)
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT) == RESET)
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Conversion complete callback */
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* DMA or internal error occured (or both) */
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* In case of internal error, */
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* call Error Callback function */
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 99


3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1300              		.loc 1 3217 1 is_stmt 1 view -0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		.loc 1 3217 1 is_stmt 0 view .LVU363
 1305 0000 08B5     		push	{r3, lr}
 1306              	.LCFI6:
 1307              		.cfi_def_cfa_offset 8
 1308              		.cfi_offset 3, -8
 1309              		.cfi_offset 14, -4
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1310              		.loc 1 3219 3 is_stmt 1 view .LVU364
 1311              	.LVL75:
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Half conversion callback */
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1312              		.loc 1 3222 3 view .LVU365
 1313 0002 806B     		ldr	r0, [r0, #56]
 1314              	.LVL76:
 1315              		.loc 1 3222 3 is_stmt 0 view .LVU366
 1316 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1317              	.LVL77:
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1318              		.loc 1 3223 1 view .LVU367
 1319 0008 08BD     		pop	{r3, pc}
 1320              		.cfi_endproc
 1321              	.LFE163:
 1323              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1324              		.align	1
 1325              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1329              		.fpu fpv5-d16
 1331              	HAL_ADC_LevelOutOfWindowCallback:
 1332              	.LVL78:
 1333              	.LFB153:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1334              		.loc 1 2202 1 is_stmt 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1339              		.loc 1 2204 3 view .LVU369
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 100


 1340              		.loc 1 2209 1 is_stmt 0 view .LVU370
 1341 0000 7047     		bx	lr
 1342              		.cfi_endproc
 1343              	.LFE153:
 1345              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1346              		.align	1
 1347              		.weak	HAL_ADC_ErrorCallback
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1351              		.fpu fpv5-d16
 1353              	HAL_ADC_ErrorCallback:
 1354              	.LVL79:
 1355              	.LFB154:
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1356              		.loc 1 2224 1 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              		@ link register save eliminated.
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1361              		.loc 1 2226 3 view .LVU372
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1362              		.loc 1 2231 1 is_stmt 0 view .LVU373
 1363 0000 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE154:
 1367              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1368              		.align	1
 1369              		.global	HAL_ADC_IRQHandler
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
 1373              		.fpu fpv5-d16
 1375              	HAL_ADC_IRQHandler:
 1376              	.LVL80:
 1377              	.LFB150:
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0; /* flag set if overrun occurrence has to be considered as an error */
 1378              		.loc 1 1843 1 is_stmt 1 view -0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0; /* flag set if overrun occurrence has to be considered as an error */
 1382              		.loc 1 1843 1 is_stmt 0 view .LVU375
 1383 0000 70B5     		push	{r4, r5, r6, lr}
 1384              	.LCFI7:
 1385              		.cfi_def_cfa_offset 16
 1386              		.cfi_offset 4, -16
 1387              		.cfi_offset 5, -12
 1388              		.cfi_offset 6, -8
 1389              		.cfi_offset 14, -4
 1390 0002 0446     		mov	r4, r0
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 1391              		.loc 1 1844 3 is_stmt 1 view .LVU376
 1392              	.LVL81:
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
 1393              		.loc 1 1845 3 view .LVU377
ARM GAS  /tmp/ccodtIyF.s 			page 101


1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_isr      = hadc->Instance->ISR;
 1394              		.loc 1 1846 3 view .LVU378
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier      = hadc->Instance->IER;
 1395              		.loc 1 1847 3 view .LVU379
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier      = hadc->Instance->IER;
 1396              		.loc 1 1847 31 is_stmt 0 view .LVU380
 1397 0004 0368     		ldr	r3, [r0]
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier      = hadc->Instance->IER;
 1398              		.loc 1 1847 12 view .LVU381
 1399 0006 1D68     		ldr	r5, [r3]
 1400              	.LVL82:
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr     = 0x0;
 1401              		.loc 1 1848 3 is_stmt 1 view .LVU382
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr     = 0x0;
 1402              		.loc 1 1848 12 is_stmt 0 view .LVU383
 1403 0008 5E68     		ldr	r6, [r3, #4]
 1404              	.LVL83:
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr_jqm = 0x0;
 1405              		.loc 1 1849 3 is_stmt 1 view .LVU384
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1406              		.loc 1 1850 3 view .LVU385
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1407              		.loc 1 1854 3 view .LVU386
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1408              		.loc 1 1855 3 view .LVU387
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1409              		.loc 1 1859 3 view .LVU388
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1410              		.loc 1 1859 6 is_stmt 0 view .LVU389
 1411 000a 15F0020F 		tst	r5, #2
 1412 000e 10D0     		beq	.L119
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1413              		.loc 1 1859 54 discriminator 1 view .LVU390
 1414 0010 16F0020F 		tst	r6, #2
 1415 0014 0DD0     		beq	.L119
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1416              		.loc 1 1862 5 is_stmt 1 view .LVU391
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1417              		.loc 1 1862 9 is_stmt 0 view .LVU392
 1418 0016 436D     		ldr	r3, [r0, #84]
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1419              		.loc 1 1862 8 view .LVU393
 1420 0018 13F0100F 		tst	r3, #16
 1421 001c 03D1     		bne	.L120
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1422              		.loc 1 1865 7 is_stmt 1 view .LVU394
 1423 001e 436D     		ldr	r3, [r0, #84]
 1424 0020 43F40063 		orr	r3, r3, #2048
 1425 0024 4365     		str	r3, [r0, #84]
 1426              	.L120:
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1427              		.loc 1 1869 5 view .LVU395
 1428 0026 2046     		mov	r0, r4
 1429              	.LVL84:
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1430              		.loc 1 1869 5 is_stmt 0 view .LVU396
 1431 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
ARM GAS  /tmp/ccodtIyF.s 			page 102


 1432              	.LVL85:
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1433              		.loc 1 1872 5 is_stmt 1 view .LVU397
 1434 002c 2368     		ldr	r3, [r4]
 1435 002e 0222     		movs	r2, #2
 1436 0030 1A60     		str	r2, [r3]
 1437              	.L119:
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1438              		.loc 1 1876 3 view .LVU398
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1439              		.loc 1 1876 5 is_stmt 0 view .LVU399
 1440 0032 15F0040F 		tst	r5, #4
 1441 0036 02D0     		beq	.L121
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1442              		.loc 1 1876 51 discriminator 1 view .LVU400
 1443 0038 16F0040F 		tst	r6, #4
 1444 003c 05D1     		bne	.L122
 1445              	.L121:
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1446              		.loc 1 1876 94 discriminator 3 view .LVU401
 1447 003e 15F0080F 		tst	r5, #8
 1448 0042 57D0     		beq	.L123
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1449              		.loc 1 1877 51 view .LVU402
 1450 0044 16F0080F 		tst	r6, #8
 1451 0048 54D0     		beq	.L123
 1452              	.L122:
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1453              		.loc 1 1880 5 is_stmt 1 view .LVU403
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1454              		.loc 1 1880 9 is_stmt 0 view .LVU404
 1455 004a 636D     		ldr	r3, [r4, #84]
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1456              		.loc 1 1880 8 view .LVU405
 1457 004c 13F0100F 		tst	r3, #16
 1458 0050 03D1     		bne	.L124
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1459              		.loc 1 1883 7 is_stmt 1 view .LVU406
 1460 0052 636D     		ldr	r3, [r4, #84]
 1461 0054 43F40073 		orr	r3, r3, #512
 1462 0058 6365     		str	r3, [r4, #84]
 1463              	.L124:
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1464              		.loc 1 1889 5 view .LVU407
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1465              		.loc 1 1889 8 is_stmt 0 view .LVU408
 1466 005a 2368     		ldr	r3, [r4]
 1467 005c DA68     		ldr	r2, [r3, #12]
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1468              		.loc 1 1889 7 view .LVU409
 1469 005e 12F4406F 		tst	r2, #3072
 1470 0062 41D1     		bne	.L125
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1471              		.loc 1 1891 7 is_stmt 1 view .LVU410
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1472              		.loc 1 1891 10 is_stmt 0 view .LVU411
 1473 0064 A049     		ldr	r1, .L159
ARM GAS  /tmp/ccodtIyF.s 			page 103


 1474 0066 A14A     		ldr	r2, .L159+4
 1475 0068 9342     		cmp	r3, r2
 1476 006a 18BF     		it	ne
 1477 006c 8B42     		cmpne	r3, r1
 1478 006e 16D0     		beq	.L126
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1479              		.loc 1 1891 11 discriminator 1 view .LVU412
 1480 0070 02F16842 		add	r2, r2, #-402653184
 1481 0074 A2F57452 		sub	r2, r2, #15616
 1482 0078 9268     		ldr	r2, [r2, #8]
 1483 007a 12F01F0F 		tst	r2, #31
 1484 007e 0ED0     		beq	.L126
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1485              		.loc 1 1891 11 discriminator 2 view .LVU413
 1486 0080 9B4A     		ldr	r2, .L159+8
 1487 0082 9268     		ldr	r2, [r2, #8]
 1488 0084 02F01F02 		and	r2, r2, #31
 1489 0088 052A     		cmp	r2, #5
 1490 008a 08D0     		beq	.L126
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1491              		.loc 1 1891 11 discriminator 3 view .LVU414
 1492 008c 984A     		ldr	r2, .L159+8
 1493 008e 9268     		ldr	r2, [r2, #8]
 1494 0090 02F01F02 		and	r2, r2, #31
 1495 0094 092A     		cmp	r2, #9
 1496 0096 02D0     		beq	.L126
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1497              		.loc 1 1899 9 is_stmt 1 discriminator 4 view .LVU415
 1498              	.LVL86:
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1499              		.loc 1 1900 9 discriminator 4 view .LVU416
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1500              		.loc 1 1900 18 is_stmt 0 discriminator 4 view .LVU417
 1501 0098 934A     		ldr	r2, .L159
 1502 009a D268     		ldr	r2, [r2, #12]
 1503              	.LVL87:
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1504              		.loc 1 1900 18 discriminator 4 view .LVU418
 1505 009c 00E0     		b	.L128
 1506              	.LVL88:
 1507              	.L126:
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1508              		.loc 1 1894 9 is_stmt 1 view .LVU419
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1509              		.loc 1 1894 18 is_stmt 0 view .LVU420
 1510 009e DA68     		ldr	r2, [r3, #12]
 1511              	.LVL89:
 1512              	.L128:
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1513              		.loc 1 1904 7 is_stmt 1 view .LVU421
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1514              		.loc 1 1904 10 is_stmt 0 view .LVU422
 1515 00a0 12F4005F 		tst	r2, #8192
 1516 00a4 20D1     		bne	.L125
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1517              		.loc 1 1907 9 is_stmt 1 view .LVU423
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  /tmp/ccodtIyF.s 			page 104


 1518              		.loc 1 1907 13 is_stmt 0 view .LVU424
 1519 00a6 1A68     		ldr	r2, [r3]
 1520              	.LVL90:
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1521              		.loc 1 1907 11 view .LVU425
 1522 00a8 12F0080F 		tst	r2, #8
 1523 00ac 1CD0     		beq	.L125
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1524              		.loc 1 1911 11 is_stmt 1 view .LVU426
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1525              		.loc 1 1911 15 is_stmt 0 view .LVU427
 1526 00ae 9A68     		ldr	r2, [r3, #8]
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1527              		.loc 1 1911 14 view .LVU428
 1528 00b0 12F0040F 		tst	r2, #4
 1529 00b4 10D1     		bne	.L129
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Clear HAL_ADC_STATE_REG_BUSY bit */
 1530              		.loc 1 1917 13 is_stmt 1 view .LVU429
 1531 00b6 5A68     		ldr	r2, [r3, #4]
 1532 00b8 22F00C02 		bic	r2, r2, #12
 1533 00bc 5A60     		str	r2, [r3, #4]
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* If no injected conversion on-going, set HAL_ADC_STATE_READY bit */
 1534              		.loc 1 1919 13 view .LVU430
 1535 00be 636D     		ldr	r3, [r4, #84]
 1536 00c0 23F48073 		bic	r3, r3, #256
 1537 00c4 6365     		str	r3, [r4, #84]
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1538              		.loc 1 1921 13 view .LVU431
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1539              		.loc 1 1921 17 is_stmt 0 view .LVU432
 1540 00c6 636D     		ldr	r3, [r4, #84]
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1541              		.loc 1 1921 16 view .LVU433
 1542 00c8 13F4805F 		tst	r3, #4096
 1543 00cc 0CD1     		bne	.L125
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 1544              		.loc 1 1923 15 is_stmt 1 view .LVU434
 1545 00ce 636D     		ldr	r3, [r4, #84]
 1546 00d0 43F00103 		orr	r3, r3, #1
 1547 00d4 6365     		str	r3, [r4, #84]
 1548 00d6 07E0     		b	.L125
 1549              	.L129:
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1550              		.loc 1 1929 13 view .LVU435
 1551 00d8 636D     		ldr	r3, [r4, #84]
 1552 00da 43F01003 		orr	r3, r3, #16
 1553 00de 6365     		str	r3, [r4, #84]
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1554              		.loc 1 1932 13 view .LVU436
 1555 00e0 A36D     		ldr	r3, [r4, #88]
 1556 00e2 43F00103 		orr	r3, r3, #1
 1557 00e6 A365     		str	r3, [r4, #88]
 1558              	.L125:
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1559              		.loc 1 1944 5 view .LVU437
 1560 00e8 2046     		mov	r0, r4
 1561 00ea FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
ARM GAS  /tmp/ccodtIyF.s 			page 105


 1562              	.LVL91:
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1563              		.loc 1 1948 5 view .LVU438
 1564 00ee 2368     		ldr	r3, [r4]
 1565 00f0 0C22     		movs	r2, #12
 1566 00f2 1A60     		str	r2, [r3]
 1567              	.L123:
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1568              		.loc 1 1953 3 view .LVU439
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1569              		.loc 1 1953 5 is_stmt 0 view .LVU440
 1570 00f4 15F0200F 		tst	r5, #32
 1571 00f8 02D0     		beq	.L130
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1572              		.loc 1 1953 53 discriminator 1 view .LVU441
 1573 00fa 16F0200F 		tst	r6, #32
 1574 00fe 05D1     		bne	.L131
 1575              	.L130:
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1576              		.loc 1 1953 98 discriminator 3 view .LVU442
 1577 0100 15F0400F 		tst	r5, #64
 1578 0104 76D0     		beq	.L132
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1579              		.loc 1 1954 53 view .LVU443
 1580 0106 16F0400F 		tst	r6, #64
 1581 010a 73D0     		beq	.L132
 1582              	.L131:
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1583              		.loc 1 1957 5 is_stmt 1 view .LVU444
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1584              		.loc 1 1957 9 is_stmt 0 view .LVU445
 1585 010c 636D     		ldr	r3, [r4, #84]
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1586              		.loc 1 1957 8 view .LVU446
 1587 010e 13F0100F 		tst	r3, #16
 1588 0112 03D1     		bne	.L133
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1589              		.loc 1 1960 7 is_stmt 1 view .LVU447
 1590 0114 636D     		ldr	r3, [r4, #84]
 1591 0116 43F40053 		orr	r3, r3, #8192
 1592 011a 6365     		str	r3, [r4, #84]
 1593              	.L133:
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1594              		.loc 1 1970 5 view .LVU448
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1595              		.loc 1 1970 9 is_stmt 0 view .LVU449
 1596 011c 2368     		ldr	r3, [r4]
 1597 011e 1A68     		ldr	r2, [r3]
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1598              		.loc 1 1970 7 view .LVU450
 1599 0120 12F0400F 		tst	r2, #64
 1600 0124 60D0     		beq	.L134
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1601              		.loc 1 1975 7 is_stmt 1 view .LVU451
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1602              		.loc 1 1975 11 is_stmt 0 view .LVU452
 1603 0126 7049     		ldr	r1, .L159
ARM GAS  /tmp/ccodtIyF.s 			page 106


 1604 0128 704A     		ldr	r2, .L159+4
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1605              		.loc 1 1975 10 view .LVU453
 1606 012a 9342     		cmp	r3, r2
 1607 012c 18BF     		it	ne
 1608 012e 8B42     		cmpne	r3, r1
 1609 0130 0CBF     		ite	eq
 1610 0132 0122     		moveq	r2, #1
 1611 0134 0022     		movne	r2, #0
 1612 0136 14D0     		beq	.L135
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1613              		.loc 1 1975 11 discriminator 1 view .LVU454
 1614 0138 01F54071 		add	r1, r1, #768
 1615 013c 8968     		ldr	r1, [r1, #8]
 1616 013e 11F01F0F 		tst	r1, #31
 1617 0142 0ED0     		beq	.L135
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1618              		.loc 1 1975 11 discriminator 2 view .LVU455
 1619 0144 6A49     		ldr	r1, .L159+8
 1620 0146 8968     		ldr	r1, [r1, #8]
 1621 0148 01F01F01 		and	r1, r1, #31
 1622 014c 0629     		cmp	r1, #6
 1623 014e 08D0     		beq	.L135
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1624              		.loc 1 1975 11 discriminator 3 view .LVU456
 1625 0150 6749     		ldr	r1, .L159+8
 1626 0152 8968     		ldr	r1, [r1, #8]
 1627 0154 01F01F01 		and	r1, r1, #31
 1628 0158 0729     		cmp	r1, #7
 1629 015a 02D0     		beq	.L135
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr_jqm = READ_REG(tmpADC_Master->CFGR);
 1630              		.loc 1 1985 9 is_stmt 1 discriminator 4 view .LVU457
 1631              	.LVL92:
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1632              		.loc 1 1986 9 discriminator 4 view .LVU458
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1633              		.loc 1 1986 22 is_stmt 0 discriminator 4 view .LVU459
 1634 015c 6249     		ldr	r1, .L159
 1635 015e C968     		ldr	r1, [r1, #12]
 1636              	.LVL93:
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1637              		.loc 1 1986 22 discriminator 4 view .LVU460
 1638 0160 00E0     		b	.L137
 1639              	.LVL94:
 1640              	.L135:
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1641              		.loc 1 1979 9 is_stmt 1 view .LVU461
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1642              		.loc 1 1979 22 is_stmt 0 view .LVU462
 1643 0162 D968     		ldr	r1, [r3, #12]
 1644              	.LVL95:
 1645              	.L137:
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1646              		.loc 1 1989 7 is_stmt 1 view .LVU463
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1647              		.loc 1 1989 10 is_stmt 0 view .LVU464
 1648 0164 9AB9     		cbnz	r2, .L138
ARM GAS  /tmp/ccodtIyF.s 			page 107


1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1649              		.loc 1 1989 11 discriminator 1 view .LVU465
 1650 0166 624A     		ldr	r2, .L159+8
 1651 0168 9268     		ldr	r2, [r2, #8]
 1652 016a 12F01F0F 		tst	r2, #31
 1653 016e 0ED0     		beq	.L138
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1654              		.loc 1 1989 11 discriminator 2 view .LVU466
 1655 0170 5F4A     		ldr	r2, .L159+8
 1656 0172 9268     		ldr	r2, [r2, #8]
 1657 0174 02F01F02 		and	r2, r2, #31
 1658 0178 052A     		cmp	r2, #5
 1659 017a 08D0     		beq	.L138
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1660              		.loc 1 1989 11 discriminator 3 view .LVU467
 1661 017c 5C4A     		ldr	r2, .L159+8
 1662 017e 9268     		ldr	r2, [r2, #8]
 1663 0180 02F01F02 		and	r2, r2, #31
 1664 0184 092A     		cmp	r2, #9
 1665 0186 02D0     		beq	.L138
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1666              		.loc 1 1999 9 is_stmt 1 discriminator 4 view .LVU468
 1667              	.LVL96:
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1668              		.loc 1 2000 9 discriminator 4 view .LVU469
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1669              		.loc 1 2000 18 is_stmt 0 discriminator 4 view .LVU470
 1670 0188 574A     		ldr	r2, .L159
 1671 018a D068     		ldr	r0, [r2, #12]
 1672              	.LVL97:
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1673              		.loc 1 2000 18 discriminator 4 view .LVU471
 1674 018c 00E0     		b	.L140
 1675              	.LVL98:
 1676              	.L138:
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1677              		.loc 1 1993 9 is_stmt 1 view .LVU472
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1678              		.loc 1 1993 18 is_stmt 0 view .LVU473
 1679 018e D868     		ldr	r0, [r3, #12]
 1680              	.LVL99:
 1681              	.L140:
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            && (!((READ_BIT(tmp_cfgr, (ADC_CFGR_JAUTO|ADC_CFGR_CONT)) == (ADC_CFGR_JAUTO|ADC_CFGR_CO
 1682              		.loc 1 2004 7 is_stmt 1 view .LVU474
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            && (!((READ_BIT(tmp_cfgr, (ADC_CFGR_JAUTO|ADC_CFGR_CONT)) == (ADC_CFGR_JAUTO|ADC_CFGR_CO
 1683              		.loc 1 2004 12 is_stmt 0 view .LVU475
 1684 0190 DA6C     		ldr	r2, [r3, #76]
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            && (!((READ_BIT(tmp_cfgr, (ADC_CFGR_JAUTO|ADC_CFGR_CONT)) == (ADC_CFGR_JAUTO|ADC_CFGR_CO
 1685              		.loc 1 2004 10 view .LVU476
 1686 0192 12F4C07F 		tst	r2, #384
 1687 0196 27D1     		bne	.L134
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            && (!((READ_BIT(tmp_cfgr, (ADC_CFGR_JAUTO|ADC_CFGR_CONT)) == (ADC_CFGR_JAUTO|ADC_CFGR_CO
 1688              		.loc 1 2004 49 discriminator 1 view .LVU477
 1689 0198 11F4001F 		tst	r1, #2097152
 1690 019c 24D1     		bne	.L134
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (ADC_IS_SOFTWARE_START_REGULAR(hadc))))    )
 1691              		.loc 1 2005 12 view .LVU478
ARM GAS  /tmp/ccodtIyF.s 			page 108


 1692 019e 554A     		ldr	r2, .L159+12
 1693 01a0 8243     		bics	r2, r2, r0
 1694 01a2 14D0     		beq	.L154
 1695              	.L141:
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1696              		.loc 1 2010 9 is_stmt 1 view .LVU479
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1697              		.loc 1 2010 13 is_stmt 0 view .LVU480
 1698 01a4 9A68     		ldr	r2, [r3, #8]
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1699              		.loc 1 2010 12 view .LVU481
 1700 01a6 12F0080F 		tst	r2, #8
 1701 01aa 15D1     		bne	.L142
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Clear HAL_ADC_STATE_INJ_BUSY bit */
 1702              		.loc 1 2013 11 is_stmt 1 view .LVU482
 1703 01ac 5A68     		ldr	r2, [r3, #4]
 1704 01ae 22F06002 		bic	r2, r2, #96
 1705 01b2 5A60     		str	r2, [r3, #4]
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If no regular conversion on-going, set HAL_ADC_STATE_READY bit */
 1706              		.loc 1 2015 11 view .LVU483
 1707 01b4 636D     		ldr	r3, [r4, #84]
 1708 01b6 23F48053 		bic	r3, r3, #4096
 1709 01ba 6365     		str	r3, [r4, #84]
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1710              		.loc 1 2017 11 view .LVU484
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1711              		.loc 1 2017 15 is_stmt 0 view .LVU485
 1712 01bc 636D     		ldr	r3, [r4, #84]
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1713              		.loc 1 2017 14 view .LVU486
 1714 01be 13F4807F 		tst	r3, #256
 1715 01c2 11D1     		bne	.L134
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1716              		.loc 1 2019 13 is_stmt 1 view .LVU487
 1717 01c4 636D     		ldr	r3, [r4, #84]
 1718 01c6 43F00103 		orr	r3, r3, #1
 1719 01ca 6365     		str	r3, [r4, #84]
 1720 01cc 0CE0     		b	.L134
 1721              	.L154:
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1722              		.loc 1 2006 15 is_stmt 0 discriminator 1 view .LVU488
 1723 01ce DA68     		ldr	r2, [r3, #12]
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (ADC_IS_SOFTWARE_START_REGULAR(hadc))))    )
 1724              		.loc 1 2005 16 discriminator 1 view .LVU489
 1725 01d0 12F4406F 		tst	r2, #3072
 1726 01d4 08D0     		beq	.L134
 1727 01d6 E5E7     		b	.L141
 1728              	.L142:
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1729              		.loc 1 2025 11 is_stmt 1 view .LVU490
 1730 01d8 636D     		ldr	r3, [r4, #84]
 1731 01da 43F01003 		orr	r3, r3, #16
 1732 01de 6365     		str	r3, [r4, #84]
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 1733              		.loc 1 2028 11 view .LVU491
 1734 01e0 A36D     		ldr	r3, [r4, #88]
 1735 01e2 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccodtIyF.s 			page 109


 1736 01e6 A365     		str	r3, [r4, #88]
 1737              	.LVL100:
 1738              	.L134:
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1739              		.loc 1 2039 5 view .LVU492
 1740 01e8 2046     		mov	r0, r4
 1741 01ea FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1742              	.LVL101:
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1743              		.loc 1 2042 5 view .LVU493
 1744 01ee 2368     		ldr	r3, [r4]
 1745 01f0 6022     		movs	r2, #96
 1746 01f2 1A60     		str	r2, [r3]
 1747              	.L132:
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1748              		.loc 1 2049 3 view .LVU494
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1749              		.loc 1 2049 6 is_stmt 0 view .LVU495
 1750 01f4 15F0800F 		tst	r5, #128
 1751 01f8 02D0     		beq	.L143
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1752              		.loc 1 2049 52 discriminator 1 view .LVU496
 1753 01fa 16F0800F 		tst	r6, #128
 1754 01fe 39D1     		bne	.L155
 1755              	.L143:
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1756              		.loc 1 2061 3 is_stmt 1 view .LVU497
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1757              		.loc 1 2061 6 is_stmt 0 view .LVU498
 1758 0200 15F4807F 		tst	r5, #256
 1759 0204 02D0     		beq	.L144
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1760              		.loc 1 2061 52 discriminator 1 view .LVU499
 1761 0206 16F4807F 		tst	r6, #256
 1762 020a 3ED1     		bne	.L156
 1763              	.L144:
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1764              		.loc 1 2073 3 is_stmt 1 view .LVU500
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1765              		.loc 1 2073 6 is_stmt 0 view .LVU501
 1766 020c 15F4007F 		tst	r5, #512
 1767 0210 02D0     		beq	.L145
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1768              		.loc 1 2073 52 discriminator 1 view .LVU502
 1769 0212 16F4007F 		tst	r6, #512
 1770 0216 44D1     		bne	.L157
 1771              	.L145:
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1772              		.loc 1 2086 3 is_stmt 1 view .LVU503
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1773              		.loc 1 2086 6 is_stmt 0 view .LVU504
 1774 0218 15F0100F 		tst	r5, #16
 1775 021c 23D0     		beq	.L146
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1776              		.loc 1 2086 50 discriminator 1 view .LVU505
 1777 021e 16F0100F 		tst	r6, #16
 1778 0222 20D0     		beq	.L146
ARM GAS  /tmp/ccodtIyF.s 			page 110


2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1779              		.loc 1 2095 5 is_stmt 1 view .LVU506
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1780              		.loc 1 2095 19 is_stmt 0 view .LVU507
 1781 0224 236B     		ldr	r3, [r4, #48]
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1782              		.loc 1 2095 8 view .LVU508
 1783 0226 83B1     		cbz	r3, .L147
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1784              		.loc 1 2102 7 is_stmt 1 view .LVU509
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1785              		.loc 1 2102 15 is_stmt 0 view .LVU510
 1786 0228 2368     		ldr	r3, [r4]
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1787              		.loc 1 2102 9 view .LVU511
 1788 022a 2F49     		ldr	r1, .L159
 1789 022c 324A     		ldr	r2, .L159+16
 1790 022e 9342     		cmp	r3, r2
 1791 0230 18BF     		it	ne
 1792 0232 8B42     		cmpne	r3, r1
 1793 0234 41D1     		bne	.L152
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1794              		.loc 1 2105 23 view .LVU512
 1795 0236 02F50072 		add	r2, r2, #512
 1796              	.L148:
 1797              	.LVL102:
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1798              		.loc 1 2113 7 is_stmt 1 view .LVU513
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1799              		.loc 1 2113 11 is_stmt 0 view .LVU514
 1800 023a 9168     		ldr	r1, [r2, #8]
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1801              		.loc 1 2113 10 view .LVU515
 1802 023c 11F01F0F 		tst	r1, #31
 1803 0240 3DD1     		bne	.L149
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1804              		.loc 1 2115 9 is_stmt 1 view .LVU516
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1805              		.loc 1 2115 13 is_stmt 0 view .LVU517
 1806 0242 DB68     		ldr	r3, [r3, #12]
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1807              		.loc 1 2115 12 view .LVU518
 1808 0244 13F0010F 		tst	r3, #1
 1809 0248 0AD0     		beq	.L150
 1810              	.LVL103:
 1811              	.L147:
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1812              		.loc 1 2133 7 is_stmt 1 view .LVU519
 1813 024a 636D     		ldr	r3, [r4, #84]
 1814 024c 43F48063 		orr	r3, r3, #1024
 1815 0250 6365     		str	r3, [r4, #84]
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1816              		.loc 1 2136 7 view .LVU520
 1817 0252 A36D     		ldr	r3, [r4, #88]
 1818 0254 43F00203 		orr	r3, r3, #2
 1819 0258 A365     		str	r3, [r4, #88]
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
ARM GAS  /tmp/ccodtIyF.s 			page 111


 1820              		.loc 1 2139 7 view .LVU521
 1821 025a 2046     		mov	r0, r4
 1822 025c FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1823              	.LVL104:
 1824              	.L150:
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1825              		.loc 1 2144 5 view .LVU522
 1826 0260 2368     		ldr	r3, [r4]
 1827 0262 1022     		movs	r2, #16
 1828 0264 1A60     		str	r2, [r3]
 1829              	.L146:
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1830              		.loc 1 2149 3 view .LVU523
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1831              		.loc 1 2149 6 is_stmt 0 view .LVU524
 1832 0266 15F4806F 		tst	r5, #1024
 1833 026a 02D0     		beq	.L118
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1834              		.loc 1 2149 54 discriminator 1 view .LVU525
 1835 026c 16F4806F 		tst	r6, #1024
 1836 0270 2AD1     		bne	.L158
 1837              	.L118:
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1838              		.loc 1 2164 1 view .LVU526
 1839 0272 70BD     		pop	{r4, r5, r6, pc}
 1840              	.LVL105:
 1841              	.L155:
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1842              		.loc 1 2052 5 is_stmt 1 view .LVU527
 1843 0274 636D     		ldr	r3, [r4, #84]
 1844 0276 43F48033 		orr	r3, r3, #65536
 1845 027a 6365     		str	r3, [r4, #84]
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
 1846              		.loc 1 2055 5 view .LVU528
 1847 027c 2046     		mov	r0, r4
 1848 027e FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1849              	.LVL106:
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1850              		.loc 1 2057 5 view .LVU529
 1851 0282 2368     		ldr	r3, [r4]
 1852 0284 8022     		movs	r2, #128
 1853 0286 1A60     		str	r2, [r3]
 1854 0288 BAE7     		b	.L143
 1855              	.L156:
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1856              		.loc 1 2064 5 view .LVU530
 1857 028a 636D     		ldr	r3, [r4, #84]
 1858 028c 43F40033 		orr	r3, r3, #131072
 1859 0290 6365     		str	r3, [r4, #84]
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
 1860              		.loc 1 2067 5 view .LVU531
 1861 0292 2046     		mov	r0, r4
 1862 0294 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1863              	.LVL107:
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1864              		.loc 1 2069 5 view .LVU532
 1865 0298 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccodtIyF.s 			page 112


 1866 029a 4FF48072 		mov	r2, #256
 1867 029e 1A60     		str	r2, [r3]
 1868 02a0 B4E7     		b	.L144
 1869              	.L157:
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1870              		.loc 1 2076 5 view .LVU533
 1871 02a2 636D     		ldr	r3, [r4, #84]
 1872 02a4 43F48023 		orr	r3, r3, #262144
 1873 02a8 6365     		str	r3, [r4, #84]
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
 1874              		.loc 1 2079 5 view .LVU534
 1875 02aa 2046     		mov	r0, r4
 1876 02ac FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1877              	.LVL108:
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1878              		.loc 1 2081 5 view .LVU535
 1879 02b0 2368     		ldr	r3, [r4]
 1880 02b2 4FF40072 		mov	r2, #512
 1881 02b6 1A60     		str	r2, [r3]
 1882 02b8 AEE7     		b	.L145
 1883              	.L152:
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1884              		.loc 1 2110 23 is_stmt 0 view .LVU536
 1885 02ba 104A     		ldr	r2, .L159+20
 1886 02bc BDE7     		b	.L148
 1887              	.LVL109:
 1888              	.L149:
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1889              		.loc 1 2123 9 is_stmt 1 view .LVU537
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1890              		.loc 1 2123 13 is_stmt 0 view .LVU538
 1891 02be 9368     		ldr	r3, [r2, #8]
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1892              		.loc 1 2123 12 view .LVU539
 1893 02c0 13F4404F 		tst	r3, #49152
 1894 02c4 CCD0     		beq	.L150
 1895 02c6 C0E7     		b	.L147
 1896              	.LVL110:
 1897              	.L158:
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1898              		.loc 1 2152 5 is_stmt 1 view .LVU540
 1899 02c8 636D     		ldr	r3, [r4, #84]
 1900 02ca 43F48043 		orr	r3, r3, #16384
 1901 02ce 6365     		str	r3, [r4, #84]
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1902              		.loc 1 2155 5 view .LVU541
 1903 02d0 A36D     		ldr	r3, [r4, #88]
 1904 02d2 43F00803 		orr	r3, r3, #8
 1905 02d6 A365     		str	r3, [r4, #88]
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1906              		.loc 1 2158 5 view .LVU542
 1907 02d8 2368     		ldr	r3, [r4]
 1908 02da 4FF48062 		mov	r2, #1024
 1909 02de 1A60     		str	r2, [r3]
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1910              		.loc 1 2161 5 view .LVU543
 1911 02e0 2046     		mov	r0, r4
ARM GAS  /tmp/ccodtIyF.s 			page 113


 1912 02e2 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1913              	.LVL111:
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1914              		.loc 1 2164 1 is_stmt 0 view .LVU544
 1915 02e6 C4E7     		b	.L118
 1916              	.L160:
 1917              		.align	2
 1918              	.L159:
 1919 02e8 00200240 		.word	1073881088
 1920 02ec 00600258 		.word	1476550656
 1921 02f0 00230240 		.word	1073881856
 1922 02f4 00200002 		.word	33562624
 1923 02f8 00210240 		.word	1073881344
 1924 02fc 00630258 		.word	1476551424
 1925              		.cfi_endproc
 1926              	.LFE150:
 1928              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1929              		.align	1
 1930              		.global	ADC_DMAConvCplt
 1931              		.syntax unified
 1932              		.thumb
 1933              		.thumb_func
 1934              		.fpu fpv5-d16
 1936              	ADC_DMAConvCplt:
 1937              	.LVL112:
 1938              	.LFB162:
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1939              		.loc 1 3152 1 is_stmt 1 view -0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1943              		.loc 1 3152 1 is_stmt 0 view .LVU546
 1944 0000 08B5     		push	{r3, lr}
 1945              	.LCFI8:
 1946              		.cfi_def_cfa_offset 8
 1947              		.cfi_offset 3, -8
 1948              		.cfi_offset 14, -4
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1949              		.loc 1 3154 3 is_stmt 1 view .LVU547
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1950              		.loc 1 3154 22 is_stmt 0 view .LVU548
 1951 0002 806B     		ldr	r0, [r0, #56]
 1952              	.LVL113:
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1953              		.loc 1 3157 3 is_stmt 1 view .LVU549
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1954              		.loc 1 3157 7 is_stmt 0 view .LVU550
 1955 0004 436D     		ldr	r3, [r0, #84]
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1956              		.loc 1 3157 6 view .LVU551
 1957 0006 13F0500F 		tst	r3, #80
 1958 000a 30D1     		bne	.L162
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
 1959              		.loc 1 3160 5 is_stmt 1 view .LVU552
 1960 000c 436D     		ldr	r3, [r0, #84]
 1961 000e 43F40073 		orr	r3, r3, #512
ARM GAS  /tmp/ccodtIyF.s 			page 114


 1962 0012 4365     		str	r3, [r0, #84]
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1963              		.loc 1 3162 5 view .LVU553
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1964              		.loc 1 3162 9 is_stmt 0 view .LVU554
 1965 0014 0368     		ldr	r3, [r0]
 1966 0016 1A68     		ldr	r2, [r3]
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1967              		.loc 1 3162 8 view .LVU555
 1968 0018 12F0080F 		tst	r2, #8
 1969 001c 14D0     		beq	.L163
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1970              		.loc 1 3165 7 is_stmt 1 view .LVU556
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1971              		.loc 1 3165 10 is_stmt 0 view .LVU557
 1972 001e DA68     		ldr	r2, [r3, #12]
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1973              		.loc 1 3165 9 view .LVU558
 1974 0020 12F4406F 		tst	r2, #3072
 1975 0024 20D1     		bne	.L164
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1976              		.loc 1 3168 9 is_stmt 1 view .LVU559
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1977              		.loc 1 3168 13 is_stmt 0 view .LVU560
 1978 0026 DB68     		ldr	r3, [r3, #12]
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1979              		.loc 1 3168 12 view .LVU561
 1980 0028 13F4005F 		tst	r3, #8192
 1981 002c 1CD1     		bne	.L164
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1982              		.loc 1 3171 11 is_stmt 1 view .LVU562
 1983 002e 436D     		ldr	r3, [r0, #84]
 1984 0030 23F48073 		bic	r3, r3, #256
 1985 0034 4365     		str	r3, [r0, #84]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1986              		.loc 1 3172 11 view .LVU563
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1987              		.loc 1 3172 15 is_stmt 0 view .LVU564
 1988 0036 436D     		ldr	r3, [r0, #84]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1989              		.loc 1 3172 14 view .LVU565
 1990 0038 13F4805F 		tst	r3, #4096
 1991 003c 14D1     		bne	.L164
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1992              		.loc 1 3174 13 is_stmt 1 view .LVU566
 1993 003e 436D     		ldr	r3, [r0, #84]
 1994 0040 43F00103 		orr	r3, r3, #1
 1995 0044 4365     		str	r3, [r0, #84]
 1996 0046 0FE0     		b	.L164
 1997              	.L163:
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1998              		.loc 1 3183 7 view .LVU567
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1999              		.loc 1 3183 11 is_stmt 0 view .LVU568
 2000 0048 DB68     		ldr	r3, [r3, #12]
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2001              		.loc 1 3183 10 view .LVU569
ARM GAS  /tmp/ccodtIyF.s 			page 115


 2002 004a 13F0030F 		tst	r3, #3
 2003 004e 0BD1     		bne	.L164
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2004              		.loc 1 3186 9 is_stmt 1 view .LVU570
 2005 0050 436D     		ldr	r3, [r0, #84]
 2006 0052 23F48073 		bic	r3, r3, #256
 2007 0056 4365     		str	r3, [r0, #84]
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2008              		.loc 1 3187 9 view .LVU571
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2009              		.loc 1 3187 13 is_stmt 0 view .LVU572
 2010 0058 436D     		ldr	r3, [r0, #84]
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2011              		.loc 1 3187 12 view .LVU573
 2012 005a 13F4805F 		tst	r3, #4096
 2013 005e 03D1     		bne	.L164
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2014              		.loc 1 3189 11 is_stmt 1 view .LVU574
 2015 0060 436D     		ldr	r3, [r0, #84]
 2016 0062 43F00103 		orr	r3, r3, #1
 2017 0066 4365     		str	r3, [r0, #84]
 2018              	.L164:
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 2019              		.loc 1 3195 5 view .LVU575
 2020 0068 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2021              	.LVL114:
 2022              	.L161:
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2023              		.loc 1 3209 1 is_stmt 0 view .LVU576
 2024 006c 08BD     		pop	{r3, pc}
 2025              	.LVL115:
 2026              	.L162:
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2027              		.loc 1 3200 5 is_stmt 1 view .LVU577
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2028              		.loc 1 3200 9 is_stmt 0 view .LVU578
 2029 006e 436D     		ldr	r3, [r0, #84]
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2030              		.loc 1 3200 8 view .LVU579
 2031 0070 13F0100F 		tst	r3, #16
 2032 0074 FAD0     		beq	.L161
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 2033              		.loc 1 3203 7 is_stmt 1 view .LVU580
 2034 0076 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2035              	.LVL116:
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2036              		.loc 1 3209 1 is_stmt 0 view .LVU581
 2037 007a F7E7     		b	.L161
 2038              		.cfi_endproc
 2039              	.LFE162:
 2041              		.section	.text.ADC_DMAError,"ax",%progbits
 2042              		.align	1
 2043              		.global	ADC_DMAError
 2044              		.syntax unified
 2045              		.thumb
 2046              		.thumb_func
 2047              		.fpu fpv5-d16
ARM GAS  /tmp/ccodtIyF.s 			page 116


 2049              	ADC_DMAError:
 2050              	.LVL117:
 2051              	.LFB164:
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA error callback
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 2052              		.loc 1 3231 1 is_stmt 1 view -0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              		.loc 1 3231 1 is_stmt 0 view .LVU583
 2057 0000 08B5     		push	{r3, lr}
 2058              	.LCFI9:
 2059              		.cfi_def_cfa_offset 8
 2060              		.cfi_offset 3, -8
 2061              		.cfi_offset 14, -4
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2062              		.loc 1 3233 3 is_stmt 1 view .LVU584
 2063              		.loc 1 3233 22 is_stmt 0 view .LVU585
 2064 0002 806B     		ldr	r0, [r0, #56]
 2065              	.LVL118:
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2066              		.loc 1 3236 3 is_stmt 1 view .LVU586
 2067 0004 436D     		ldr	r3, [r0, #84]
 2068 0006 43F04003 		orr	r3, r3, #64
 2069 000a 4365     		str	r3, [r0, #84]
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 2070              		.loc 1 3239 3 view .LVU587
 2071 000c 836D     		ldr	r3, [r0, #88]
 2072 000e 43F00403 		orr	r3, r3, #4
 2073 0012 8365     		str	r3, [r0, #88]
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Error callback */
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2074              		.loc 1 3242 3 view .LVU588
 2075 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2076              	.LVL119:
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 2077              		.loc 1 3243 1 is_stmt 0 view .LVU589
 2078 0018 08BD     		pop	{r3, pc}
 2079              		.cfi_endproc
 2080              	.LFE164:
 2082              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2083              		.align	1
 2084              		.global	HAL_ADC_ConfigChannel
 2085              		.syntax unified
 2086              		.thumb
ARM GAS  /tmp/ccodtIyF.s 			page 117


 2087              		.thumb_func
 2088              		.fpu fpv5-d16
 2090              	HAL_ADC_ConfigChannel:
 2091              	.LVL120:
 2092              	.LFB155:
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2093              		.loc 1 2271 1 is_stmt 1 view -0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 8
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097              		@ link register save eliminated.
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2098              		.loc 1 2271 1 is_stmt 0 view .LVU591
 2099 0000 F0B4     		push	{r4, r5, r6, r7}
 2100              	.LCFI10:
 2101              		.cfi_def_cfa_offset 16
 2102              		.cfi_offset 4, -16
 2103              		.cfi_offset 5, -12
 2104              		.cfi_offset 6, -8
 2105              		.cfi_offset 7, -4
 2106 0002 82B0     		sub	sp, sp, #8
 2107              	.LCFI11:
 2108              		.cfi_def_cfa_offset 24
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2109              		.loc 1 2272 3 is_stmt 1 view .LVU592
 2110              	.LVL121:
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2111              		.loc 1 2274 3 view .LVU593
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 2112              		.loc 1 2275 3 view .LVU594
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2113              		.loc 1 2276 3 view .LVU595
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2114              		.loc 1 2276 17 is_stmt 0 view .LVU596
 2115 0004 0022     		movs	r2, #0
 2116 0006 0192     		str	r2, [sp, #4]
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2117              		.loc 1 2279 3 is_stmt 1 view .LVU597
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2118              		.loc 1 2280 3 view .LVU598
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 2119              		.loc 1 2281 3 view .LVU599
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 2120              		.loc 1 2282 3 view .LVU600
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2121              		.loc 1 2283 3 view .LVU601
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 2122              		.loc 1 2286 3 view .LVU602
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 2123              		.loc 1 2292 5 view .LVU603
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 2124              		.loc 1 2296 3 view .LVU604
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 2125              		.loc 1 2312 7 view .LVU605
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2126              		.loc 1 2317 3 view .LVU606
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 118


 2127              		.loc 1 2317 3 view .LVU607
 2128 0008 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 2129 000c 012A     		cmp	r2, #1
 2130 000e 00F0EA82 		beq	.L215
 2131 0012 0346     		mov	r3, r0
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2132              		.loc 1 2317 3 discriminator 2 view .LVU608
 2133 0014 0122     		movs	r2, #1
 2134 0016 80F85020 		strb	r2, [r0, #80]
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 2135              		.loc 1 2326 3 discriminator 2 view .LVU609
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 2136              		.loc 1 2326 7 is_stmt 0 discriminator 2 view .LVU610
 2137 001a 0268     		ldr	r2, [r0]
 2138 001c 9068     		ldr	r0, [r2, #8]
 2139              	.LVL122:
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 2140              		.loc 1 2326 6 discriminator 2 view .LVU611
 2141 001e 10F0040F 		tst	r0, #4
 2142 0022 40F0D582 		bne	.L171
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2143              		.loc 1 2329 5 is_stmt 1 view .LVU612
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2144              		.loc 1 2329 27 is_stmt 0 view .LVU613
 2145 0026 D069     		ldr	r0, [r2, #28]
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2146              		.loc 1 2329 44 view .LVU614
 2147 0028 0D68     		ldr	r5, [r1]
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2148              		.loc 1 2329 34 view .LVU615
 2149 002a 0124     		movs	r4, #1
 2150 002c AC40     		lsls	r4, r4, r5
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2151              		.loc 1 2329 27 view .LVU616
 2152 002e 2043     		orrs	r0, r0, r4
 2153 0030 D061     		str	r0, [r2, #28]
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2154              		.loc 1 2334 5 is_stmt 1 view .LVU617
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2155              		.loc 1 2334 16 is_stmt 0 view .LVU618
 2156 0032 4A68     		ldr	r2, [r1, #4]
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2157              		.loc 1 2334 8 view .LVU619
 2158 0034 042A     		cmp	r2, #4
 2159 0036 4FD8     		bhi	.L172
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank),
 2160              		.loc 1 2336 7 is_stmt 1 view .LVU620
 2161 0038 1E68     		ldr	r6, [r3]
 2162 003a 356B     		ldr	r5, [r6, #48]
 2163              	.LVL123:
 2164              	.LBB68:
 2165              	.LBI68:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2166              		.loc 2 850 57 view .LVU621
 2167              	.LBB69:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2168              		.loc 2 852 3 view .LVU622
ARM GAS  /tmp/ccodtIyF.s 			page 119


 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2169              		.loc 2 857 4 view .LVU623
 2170 003c 4FF4F860 		mov	r0, #1984
 2171              		.syntax unified
 2172              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2173 0040 90FAA0F4 		rbit r4, r0
 2174              	@ 0 "" 2
 2175              	.LVL124:
 2176              		.loc 2 870 3 view .LVU624
 2177              		.loc 2 870 3 is_stmt 0 view .LVU625
 2178              		.thumb
 2179              		.syntax unified
 2180              	.LBE69:
 2181              	.LBE68:
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank),
 2182              		.loc 1 2336 7 view .LVU626
 2183 0044 B4FA84F4 		clz	r4, r4
 2184 0048 04FB02F4 		mul	r4, r4, r2
 2185 004c 1F27     		movs	r7, #31
 2186 004e 07FA04F4 		lsl	r4, r7, r4
 2187 0052 25EA0405 		bic	r5, r5, r4
 2188 0056 0C68     		ldr	r4, [r1]
 2189              	.LVL125:
 2190              	.LBB70:
 2191              	.LBI70:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2192              		.loc 2 850 57 is_stmt 1 view .LVU627
 2193              	.LBB71:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2194              		.loc 2 852 3 view .LVU628
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2195              		.loc 2 857 4 view .LVU629
 2196              		.syntax unified
 2197              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2198 0058 90FAA0F0 		rbit r0, r0
 2199              	@ 0 "" 2
 2200              	.LVL126:
 2201              		.loc 2 870 3 view .LVU630
 2202              		.loc 2 870 3 is_stmt 0 view .LVU631
 2203              		.thumb
 2204              		.syntax unified
 2205              	.LBE71:
 2206              	.LBE70:
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank),
 2207              		.loc 1 2336 7 view .LVU632
 2208 005c B0FA80F0 		clz	r0, r0
 2209 0060 00FB02F2 		mul	r2, r0, r2
 2210 0064 04FA02F2 		lsl	r2, r4, r2
 2211 0068 2A43     		orrs	r2, r2, r5
 2212 006a 3263     		str	r2, [r6, #48]
 2213              	.L173:
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2214              		.loc 1 2368 5 is_stmt 1 view .LVU633
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2215              		.loc 1 2368 9 is_stmt 0 view .LVU634
 2216 006c 1A68     		ldr	r2, [r3]
 2217 006e 9068     		ldr	r0, [r2, #8]
ARM GAS  /tmp/ccodtIyF.s 			page 120


2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2218              		.loc 1 2368 8 view .LVU635
 2219 0070 10F00C0F 		tst	r0, #12
 2220 0074 40F0BD80 		bne	.L176
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2221              		.loc 1 2374 7 is_stmt 1 view .LVU636
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2222              		.loc 1 2374 18 is_stmt 0 view .LVU637
 2223 0078 0868     		ldr	r0, [r1]
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2224              		.loc 1 2374 10 view .LVU638
 2225 007a 0928     		cmp	r0, #9
 2226 007c 40F28480 		bls	.L177
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel),
 2227              		.loc 1 2376 9 is_stmt 1 view .LVU639
 2228 0080 9669     		ldr	r6, [r2, #24]
 2229              	.LVL127:
 2230              	.LBB72:
 2231              	.LBI72:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2232              		.loc 2 850 57 view .LVU640
 2233              	.LBB73:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2234              		.loc 2 852 3 view .LVU641
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2235              		.loc 2 857 4 view .LVU642
 2236 0082 3824     		movs	r4, #56
 2237              		.syntax unified
 2238              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2239 0084 94FAA4F5 		rbit r5, r4
 2240              	@ 0 "" 2
 2241              	.LVL128:
 2242              		.loc 2 870 3 view .LVU643
 2243              		.loc 2 870 3 is_stmt 0 view .LVU644
 2244              		.thumb
 2245              		.syntax unified
 2246              	.LBE73:
 2247              	.LBE72:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel),
 2248              		.loc 1 2376 9 view .LVU645
 2249 0088 B5FA85F5 		clz	r5, r5
 2250 008c 0A38     		subs	r0, r0, #10
 2251 008e 00FB05F5 		mul	r5, r0, r5
 2252 0092 0727     		movs	r7, #7
 2253 0094 07FA05F5 		lsl	r5, r7, r5
 2254 0098 26EA0506 		bic	r6, r6, r5
 2255 009c 8D68     		ldr	r5, [r1, #8]
 2256              	.LVL129:
 2257              	.LBB74:
 2258              	.LBI74:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2259              		.loc 2 850 57 is_stmt 1 view .LVU646
 2260              	.LBB75:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2261              		.loc 2 852 3 view .LVU647
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2262              		.loc 2 857 4 view .LVU648
ARM GAS  /tmp/ccodtIyF.s 			page 121


 2263              		.syntax unified
 2264              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2265 009e 94FAA4F4 		rbit r4, r4
 2266              	@ 0 "" 2
 2267              	.LVL130:
 2268              		.loc 2 870 3 view .LVU649
 2269              		.loc 2 870 3 is_stmt 0 view .LVU650
 2270              		.thumb
 2271              		.syntax unified
 2272              	.LBE75:
 2273              	.LBE74:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel),
 2274              		.loc 1 2376 9 view .LVU651
 2275 00a2 B4FA84F4 		clz	r4, r4
 2276 00a6 04FB00F0 		mul	r0, r4, r0
 2277 00aa 05FA00F0 		lsl	r0, r5, r0
 2278 00ae 3043     		orrs	r0, r0, r6
 2279 00b0 9061     		str	r0, [r2, #24]
 2280              	.L178:
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      
 2281              		.loc 1 2392 7 is_stmt 1 view .LVU652
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      
 2282              		.loc 1 2392 26 is_stmt 0 view .LVU653
 2283 00b2 4869     		ldr	r0, [r1, #20]
 2284 00b4 1C68     		ldr	r4, [r3]
 2285 00b6 E268     		ldr	r2, [r4, #12]
 2286 00b8 C2F38202 		ubfx	r2, r2, #2, #3
 2287 00bc 5200     		lsls	r2, r2, #1
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      
 2288              		.loc 1 2392 24 view .LVU654
 2289 00be 00FA02F2 		lsl	r2, r0, r2
 2290              	.LVL131:
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2291              		.loc 1 2394 7 is_stmt 1 view .LVU655
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2292              		.loc 1 2394 22 is_stmt 0 view .LVU656
 2293 00c2 0869     		ldr	r0, [r1, #16]
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2294              		.loc 1 2394 7 view .LVU657
 2295 00c4 0138     		subs	r0, r0, #1
 2296 00c6 0328     		cmp	r0, #3
 2297 00c8 00F23081 		bhi	.L179
 2298 00cc DFE810F0 		tbh	[pc, r0, lsl #1]
 2299              	.L181:
 2300 00d0 7500     		.2byte	(.L184-.L181)/2
 2301 00d2 C200     		.2byte	(.L183-.L181)/2
 2302 00d4 E600     		.2byte	(.L182-.L181)/2
 2303 00d6 0A01     		.2byte	(.L180-.L181)/2
 2304              	.LVL132:
 2305              		.p2align 1
 2306              	.L172:
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2307              		.loc 1 2341 10 is_stmt 1 view .LVU658
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2308              		.loc 1 2341 13 is_stmt 0 view .LVU659
 2309 00d8 092A     		cmp	r2, #9
 2310 00da 1BD8     		bhi	.L174
ARM GAS  /tmp/ccodtIyF.s 			page 122


2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank),
 2311              		.loc 1 2343 7 is_stmt 1 view .LVU660
 2312 00dc 1E68     		ldr	r6, [r3]
 2313 00de 746B     		ldr	r4, [r6, #52]
 2314              	.LVL133:
 2315              	.LBB76:
 2316              	.LBI76:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2317              		.loc 2 850 57 view .LVU661
 2318              	.LBB77:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2319              		.loc 2 852 3 view .LVU662
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2320              		.loc 2 857 4 view .LVU663
 2321 00e0 4FF4F860 		mov	r0, #1984
 2322              		.syntax unified
 2323              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2324 00e4 90FAA0F5 		rbit r5, r0
 2325              	@ 0 "" 2
 2326              	.LVL134:
 2327              		.loc 2 870 3 view .LVU664
 2328              		.loc 2 870 3 is_stmt 0 view .LVU665
 2329              		.thumb
 2330              		.syntax unified
 2331              	.LBE77:
 2332              	.LBE76:
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank),
 2333              		.loc 1 2343 7 view .LVU666
 2334 00e8 B5FA85F5 		clz	r5, r5
 2335 00ec 053A     		subs	r2, r2, #5
 2336 00ee 02FB05F5 		mul	r5, r2, r5
 2337 00f2 1F27     		movs	r7, #31
 2338 00f4 07FA05F5 		lsl	r5, r7, r5
 2339 00f8 24EA0504 		bic	r4, r4, r5
 2340 00fc 0D68     		ldr	r5, [r1]
 2341              	.LVL135:
 2342              	.LBB78:
 2343              	.LBI78:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2344              		.loc 2 850 57 is_stmt 1 view .LVU667
 2345              	.LBB79:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2346              		.loc 2 852 3 view .LVU668
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2347              		.loc 2 857 4 view .LVU669
 2348              		.syntax unified
 2349              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2350 00fe 90FAA0F0 		rbit r0, r0
 2351              	@ 0 "" 2
 2352              	.LVL136:
 2353              		.loc 2 870 3 view .LVU670
 2354              		.loc 2 870 3 is_stmt 0 view .LVU671
 2355              		.thumb
 2356              		.syntax unified
 2357              	.LBE79:
 2358              	.LBE78:
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank),
ARM GAS  /tmp/ccodtIyF.s 			page 123


 2359              		.loc 1 2343 7 view .LVU672
 2360 0102 B0FA80F0 		clz	r0, r0
 2361 0106 00FB02F2 		mul	r2, r0, r2
 2362 010a 05FA02F2 		lsl	r2, r5, r2
 2363 010e 2243     		orrs	r2, r2, r4
 2364 0110 7263     		str	r2, [r6, #52]
 2365 0112 ABE7     		b	.L173
 2366              	.L174:
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2367              		.loc 1 2348 10 is_stmt 1 view .LVU673
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2368              		.loc 1 2348 13 is_stmt 0 view .LVU674
 2369 0114 0E2A     		cmp	r2, #14
 2370 0116 1BD8     		bhi	.L175
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank),
 2371              		.loc 1 2350 7 is_stmt 1 view .LVU675
 2372 0118 1E68     		ldr	r6, [r3]
 2373 011a B46B     		ldr	r4, [r6, #56]
 2374              	.LVL137:
 2375              	.LBB80:
 2376              	.LBI80:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2377              		.loc 2 850 57 view .LVU676
 2378              	.LBB81:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2379              		.loc 2 852 3 view .LVU677
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2380              		.loc 2 857 4 view .LVU678
 2381 011c 4FF4F860 		mov	r0, #1984
 2382              		.syntax unified
 2383              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2384 0120 90FAA0F5 		rbit r5, r0
 2385              	@ 0 "" 2
 2386              	.LVL138:
 2387              		.loc 2 870 3 view .LVU679
 2388              		.loc 2 870 3 is_stmt 0 view .LVU680
 2389              		.thumb
 2390              		.syntax unified
 2391              	.LBE81:
 2392              	.LBE80:
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank),
 2393              		.loc 1 2350 7 view .LVU681
 2394 0124 B5FA85F5 		clz	r5, r5
 2395 0128 0A3A     		subs	r2, r2, #10
 2396 012a 02FB05F5 		mul	r5, r2, r5
 2397 012e 1F27     		movs	r7, #31
 2398 0130 07FA05F5 		lsl	r5, r7, r5
 2399 0134 24EA0504 		bic	r4, r4, r5
 2400 0138 0D68     		ldr	r5, [r1]
 2401              	.LVL139:
 2402              	.LBB82:
 2403              	.LBI82:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2404              		.loc 2 850 57 is_stmt 1 view .LVU682
 2405              	.LBB83:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2406              		.loc 2 852 3 view .LVU683
ARM GAS  /tmp/ccodtIyF.s 			page 124


 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2407              		.loc 2 857 4 view .LVU684
 2408              		.syntax unified
 2409              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2410 013a 90FAA0F0 		rbit r0, r0
 2411              	@ 0 "" 2
 2412              	.LVL140:
 2413              		.loc 2 870 3 view .LVU685
 2414              		.loc 2 870 3 is_stmt 0 view .LVU686
 2415              		.thumb
 2416              		.syntax unified
 2417              	.LBE83:
 2418              	.LBE82:
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank),
 2419              		.loc 1 2350 7 view .LVU687
 2420 013e B0FA80F0 		clz	r0, r0
 2421 0142 00FB02F2 		mul	r2, r0, r2
 2422 0146 05FA02F2 		lsl	r2, r5, r2
 2423 014a 2243     		orrs	r2, r2, r4
 2424 014c B263     		str	r2, [r6, #56]
 2425 014e 8DE7     		b	.L173
 2426              	.L175:
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank),
 2427              		.loc 1 2357 7 is_stmt 1 view .LVU688
 2428 0150 1E68     		ldr	r6, [r3]
 2429 0152 F56B     		ldr	r5, [r6, #60]
 2430              	.LVL141:
 2431              	.LBB84:
 2432              	.LBI84:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2433              		.loc 2 850 57 view .LVU689
 2434              	.LBB85:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2435              		.loc 2 852 3 view .LVU690
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2436              		.loc 2 857 4 view .LVU691
 2437 0154 4FF4F860 		mov	r0, #1984
 2438              		.syntax unified
 2439              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2440 0158 90FAA0F4 		rbit r4, r0
 2441              	@ 0 "" 2
 2442              	.LVL142:
 2443              		.loc 2 870 3 view .LVU692
 2444              		.loc 2 870 3 is_stmt 0 view .LVU693
 2445              		.thumb
 2446              		.syntax unified
 2447              	.LBE85:
 2448              	.LBE84:
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank),
 2449              		.loc 1 2357 7 view .LVU694
 2450 015c B4FA84F4 		clz	r4, r4
 2451 0160 0F3A     		subs	r2, r2, #15
 2452 0162 02FB04F4 		mul	r4, r2, r4
 2453 0166 1F27     		movs	r7, #31
 2454 0168 07FA04F4 		lsl	r4, r7, r4
 2455 016c 25EA0405 		bic	r5, r5, r4
 2456 0170 0C68     		ldr	r4, [r1]
ARM GAS  /tmp/ccodtIyF.s 			page 125


 2457              	.LVL143:
 2458              	.LBB86:
 2459              	.LBI86:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2460              		.loc 2 850 57 is_stmt 1 view .LVU695
 2461              	.LBB87:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2462              		.loc 2 852 3 view .LVU696
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2463              		.loc 2 857 4 view .LVU697
 2464              		.syntax unified
 2465              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2466 0172 90FAA0F0 		rbit r0, r0
 2467              	@ 0 "" 2
 2468              	.LVL144:
 2469              		.loc 2 870 3 view .LVU698
 2470              		.loc 2 870 3 is_stmt 0 view .LVU699
 2471              		.thumb
 2472              		.syntax unified
 2473              	.LBE87:
 2474              	.LBE86:
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank),
 2475              		.loc 1 2357 7 view .LVU700
 2476 0176 B0FA80F0 		clz	r0, r0
 2477 017a 00FB02F2 		mul	r2, r0, r2
 2478 017e 04FA02F2 		lsl	r2, r4, r2
 2479 0182 2A43     		orrs	r2, r2, r5
 2480 0184 F263     		str	r2, [r6, #60]
 2481 0186 71E7     		b	.L173
 2482              	.L177:
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel),
 2483              		.loc 1 2382 9 is_stmt 1 view .LVU701
 2484 0188 5669     		ldr	r6, [r2, #20]
 2485              	.LVL145:
 2486              	.LBB88:
 2487              	.LBI88:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2488              		.loc 2 850 57 view .LVU702
 2489              	.LBB89:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2490              		.loc 2 852 3 view .LVU703
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2491              		.loc 2 857 4 view .LVU704
 2492 018a 3824     		movs	r4, #56
 2493              		.syntax unified
 2494              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2495 018c 94FAA4F5 		rbit r5, r4
 2496              	@ 0 "" 2
 2497              	.LVL146:
 2498              		.loc 2 870 3 view .LVU705
 2499              		.loc 2 870 3 is_stmt 0 view .LVU706
 2500              		.thumb
 2501              		.syntax unified
 2502              	.LBE89:
 2503              	.LBE88:
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel),
 2504              		.loc 1 2382 9 view .LVU707
ARM GAS  /tmp/ccodtIyF.s 			page 126


 2505 0190 B5FA85F5 		clz	r5, r5
 2506 0194 05FB00F5 		mul	r5, r5, r0
 2507 0198 0727     		movs	r7, #7
 2508 019a 07FA05F5 		lsl	r5, r7, r5
 2509 019e 26EA0506 		bic	r6, r6, r5
 2510 01a2 8D68     		ldr	r5, [r1, #8]
 2511              	.LVL147:
 2512              	.LBB90:
 2513              	.LBI90:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2514              		.loc 2 850 57 is_stmt 1 view .LVU708
 2515              	.LBB91:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2516              		.loc 2 852 3 view .LVU709
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2517              		.loc 2 857 4 view .LVU710
 2518              		.syntax unified
 2519              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2520 01a4 94FAA4F4 		rbit r4, r4
 2521              	@ 0 "" 2
 2522              	.LVL148:
 2523              		.loc 2 870 3 view .LVU711
 2524              		.loc 2 870 3 is_stmt 0 view .LVU712
 2525              		.thumb
 2526              		.syntax unified
 2527              	.LBE91:
 2528              	.LBE90:
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel),
 2529              		.loc 1 2382 9 view .LVU713
 2530 01a8 B4FA84F4 		clz	r4, r4
 2531 01ac 04FB00F0 		mul	r0, r4, r0
 2532 01b0 05FA00F0 		lsl	r0, r5, r0
 2533 01b4 3043     		orrs	r0, r0, r6
 2534 01b6 5061     		str	r0, [r2, #20]
 2535 01b8 7BE7     		b	.L178
 2536              	.LVL149:
 2537              	.L184:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2538              		.loc 1 2402 12 is_stmt 1 view .LVU714
 2539 01ba 256E     		ldr	r5, [r4, #96]
 2540 01bc 05F00045 		and	r5, r5, #-2147483648
 2541 01c0 0868     		ldr	r0, [r1]
 2542              	.LVL150:
 2543              	.LBB92:
 2544              	.LBI92:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2545              		.loc 2 850 57 view .LVU715
 2546              	.LBB93:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2547              		.loc 2 852 3 view .LVU716
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2548              		.loc 2 857 4 view .LVU717
 2549 01c2 4FF0F846 		mov	r6, #2080374784
 2550              		.syntax unified
 2551              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2552 01c6 96FAA6F6 		rbit r6, r6
 2553              	@ 0 "" 2
ARM GAS  /tmp/ccodtIyF.s 			page 127


 2554              	.LVL151:
 2555              		.loc 2 870 3 view .LVU718
 2556              		.loc 2 870 3 is_stmt 0 view .LVU719
 2557              		.thumb
 2558              		.syntax unified
 2559              	.LBE93:
 2560              	.LBE92:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2561              		.loc 1 2402 12 view .LVU720
 2562 01ca B6FA86F6 		clz	r6, r6
 2563 01ce B040     		lsls	r0, r0, r6
 2564 01d0 0243     		orrs	r2, r2, r0
 2565              	.LVL152:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2566              		.loc 1 2402 12 view .LVU721
 2567 01d2 2A43     		orrs	r2, r2, r5
 2568 01d4 2266     		str	r2, [r4, #96]
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            /* Enable or disable the signed saturation bit */
 2569              		.loc 1 2405 12 is_stmt 1 view .LVU722
 2570 01d6 1868     		ldr	r0, [r3]
 2571 01d8 0269     		ldr	r2, [r0, #16]
 2572 01da 22F40062 		bic	r2, r2, #2048
 2573 01de 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 2574 01e0 2243     		orrs	r2, r2, r4
 2575 01e2 0261     		str	r2, [r0, #16]
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2576              		.loc 1 2407 12 view .LVU723
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2577              		.loc 1 2407 22 is_stmt 0 view .LVU724
 2578 01e4 4A7E     		ldrb	r2, [r1, #25]	@ zero_extendqisi2
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2579              		.loc 1 2407 14 view .LVU725
 2580 01e6 7AB3     		cbz	r2, .L185
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
 2581              		.loc 1 2409 15 is_stmt 1 view .LVU726
 2582 01e8 1868     		ldr	r0, [r3]
 2583 01ea 026E     		ldr	r2, [r0, #96]
 2584 01ec 42F00042 		orr	r2, r2, #-2147483648
 2585 01f0 0266     		str	r2, [r0, #96]
 2586              	.L176:
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2587              		.loc 1 2497 5 view .LVU727
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2588              		.loc 1 2497 9 is_stmt 0 view .LVU728
 2589 01f2 1868     		ldr	r0, [r3]
 2590 01f4 8268     		ldr	r2, [r0, #8]
 2591 01f6 02F00302 		and	r2, r2, #3
 2592 01fa 012A     		cmp	r2, #1
 2593 01fc 00F0E380 		beq	.L228
 2594              	.L192:
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2595              		.loc 1 2500 7 is_stmt 1 view .LVU729
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2596              		.loc 1 2500 18 is_stmt 0 view .LVU730
 2597 0200 CA68     		ldr	r2, [r1, #12]
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2598              		.loc 1 2500 10 view .LVU731
ARM GAS  /tmp/ccodtIyF.s 			page 128


 2599 0202 B2F1804F 		cmp	r2, #1073741824
 2600 0206 00F0E580 		beq	.L194
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2601              		.loc 1 2503 9 is_stmt 1 view .LVU732
 2602 020a D0F8C020 		ldr	r2, [r0, #192]
 2603 020e 0D68     		ldr	r5, [r1]
 2604 0210 0124     		movs	r4, #1
 2605 0212 AC40     		lsls	r4, r4, r5
 2606 0214 22EA0402 		bic	r2, r2, r4
 2607 0218 C0F8C020 		str	r2, [r0, #192]
 2608              	.L195:
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2609              		.loc 1 2535 7 view .LVU733
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2610              		.loc 1 2535 15 is_stmt 0 view .LVU734
 2611 021c 1A68     		ldr	r2, [r3]
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2612              		.loc 1 2535 9 view .LVU735
 2613 021e AD4C     		ldr	r4, .L244
 2614 0220 AD48     		ldr	r0, .L244+4
 2615 0222 8242     		cmp	r2, r0
 2616 0224 18BF     		it	ne
 2617 0226 A242     		cmpne	r2, r4
 2618 0228 40F01581 		bne	.L217
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2619              		.loc 1 2538 23 view .LVU736
 2620 022c 00F50070 		add	r0, r0, #512
 2621              	.L197:
 2622              	.LVL153:
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 2623              		.loc 1 2548 7 is_stmt 1 view .LVU737
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 2624              		.loc 1 2548 21 is_stmt 0 view .LVU738
 2625 0230 0968     		ldr	r1, [r1]
 2626              	.LVL154:
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 2627              		.loc 1 2548 10 view .LVU739
 2628 0232 1229     		cmp	r1, #18
 2629 0234 00F01181 		beq	.L229
 2630              	.L198:
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VBAT_DIV4)       &&
 2631              		.loc 1 2549 77 view .LVU740
 2632 0238 1129     		cmp	r1, #17
 2633 023a 00F03681 		beq	.L230
 2634              	.L200:
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 2635              		.loc 1 2551 77 view .LVU741
 2636 023e 1329     		cmp	r1, #19
 2637 0240 00F03881 		beq	.L231
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2638              		.loc 1 2272 21 view .LVU742
 2639 0244 0020     		movs	r0, #0
 2640              	.LVL155:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2641              		.loc 1 2272 21 view .LVU743
 2642 0246 C8E1     		b	.L193
 2643              	.LVL156:
ARM GAS  /tmp/ccodtIyF.s 			page 129


 2644              	.L185:
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
 2645              		.loc 1 2413 14 is_stmt 1 view .LVU744
 2646 0248 1868     		ldr	r0, [r3]
 2647 024a 026E     		ldr	r2, [r0, #96]
 2648 024c 22F00042 		bic	r2, r2, #-2147483648
 2649 0250 0266     		str	r2, [r0, #96]
 2650 0252 CEE7     		b	.L176
 2651              	.LVL157:
 2652              	.L183:
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2653              		.loc 1 2418 11 view .LVU745
 2654 0254 656E     		ldr	r5, [r4, #100]
 2655 0256 05F00045 		and	r5, r5, #-2147483648
 2656 025a 0868     		ldr	r0, [r1]
 2657              	.LVL158:
 2658              	.LBB94:
 2659              	.LBI94:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2660              		.loc 2 850 57 view .LVU746
 2661              	.LBB95:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2662              		.loc 2 852 3 view .LVU747
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2663              		.loc 2 857 4 view .LVU748
 2664 025c 4FF0F846 		mov	r6, #2080374784
 2665              		.syntax unified
 2666              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2667 0260 96FAA6F6 		rbit r6, r6
 2668              	@ 0 "" 2
 2669              	.LVL159:
 2670              		.loc 2 870 3 view .LVU749
 2671              		.loc 2 870 3 is_stmt 0 view .LVU750
 2672              		.thumb
 2673              		.syntax unified
 2674              	.LBE95:
 2675              	.LBE94:
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2676              		.loc 1 2418 11 view .LVU751
 2677 0264 B6FA86F6 		clz	r6, r6
 2678 0268 B040     		lsls	r0, r0, r6
 2679 026a 0243     		orrs	r2, r2, r0
 2680              	.LVL160:
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2681              		.loc 1 2418 11 view .LVU752
 2682 026c 2A43     		orrs	r2, r2, r5
 2683 026e 6266     		str	r2, [r4, #100]
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable or disable the signed saturation bit */
 2684              		.loc 1 2421 11 is_stmt 1 view .LVU753
 2685 0270 1868     		ldr	r0, [r3]
 2686 0272 0269     		ldr	r2, [r0, #16]
 2687 0274 22F48052 		bic	r2, r2, #4096
 2688 0278 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 2689 027a 42EA4402 		orr	r2, r2, r4, lsl #1
 2690 027e 0261     		str	r2, [r0, #16]
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2691              		.loc 1 2423 12 view .LVU754
ARM GAS  /tmp/ccodtIyF.s 			page 130


2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2692              		.loc 1 2423 22 is_stmt 0 view .LVU755
 2693 0280 4A7E     		ldrb	r2, [r1, #25]	@ zero_extendqisi2
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2694              		.loc 1 2423 14 view .LVU756
 2695 0282 2AB1     		cbz	r2, .L186
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
 2696              		.loc 1 2425 15 is_stmt 1 view .LVU757
 2697 0284 1868     		ldr	r0, [r3]
 2698 0286 426E     		ldr	r2, [r0, #100]
 2699 0288 42F00042 		orr	r2, r2, #-2147483648
 2700 028c 4266     		str	r2, [r0, #100]
 2701 028e B0E7     		b	.L176
 2702              	.L186:
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
 2703              		.loc 1 2429 14 view .LVU758
 2704 0290 1868     		ldr	r0, [r3]
 2705 0292 426E     		ldr	r2, [r0, #100]
 2706 0294 22F00042 		bic	r2, r2, #-2147483648
 2707 0298 4266     		str	r2, [r0, #100]
 2708 029a AAE7     		b	.L176
 2709              	.LVL161:
 2710              	.L182:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2711              		.loc 1 2434 11 view .LVU759
 2712 029c A56E     		ldr	r5, [r4, #104]
 2713 029e 05F00045 		and	r5, r5, #-2147483648
 2714 02a2 0868     		ldr	r0, [r1]
 2715              	.LVL162:
 2716              	.LBB96:
 2717              	.LBI96:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2718              		.loc 2 850 57 view .LVU760
 2719              	.LBB97:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2720              		.loc 2 852 3 view .LVU761
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2721              		.loc 2 857 4 view .LVU762
 2722 02a4 4FF0F846 		mov	r6, #2080374784
 2723              		.syntax unified
 2724              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2725 02a8 96FAA6F6 		rbit r6, r6
 2726              	@ 0 "" 2
 2727              	.LVL163:
 2728              		.loc 2 870 3 view .LVU763
 2729              		.loc 2 870 3 is_stmt 0 view .LVU764
 2730              		.thumb
 2731              		.syntax unified
 2732              	.LBE97:
 2733              	.LBE96:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2734              		.loc 1 2434 11 view .LVU765
 2735 02ac B6FA86F6 		clz	r6, r6
 2736 02b0 B040     		lsls	r0, r0, r6
 2737 02b2 0243     		orrs	r2, r2, r0
 2738              	.LVL164:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
ARM GAS  /tmp/ccodtIyF.s 			page 131


 2739              		.loc 1 2434 11 view .LVU766
 2740 02b4 2A43     		orrs	r2, r2, r5
 2741 02b6 A266     		str	r2, [r4, #104]
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable or disable the signed saturation bit */
 2742              		.loc 1 2437 11 is_stmt 1 view .LVU767
 2743 02b8 1868     		ldr	r0, [r3]
 2744 02ba 0269     		ldr	r2, [r0, #16]
 2745 02bc 22F40052 		bic	r2, r2, #8192
 2746 02c0 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 2747 02c2 42EA8402 		orr	r2, r2, r4, lsl #2
 2748 02c6 0261     		str	r2, [r0, #16]
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2749              		.loc 1 2439 12 view .LVU768
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2750              		.loc 1 2439 22 is_stmt 0 view .LVU769
 2751 02c8 4A7E     		ldrb	r2, [r1, #25]	@ zero_extendqisi2
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            {
 2752              		.loc 1 2439 14 view .LVU770
 2753 02ca 2AB1     		cbz	r2, .L187
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
 2754              		.loc 1 2441 15 is_stmt 1 view .LVU771
 2755 02cc 1868     		ldr	r0, [r3]
 2756 02ce 826E     		ldr	r2, [r0, #104]
 2757 02d0 42F00042 		orr	r2, r2, #-2147483648
 2758 02d4 8266     		str	r2, [r0, #104]
 2759 02d6 8CE7     		b	.L176
 2760              	.L187:
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            }
 2761              		.loc 1 2445 14 view .LVU772
 2762 02d8 1868     		ldr	r0, [r3]
 2763 02da 826E     		ldr	r2, [r0, #104]
 2764 02dc 22F00042 		bic	r2, r2, #-2147483648
 2765 02e0 8266     		str	r2, [r0, #104]
 2766 02e2 86E7     		b	.L176
 2767              	.LVL165:
 2768              	.L180:
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2769              		.loc 1 2450 11 view .LVU773
 2770 02e4 E56E     		ldr	r5, [r4, #108]
 2771 02e6 05F00045 		and	r5, r5, #-2147483648
 2772 02ea 0868     		ldr	r0, [r1]
 2773              	.LVL166:
 2774              	.LBB98:
 2775              	.LBI98:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2776              		.loc 2 850 57 view .LVU774
 2777              	.LBB99:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2778              		.loc 2 852 3 view .LVU775
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2779              		.loc 2 857 4 view .LVU776
 2780 02ec 4FF0F846 		mov	r6, #2080374784
 2781              		.syntax unified
 2782              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2783 02f0 96FAA6F6 		rbit r6, r6
 2784              	@ 0 "" 2
 2785              	.LVL167:
ARM GAS  /tmp/ccodtIyF.s 			page 132


 2786              		.loc 2 870 3 view .LVU777
 2787              		.loc 2 870 3 is_stmt 0 view .LVU778
 2788              		.thumb
 2789              		.syntax unified
 2790              	.LBE99:
 2791              	.LBE98:
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2792              		.loc 1 2450 11 view .LVU779
 2793 02f4 B6FA86F6 		clz	r6, r6
 2794 02f8 B040     		lsls	r0, r0, r6
 2795 02fa 0243     		orrs	r2, r2, r0
 2796              	.LVL168:
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_OFR_FIELDS,
 2797              		.loc 1 2450 11 view .LVU780
 2798 02fc 2A43     		orrs	r2, r2, r5
 2799 02fe E266     		str	r2, [r4, #108]
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable or disable the signed saturation bit */
 2800              		.loc 1 2453 11 is_stmt 1 view .LVU781
 2801 0300 1868     		ldr	r0, [r3]
 2802 0302 0269     		ldr	r2, [r0, #16]
 2803 0304 22F48042 		bic	r2, r2, #16384
 2804 0308 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 2805 030a 42EAC402 		orr	r2, r2, r4, lsl #3
 2806 030e 0261     		str	r2, [r0, #16]
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2807              		.loc 1 2455 11 view .LVU782
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2808              		.loc 1 2455 21 is_stmt 0 view .LVU783
 2809 0310 4A7E     		ldrb	r2, [r1, #25]	@ zero_extendqisi2
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2810              		.loc 1 2455 13 view .LVU784
 2811 0312 2AB1     		cbz	r2, .L188
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2812              		.loc 1 2457 13 is_stmt 1 view .LVU785
 2813 0314 1868     		ldr	r0, [r3]
 2814 0316 C26E     		ldr	r2, [r0, #108]
 2815 0318 42F00042 		orr	r2, r2, #-2147483648
 2816 031c C266     		str	r2, [r0, #108]
 2817 031e 68E7     		b	.L176
 2818              	.L188:
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2819              		.loc 1 2461 13 view .LVU786
 2820 0320 1868     		ldr	r0, [r3]
 2821 0322 C26E     		ldr	r2, [r0, #108]
 2822 0324 22F00042 		bic	r2, r2, #-2147483648
 2823 0328 C266     		str	r2, [r0, #108]
 2824 032a 62E7     		b	.L176
 2825              	.LVL169:
 2826              	.L179:
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2827              		.loc 1 2470 11 view .LVU787
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2828              		.loc 1 2470 31 is_stmt 0 view .LVU788
 2829 032c 256E     		ldr	r5, [r4, #96]
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2830              		.loc 1 2470 39 view .LVU789
 2831 032e 05F0F845 		and	r5, r5, #2080374784
ARM GAS  /tmp/ccodtIyF.s 			page 133


2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2832              		.loc 1 2470 65 view .LVU790
 2833 0332 0868     		ldr	r0, [r1]
 2834              	.LVL170:
 2835              	.LBB100:
 2836              	.LBI100:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2837              		.loc 2 850 57 is_stmt 1 view .LVU791
 2838              	.LBB101:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2839              		.loc 2 852 3 view .LVU792
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2840              		.loc 2 857 4 view .LVU793
 2841 0334 4FF0F842 		mov	r2, #2080374784
 2842              	.LVL171:
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2843              		.loc 2 857 4 is_stmt 0 view .LVU794
 2844              		.syntax unified
 2845              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2846 0338 92FAA2F2 		rbit r2, r2
 2847              	@ 0 "" 2
 2848              	.LVL172:
 2849              		.loc 2 870 3 is_stmt 1 view .LVU795
 2850              		.loc 2 870 3 is_stmt 0 view .LVU796
 2851              		.thumb
 2852              		.syntax unified
 2853              	.LBE101:
 2854              	.LBE100:
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2855              		.loc 1 2470 65 view .LVU797
 2856 033c B2FA82F2 		clz	r2, r2
 2857 0340 00FA02F2 		lsl	r2, r0, r2
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2858              		.loc 1 2470 14 view .LVU798
 2859 0344 9542     		cmp	r5, r2
 2860 0346 03D1     		bne	.L189
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2861              		.loc 1 2472 13 is_stmt 1 view .LVU799
 2862 0348 226E     		ldr	r2, [r4, #96]
 2863 034a 22F00042 		bic	r2, r2, #-2147483648
 2864 034e 2266     		str	r2, [r4, #96]
 2865              	.L189:
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2866              		.loc 1 2474 11 view .LVU800
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2867              		.loc 1 2474 21 is_stmt 0 view .LVU801
 2868 0350 1868     		ldr	r0, [r3]
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2869              		.loc 1 2474 31 view .LVU802
 2870 0352 456E     		ldr	r5, [r0, #100]
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2871              		.loc 1 2474 39 view .LVU803
 2872 0354 05F0F845 		and	r5, r5, #2080374784
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2873              		.loc 1 2474 65 view .LVU804
 2874 0358 0C68     		ldr	r4, [r1]
 2875              	.LVL173:
ARM GAS  /tmp/ccodtIyF.s 			page 134


 2876              	.LBB102:
 2877              	.LBI102:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2878              		.loc 2 850 57 is_stmt 1 view .LVU805
 2879              	.LBB103:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2880              		.loc 2 852 3 view .LVU806
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2881              		.loc 2 857 4 view .LVU807
 2882 035a 4FF0F842 		mov	r2, #2080374784
 2883              		.syntax unified
 2884              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2885 035e 92FAA2F2 		rbit r2, r2
 2886              	@ 0 "" 2
 2887              	.LVL174:
 2888              		.loc 2 870 3 view .LVU808
 2889              		.loc 2 870 3 is_stmt 0 view .LVU809
 2890              		.thumb
 2891              		.syntax unified
 2892              	.LBE103:
 2893              	.LBE102:
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2894              		.loc 1 2474 65 view .LVU810
 2895 0362 B2FA82F2 		clz	r2, r2
 2896 0366 04FA02F2 		lsl	r2, r4, r2
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2897              		.loc 1 2474 14 view .LVU811
 2898 036a 9542     		cmp	r5, r2
 2899 036c 03D1     		bne	.L190
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2900              		.loc 1 2476 13 is_stmt 1 view .LVU812
 2901 036e 426E     		ldr	r2, [r0, #100]
 2902 0370 22F00042 		bic	r2, r2, #-2147483648
 2903 0374 4266     		str	r2, [r0, #100]
 2904              	.L190:
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2905              		.loc 1 2478 11 view .LVU813
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2906              		.loc 1 2478 21 is_stmt 0 view .LVU814
 2907 0376 1868     		ldr	r0, [r3]
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2908              		.loc 1 2478 31 view .LVU815
 2909 0378 856E     		ldr	r5, [r0, #104]
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2910              		.loc 1 2478 39 view .LVU816
 2911 037a 05F0F845 		and	r5, r5, #2080374784
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2912              		.loc 1 2478 65 view .LVU817
 2913 037e 0C68     		ldr	r4, [r1]
 2914              	.LVL175:
 2915              	.LBB104:
 2916              	.LBI104:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2917              		.loc 2 850 57 is_stmt 1 view .LVU818
 2918              	.LBB105:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2919              		.loc 2 852 3 view .LVU819
ARM GAS  /tmp/ccodtIyF.s 			page 135


 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2920              		.loc 2 857 4 view .LVU820
 2921 0380 4FF0F842 		mov	r2, #2080374784
 2922              		.syntax unified
 2923              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2924 0384 92FAA2F2 		rbit r2, r2
 2925              	@ 0 "" 2
 2926              	.LVL176:
 2927              		.loc 2 870 3 view .LVU821
 2928              		.loc 2 870 3 is_stmt 0 view .LVU822
 2929              		.thumb
 2930              		.syntax unified
 2931              	.LBE105:
 2932              	.LBE104:
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2933              		.loc 1 2478 65 view .LVU823
 2934 0388 B2FA82F2 		clz	r2, r2
 2935 038c 04FA02F2 		lsl	r2, r4, r2
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2936              		.loc 1 2478 14 view .LVU824
 2937 0390 9542     		cmp	r5, r2
 2938 0392 03D1     		bne	.L191
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2939              		.loc 1 2480 13 is_stmt 1 view .LVU825
 2940 0394 826E     		ldr	r2, [r0, #104]
 2941 0396 22F00042 		bic	r2, r2, #-2147483648
 2942 039a 8266     		str	r2, [r0, #104]
 2943              	.L191:
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2944              		.loc 1 2482 11 view .LVU826
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2945              		.loc 1 2482 21 is_stmt 0 view .LVU827
 2946 039c 1868     		ldr	r0, [r3]
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2947              		.loc 1 2482 31 view .LVU828
 2948 039e C56E     		ldr	r5, [r0, #108]
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2949              		.loc 1 2482 39 view .LVU829
 2950 03a0 05F0F845 		and	r5, r5, #2080374784
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2951              		.loc 1 2482 65 view .LVU830
 2952 03a4 0C68     		ldr	r4, [r1]
 2953              	.LVL177:
 2954              	.LBB106:
 2955              	.LBI106:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2956              		.loc 2 850 57 is_stmt 1 view .LVU831
 2957              	.LBB107:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2958              		.loc 2 852 3 view .LVU832
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2959              		.loc 2 857 4 view .LVU833
 2960 03a6 4FF0F842 		mov	r2, #2080374784
 2961              		.syntax unified
 2962              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2963 03aa 92FAA2F2 		rbit r2, r2
 2964              	@ 0 "" 2
ARM GAS  /tmp/ccodtIyF.s 			page 136


 2965              	.LVL178:
 2966              		.loc 2 870 3 view .LVU834
 2967              		.loc 2 870 3 is_stmt 0 view .LVU835
 2968              		.thumb
 2969              		.syntax unified
 2970              	.LBE107:
 2971              	.LBE106:
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2972              		.loc 1 2482 65 view .LVU836
 2973 03ae B2FA82F2 		clz	r2, r2
 2974 03b2 04FA02F2 		lsl	r2, r4, r2
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2975              		.loc 1 2482 14 view .LVU837
 2976 03b6 9542     		cmp	r5, r2
 2977 03b8 7FF41BAF 		bne	.L176
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2978              		.loc 1 2484 13 is_stmt 1 view .LVU838
 2979 03bc C26E     		ldr	r2, [r0, #108]
 2980 03be 22F00042 		bic	r2, r2, #-2147483648
 2981 03c2 C266     		str	r2, [r0, #108]
 2982 03c4 15E7     		b	.L176
 2983              	.L228:
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2984              		.loc 1 2497 9 is_stmt 0 discriminator 1 view .LVU839
 2985 03c6 0268     		ldr	r2, [r0]
 2986 03c8 12F0010F 		tst	r2, #1
 2987 03cc 3FF418AF 		beq	.L192
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2988              		.loc 1 2272 21 view .LVU840
 2989 03d0 0020     		movs	r0, #0
 2990 03d2 02E1     		b	.L193
 2991              	.L194:
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
 2992              		.loc 1 2508 9 is_stmt 1 view .LVU841
 2993 03d4 D0F8C020 		ldr	r2, [r0, #192]
 2994 03d8 0D68     		ldr	r5, [r1]
 2995 03da 0124     		movs	r4, #1
 2996 03dc AC40     		lsls	r4, r4, r5
 2997 03de 2243     		orrs	r2, r2, r4
 2998 03e0 C0F8C020 		str	r2, [r0, #192]
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2999              		.loc 1 2515 9 view .LVU842
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3000              		.loc 1 2515 20 is_stmt 0 view .LVU843
 3001 03e4 0A68     		ldr	r2, [r1]
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3002              		.loc 1 2515 12 view .LVU844
 3003 03e6 082A     		cmp	r2, #8
 3004 03e8 1AD9     		bls	.L196
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1),
 3005              		.loc 1 2517 11 is_stmt 1 view .LVU845
 3006 03ea 1E68     		ldr	r6, [r3]
 3007 03ec B569     		ldr	r5, [r6, #24]
 3008              	.LVL179:
 3009              	.LBB108:
 3010              	.LBI108:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccodtIyF.s 			page 137


 3011              		.loc 2 850 57 view .LVU846
 3012              	.LBB109:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3013              		.loc 2 852 3 view .LVU847
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3014              		.loc 2 857 4 view .LVU848
 3015 03ee 3820     		movs	r0, #56
 3016              		.syntax unified
 3017              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3018 03f0 90FAA0F4 		rbit r4, r0
 3019              	@ 0 "" 2
 3020              	.LVL180:
 3021              		.loc 2 870 3 view .LVU849
 3022              		.loc 2 870 3 is_stmt 0 view .LVU850
 3023              		.thumb
 3024              		.syntax unified
 3025              	.LBE109:
 3026              	.LBE108:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1),
 3027              		.loc 1 2517 11 view .LVU851
 3028 03f4 B4FA84F4 		clz	r4, r4
 3029 03f8 093A     		subs	r2, r2, #9
 3030 03fa 02FB04F4 		mul	r4, r2, r4
 3031 03fe 0727     		movs	r7, #7
 3032 0400 07FA04F4 		lsl	r4, r7, r4
 3033 0404 25EA0405 		bic	r5, r5, r4
 3034 0408 8C68     		ldr	r4, [r1, #8]
 3035              	.LVL181:
 3036              	.LBB110:
 3037              	.LBI110:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3038              		.loc 2 850 57 is_stmt 1 view .LVU852
 3039              	.LBB111:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3040              		.loc 2 852 3 view .LVU853
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3041              		.loc 2 857 4 view .LVU854
 3042              		.syntax unified
 3043              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3044 040a 90FAA0F0 		rbit r0, r0
 3045              	@ 0 "" 2
 3046              	.LVL182:
 3047              		.loc 2 870 3 view .LVU855
 3048              		.loc 2 870 3 is_stmt 0 view .LVU856
 3049              		.thumb
 3050              		.syntax unified
 3051              	.LBE111:
 3052              	.LBE110:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1),
 3053              		.loc 1 2517 11 view .LVU857
 3054 040e B0FA80F0 		clz	r0, r0
 3055 0412 00FB02F2 		mul	r2, r0, r2
 3056 0416 04FA02F2 		lsl	r2, r4, r2
 3057 041a 2A43     		orrs	r2, r2, r5
 3058 041c B261     		str	r2, [r6, #24]
 3059 041e FDE6     		b	.L195
 3060              	.L196:
ARM GAS  /tmp/ccodtIyF.s 			page 138


2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1),
 3061              		.loc 1 2523 11 is_stmt 1 view .LVU858
 3062 0420 1E68     		ldr	r6, [r3]
 3063 0422 7569     		ldr	r5, [r6, #20]
 3064              	.LVL183:
 3065              	.LBB112:
 3066              	.LBI112:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3067              		.loc 2 850 57 view .LVU859
 3068              	.LBB113:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3069              		.loc 2 852 3 view .LVU860
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3070              		.loc 2 857 4 view .LVU861
 3071 0424 3820     		movs	r0, #56
 3072              		.syntax unified
 3073              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3074 0426 90FAA0F4 		rbit r4, r0
 3075              	@ 0 "" 2
 3076              	.LVL184:
 3077              		.loc 2 870 3 view .LVU862
 3078              		.loc 2 870 3 is_stmt 0 view .LVU863
 3079              		.thumb
 3080              		.syntax unified
 3081              	.LBE113:
 3082              	.LBE112:
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1),
 3083              		.loc 1 2523 11 view .LVU864
 3084 042a B4FA84F4 		clz	r4, r4
 3085 042e 0132     		adds	r2, r2, #1
 3086 0430 02FB04F4 		mul	r4, r2, r4
 3087 0434 0727     		movs	r7, #7
 3088 0436 07FA04F4 		lsl	r4, r7, r4
 3089 043a 25EA0405 		bic	r5, r5, r4
 3090 043e 8C68     		ldr	r4, [r1, #8]
 3091              	.LVL185:
 3092              	.LBB114:
 3093              	.LBI114:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3094              		.loc 2 850 57 is_stmt 1 view .LVU865
 3095              	.LBB115:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3096              		.loc 2 852 3 view .LVU866
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3097              		.loc 2 857 4 view .LVU867
 3098              		.syntax unified
 3099              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3100 0440 90FAA0F0 		rbit r0, r0
 3101              	@ 0 "" 2
 3102              	.LVL186:
 3103              		.loc 2 870 3 view .LVU868
 3104              		.loc 2 870 3 is_stmt 0 view .LVU869
 3105              		.thumb
 3106              		.syntax unified
 3107              	.LBE115:
 3108              	.LBE114:
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1),
ARM GAS  /tmp/ccodtIyF.s 			page 139


 3109              		.loc 1 2523 11 view .LVU870
 3110 0444 B0FA80F0 		clz	r0, r0
 3111 0448 00FB02F2 		mul	r2, r0, r2
 3112 044c 04FA02F2 		lsl	r2, r4, r2
 3113 0450 2A43     		orrs	r2, r2, r5
 3114 0452 7261     		str	r2, [r6, #20]
 3115 0454 E2E6     		b	.L195
 3116              	.L217:
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3117              		.loc 1 2543 23 view .LVU871
 3118 0456 2148     		ldr	r0, .L244+8
 3119 0458 EAE6     		b	.L197
 3120              	.LVL187:
 3121              	.L229:
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VBAT_DIV4)       &&
 3122              		.loc 1 2549 14 discriminator 1 view .LVU872
 3123 045a 8468     		ldr	r4, [r0, #8]
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 3124              		.loc 1 2548 58 discriminator 1 view .LVU873
 3125 045c 14F4000F 		tst	r4, #8388608
 3126 0460 7FF4EAAE 		bne	.L198
 3127              	.L199:
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 3128              		.loc 1 2560 9 is_stmt 1 view .LVU874
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 3129              		.loc 1 2560 14 is_stmt 0 view .LVU875
 3130 0464 9468     		ldr	r4, [r2, #8]
 3131 0466 04F00304 		and	r4, r4, #3
 3132 046a 012C     		cmp	r4, #1
 3133 046c 28D0     		beq	.L232
 3134              	.L201:
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 3135              		.loc 1 2560 12 view .LVU876
 3136 046e 194C     		ldr	r4, .L244
 3137 0470 A242     		cmp	r2, r4
 3138 0472 35D0     		beq	.L233
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3139              		.loc 1 2561 13 view .LVU877
 3140 0474 184C     		ldr	r4, .L244+4
 3141 0476 A242     		cmp	r2, r4
 3142 0478 4BD0     		beq	.L234
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3143              		.loc 1 2561 13 discriminator 10 view .LVU878
 3144 047a 164C     		ldr	r4, .L244
 3145 047c A468     		ldr	r4, [r4, #8]
 3146 047e 04F00304 		and	r4, r4, #3
 3147 0482 012C     		cmp	r4, #1
 3148 0484 66D0     		beq	.L235
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3149              		.loc 1 2561 13 view .LVU879
 3150 0486 0024     		movs	r4, #0
 3151              	.L210:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3152              		.loc 1 2561 13 discriminator 27 view .LVU880
 3153 0488 F4B9     		cbnz	r4, .L202
 3154              	.L209:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  /tmp/ccodtIyF.s 			page 140


 3155              		.loc 1 2561 13 discriminator 29 view .LVU881
 3156 048a 134C     		ldr	r4, .L244+4
 3157 048c A468     		ldr	r4, [r4, #8]
 3158 048e 04F00304 		and	r4, r4, #3
 3159 0492 012C     		cmp	r4, #1
 3160 0494 67D0     		beq	.L236
 3161              	.L205:
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3162              		.loc 1 2565 11 is_stmt 1 view .LVU882
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3163              		.loc 1 2565 14 is_stmt 0 view .LVU883
 3164 0496 1229     		cmp	r1, #18
 3165 0498 6BD0     		beq	.L237
 3166              	.L211:
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3167              		.loc 1 2580 16 is_stmt 1 view .LVU884
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3168              		.loc 1 2580 19 is_stmt 0 view .LVU885
 3169 049a 1129     		cmp	r1, #17
 3170 049c 00F08380 		beq	.L238
 3171              	.L214:
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3172              		.loc 1 2586 16 is_stmt 1 view .LVU886
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3173              		.loc 1 2586 19 is_stmt 0 view .LVU887
 3174 04a0 1329     		cmp	r1, #19
 3175 04a2 00F08A80 		beq	.L239
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3176              		.loc 1 2272 21 view .LVU888
 3177 04a6 0020     		movs	r0, #0
 3178              	.LVL188:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3179              		.loc 1 2272 21 view .LVU889
 3180 04a8 97E0     		b	.L193
 3181              	.LVL189:
 3182              	.L230:
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 3183              		.loc 1 2551 14 view .LVU890
 3184 04aa 8468     		ldr	r4, [r0, #8]
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 3185              		.loc 1 2550 63 view .LVU891
 3186 04ac 14F0807F 		tst	r4, #16777216
 3187 04b0 D8D0     		beq	.L199
 3188 04b2 C4E6     		b	.L200
 3189              	.L231:
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 3190              		.loc 1 2553 14 view .LVU892
 3191 04b4 8468     		ldr	r4, [r0, #8]
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 3192              		.loc 1 2552 58 view .LVU893
 3193 04b6 14F4800F 		tst	r4, #4194304
 3194 04ba D3D0     		beq	.L199
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3195              		.loc 1 2272 21 view .LVU894
 3196 04bc 0020     		movs	r0, #0
 3197              	.LVL190:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 141


 3198              		.loc 1 2272 21 view .LVU895
 3199 04be 8CE0     		b	.L193
 3200              	.LVL191:
 3201              	.L232:
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 3202              		.loc 1 2560 14 discriminator 1 view .LVU896
 3203 04c0 1468     		ldr	r4, [r2]
 3204 04c2 14F0010F 		tst	r4, #1
 3205 04c6 D2D0     		beq	.L201
 3206              	.L202:
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
 3207              		.loc 1 2597 11 is_stmt 1 view .LVU897
 3208 04c8 5A6D     		ldr	r2, [r3, #84]
 3209 04ca 42F02002 		orr	r2, r2, #32
 3210 04ce 5A65     		str	r2, [r3, #84]
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3211              		.loc 1 2599 11 view .LVU898
 3212              	.LVL192:
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3213              		.loc 1 2599 26 is_stmt 0 view .LVU899
 3214 04d0 0120     		movs	r0, #1
 3215              	.LVL193:
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3216              		.loc 1 2599 26 view .LVU900
 3217 04d2 82E0     		b	.L193
 3218              	.L245:
 3219              		.align	2
 3220              	.L244:
 3221 04d4 00200240 		.word	1073881088
 3222 04d8 00210240 		.word	1073881344
 3223 04dc 00630258 		.word	1476551424
 3224              	.LVL194:
 3225              	.L233:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3226              		.loc 1 2561 13 view .LVU901
 3227 04e0 04F58074 		add	r4, r4, #256
 3228 04e4 A468     		ldr	r4, [r4, #8]
 3229 04e6 04F00304 		and	r4, r4, #3
 3230 04ea 012C     		cmp	r4, #1
 3231 04ec 0BD0     		beq	.L240
 3232              	.L204:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3233              		.loc 1 2561 13 discriminator 4 view .LVU902
 3234 04ee 3F4C     		ldr	r4, .L246
 3235 04f0 A468     		ldr	r4, [r4, #8]
 3236 04f2 04F00304 		and	r4, r4, #3
 3237 04f6 012C     		cmp	r4, #1
 3238 04f8 CDD1     		bne	.L205
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3239              		.loc 1 2561 13 discriminator 5 view .LVU903
 3240 04fa 3C4C     		ldr	r4, .L246
 3241 04fc 2468     		ldr	r4, [r4]
 3242 04fe 14F0010F 		tst	r4, #1
 3243 0502 E1D1     		bne	.L202
 3244 0504 C7E7     		b	.L205
 3245              	.L240:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  /tmp/ccodtIyF.s 			page 142


 3246              		.loc 1 2561 13 discriminator 1 view .LVU904
 3247 0506 3A4C     		ldr	r4, .L246+4
 3248 0508 2468     		ldr	r4, [r4]
 3249 050a 14F0010F 		tst	r4, #1
 3250 050e DBD1     		bne	.L202
 3251 0510 EDE7     		b	.L204
 3252              	.L234:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3253              		.loc 1 2561 13 discriminator 9 view .LVU905
 3254 0512 A4F58074 		sub	r4, r4, #256
 3255 0516 A468     		ldr	r4, [r4, #8]
 3256 0518 04F00304 		and	r4, r4, #3
 3257 051c 012C     		cmp	r4, #1
 3258 051e 09D0     		beq	.L241
 3259              	.L207:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3260              		.loc 1 2561 13 discriminator 14 view .LVU906
 3261 0520 324C     		ldr	r4, .L246
 3262 0522 A468     		ldr	r4, [r4, #8]
 3263 0524 04F00304 		and	r4, r4, #3
 3264 0528 012C     		cmp	r4, #1
 3265 052a 0AD0     		beq	.L242
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3266              		.loc 1 2561 13 view .LVU907
 3267 052c 0024     		movs	r4, #0
 3268              	.L208:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3269              		.loc 1 2561 13 discriminator 20 view .LVU908
 3270 052e 002C     		cmp	r4, #0
 3271 0530 CAD1     		bne	.L202
 3272 0532 AAE7     		b	.L209
 3273              	.L241:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3274              		.loc 1 2561 13 discriminator 11 view .LVU909
 3275 0534 2F4C     		ldr	r4, .L246+8
 3276 0536 2468     		ldr	r4, [r4]
 3277 0538 14F0010F 		tst	r4, #1
 3278 053c F0D0     		beq	.L207
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3279              		.loc 1 2561 13 view .LVU910
 3280 053e 0124     		movs	r4, #1
 3281 0540 F5E7     		b	.L208
 3282              	.L242:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3283              		.loc 1 2561 13 discriminator 15 view .LVU911
 3284 0542 2A4C     		ldr	r4, .L246
 3285 0544 2468     		ldr	r4, [r4]
 3286 0546 14F0010F 		tst	r4, #1
 3287 054a 01D1     		bne	.L222
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3288              		.loc 1 2561 13 view .LVU912
 3289 054c 0024     		movs	r4, #0
 3290 054e EEE7     		b	.L208
 3291              	.L222:
 3292 0550 0124     		movs	r4, #1
 3293 0552 ECE7     		b	.L208
 3294              	.L235:
ARM GAS  /tmp/ccodtIyF.s 			page 143


2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3295              		.loc 1 2561 13 discriminator 22 view .LVU913
 3296 0554 274C     		ldr	r4, .L246+8
 3297 0556 2468     		ldr	r4, [r4]
 3298 0558 14F0010F 		tst	r4, #1
 3299 055c 01D1     		bne	.L224
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3300              		.loc 1 2561 13 view .LVU914
 3301 055e 0024     		movs	r4, #0
 3302 0560 92E7     		b	.L210
 3303              	.L224:
 3304 0562 0124     		movs	r4, #1
 3305 0564 90E7     		b	.L210
 3306              	.L236:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3307              		.loc 1 2561 13 discriminator 30 view .LVU915
 3308 0566 224C     		ldr	r4, .L246+4
 3309 0568 2468     		ldr	r4, [r4]
 3310 056a 14F0010F 		tst	r4, #1
 3311 056e ABD1     		bne	.L202
 3312 0570 91E7     		b	.L205
 3313              	.L237:
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3314              		.loc 1 2565 60 discriminator 1 view .LVU916
 3315 0572 1E4C     		ldr	r4, .L246
 3316 0574 A242     		cmp	r2, r4
 3317 0576 90D1     		bne	.L211
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     
 3318              		.loc 1 2567 14 is_stmt 1 view .LVU917
 3319 0578 8268     		ldr	r2, [r0, #8]
 3320 057a 42F40002 		orr	r2, r2, #8388608
 3321 057e 8260     		str	r2, [r0, #8]
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             while(wait_loop_index != 0)
 3322              		.loc 1 2572 13 view .LVU918
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             while(wait_loop_index != 0)
 3323              		.loc 1 2572 75 is_stmt 0 view .LVU919
 3324 0580 1D4A     		ldr	r2, .L246+12
 3325 0582 1268     		ldr	r2, [r2]
 3326 0584 1D49     		ldr	r1, .L246+16
 3327 0586 A1FB0212 		umull	r1, r2, r1, r2
 3328 058a D20C     		lsrs	r2, r2, #19
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             while(wait_loop_index != 0)
 3329              		.loc 1 2572 56 view .LVU920
 3330 058c C2EB0212 		rsb	r2, r2, r2, lsl #4
 3331 0590 D100     		lsls	r1, r2, #3
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             while(wait_loop_index != 0)
 3332              		.loc 1 2572 29 view .LVU921
 3333 0592 0191     		str	r1, [sp, #4]
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3334              		.loc 1 2573 13 is_stmt 1 view .LVU922
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3335              		.loc 1 2573 18 is_stmt 0 view .LVU923
 3336 0594 02E0     		b	.L212
 3337              	.L213:
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3338              		.loc 1 2575 15 is_stmt 1 view .LVU924
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
ARM GAS  /tmp/ccodtIyF.s 			page 144


 3339              		.loc 1 2575 30 is_stmt 0 view .LVU925
 3340 0596 019A     		ldr	r2, [sp, #4]
 3341 0598 013A     		subs	r2, r2, #1
 3342 059a 0192     		str	r2, [sp, #4]
 3343              	.L212:
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3344              		.loc 1 2573 35 view .LVU926
 3345 059c 019A     		ldr	r2, [sp, #4]
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3346              		.loc 1 2573 18 view .LVU927
 3347 059e 002A     		cmp	r2, #0
 3348 05a0 F9D1     		bne	.L213
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3349              		.loc 1 2272 21 view .LVU928
 3350 05a2 0020     		movs	r0, #0
 3351              	.LVL195:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3352              		.loc 1 2272 21 view .LVU929
 3353 05a4 19E0     		b	.L193
 3354              	.LVL196:
 3355              	.L238:
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3356              		.loc 1 2580 64 discriminator 1 view .LVU930
 3357 05a6 114C     		ldr	r4, .L246
 3358 05a8 A242     		cmp	r2, r4
 3359 05aa 7FF479AF 		bne	.L214
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3360              		.loc 1 2582 13 is_stmt 1 view .LVU931
 3361 05ae 8268     		ldr	r2, [r0, #8]
 3362 05b0 42F08072 		orr	r2, r2, #16777216
 3363 05b4 8260     		str	r2, [r0, #8]
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3364              		.loc 1 2272 21 is_stmt 0 view .LVU932
 3365 05b6 0020     		movs	r0, #0
 3366              	.LVL197:
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3367              		.loc 1 2582 13 view .LVU933
 3368 05b8 0FE0     		b	.L193
 3369              	.LVL198:
 3370              	.L239:
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3371              		.loc 1 2586 62 discriminator 1 view .LVU934
 3372 05ba 0C49     		ldr	r1, .L246
 3373 05bc 8A42     		cmp	r2, r1
 3374 05be 01D0     		beq	.L243
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3375              		.loc 1 2272 21 view .LVU935
 3376 05c0 0020     		movs	r0, #0
 3377              	.LVL199:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3378              		.loc 1 2272 21 view .LVU936
 3379 05c2 0AE0     		b	.L193
 3380              	.LVL200:
 3381              	.L243:
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3382              		.loc 1 2588 13 is_stmt 1 view .LVU937
 3383 05c4 8268     		ldr	r2, [r0, #8]
ARM GAS  /tmp/ccodtIyF.s 			page 145


 3384 05c6 42F48002 		orr	r2, r2, #4194304
 3385 05ca 8260     		str	r2, [r0, #8]
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3386              		.loc 1 2272 21 is_stmt 0 view .LVU938
 3387 05cc 0020     		movs	r0, #0
 3388              	.LVL201:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3389              		.loc 1 2272 21 view .LVU939
 3390 05ce 04E0     		b	.L193
 3391              	.LVL202:
 3392              	.L171:
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3393              		.loc 1 2613 5 is_stmt 1 view .LVU940
 3394 05d0 5A6D     		ldr	r2, [r3, #84]
 3395 05d2 42F02002 		orr	r2, r2, #32
 3396 05d6 5A65     		str	r2, [r3, #84]
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3397              		.loc 1 2615 5 view .LVU941
 3398              	.LVL203:
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3399              		.loc 1 2615 20 is_stmt 0 view .LVU942
 3400 05d8 0120     		movs	r0, #1
 3401              	.LVL204:
 3402              	.L193:
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3403              		.loc 1 2619 3 is_stmt 1 view .LVU943
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3404              		.loc 1 2619 3 view .LVU944
 3405 05da 0022     		movs	r2, #0
 3406 05dc 83F85020 		strb	r2, [r3, #80]
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3407              		.loc 1 2622 3 view .LVU945
 3408              	.LVL205:
 3409              	.L170:
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3410              		.loc 1 2623 1 is_stmt 0 view .LVU946
 3411 05e0 02B0     		add	sp, sp, #8
 3412              	.LCFI12:
 3413              		.cfi_remember_state
 3414              		.cfi_def_cfa_offset 16
 3415              		@ sp needed
 3416 05e2 F0BC     		pop	{r4, r5, r6, r7}
 3417              	.LCFI13:
 3418              		.cfi_restore 7
 3419              		.cfi_restore 6
 3420              		.cfi_restore 5
 3421              		.cfi_restore 4
 3422              		.cfi_def_cfa_offset 0
 3423 05e4 7047     		bx	lr
 3424              	.LVL206:
 3425              	.L215:
 3426              	.LCFI14:
 3427              		.cfi_restore_state
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3428              		.loc 1 2317 3 view .LVU947
 3429 05e6 0220     		movs	r0, #2
 3430              	.LVL207:
ARM GAS  /tmp/ccodtIyF.s 			page 146


2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3431              		.loc 1 2317 3 view .LVU948
 3432 05e8 FAE7     		b	.L170
 3433              	.L247:
 3434 05ea 00BF     		.align	2
 3435              	.L246:
 3436 05ec 00600258 		.word	1476550656
 3437 05f0 00210240 		.word	1073881344
 3438 05f4 00200240 		.word	1073881088
 3439 05f8 00000000 		.word	SystemCoreClock
 3440 05fc 83DE1B43 		.word	1125899907
 3441              		.cfi_endproc
 3442              	.LFE155:
 3444              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3445              		.align	1
 3446              		.global	HAL_ADC_AnalogWDGConfig
 3447              		.syntax unified
 3448              		.thumb
 3449              		.thumb_func
 3450              		.fpu fpv5-d16
 3452              	HAL_ADC_AnalogWDGConfig:
 3453              	.LVL208:
 3454              	.LFB156:
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3455              		.loc 1 2649 1 is_stmt 1 view -0
 3456              		.cfi_startproc
 3457              		@ args = 0, pretend = 0, frame = 0
 3458              		@ frame_needed = 0, uses_anonymous_args = 0
 3459              		@ link register save eliminated.
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3460              		.loc 1 2650 3 view .LVU950
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3461              		.loc 1 2652 3 view .LVU951
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3462              		.loc 1 2653 3 view .LVU952
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpADCITAWD2orAWD3;
 3463              		.loc 1 2655 3 view .LVU953
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3464              		.loc 1 2656 3 view .LVU954
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3465              		.loc 1 2659 3 view .LVU955
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3466              		.loc 1 2660 3 view .LVU956
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3467              		.loc 1 2661 3 view .LVU957
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3468              		.loc 1 2662 3 view .LVU958
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3469              		.loc 1 2664 3 view .LVU959
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3470              		.loc 1 2668 5 view .LVU960
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3471              		.loc 1 2674 3 view .LVU961
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3472              		.loc 1 2681 5 view .LVU962
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3473              		.loc 1 2682 5 view .LVU963
ARM GAS  /tmp/ccodtIyF.s 			page 147


2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3474              		.loc 1 2686 3 view .LVU964
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3475              		.loc 1 2686 3 view .LVU965
 3476 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 3477 0004 012A     		cmp	r2, #1
 3478 0006 00F0C280 		beq	.L262
 3479 000a 0346     		mov	r3, r0
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3480              		.loc 1 2686 3 discriminator 2 view .LVU966
 3481 000c 0122     		movs	r2, #1
 3482 000e 80F85020 		strb	r2, [r0, #80]
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3483              		.loc 1 2693 3 discriminator 2 view .LVU967
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3484              		.loc 1 2693 7 is_stmt 0 discriminator 2 view .LVU968
 3485 0012 0268     		ldr	r2, [r0]
 3486 0014 9068     		ldr	r0, [r2, #8]
 3487              	.LVL209:
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3488              		.loc 1 2693 6 discriminator 2 view .LVU969
 3489 0016 10F00C0F 		tst	r0, #12
 3490 001a 40F0BA80 		bne	.L250
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3491              		.loc 1 2649 1 view .LVU970
 3492 001e F0B4     		push	{r4, r5, r6, r7}
 3493              	.LCFI15:
 3494              		.cfi_def_cfa_offset 16
 3495              		.cfi_offset 4, -16
 3496              		.cfi_offset 5, -12
 3497              		.cfi_offset 6, -8
 3498              		.cfi_offset 7, -4
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3499              		.loc 1 2697 5 is_stmt 1 view .LVU971
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3500              		.loc 1 2697 23 is_stmt 0 view .LVU972
 3501 0020 0C68     		ldr	r4, [r1]
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3502              		.loc 1 2697 7 view .LVU973
 3503 0022 012C     		cmp	r4, #1
 3504 0024 40D0     		beq	.L268
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3505              		.loc 1 2743 7 is_stmt 1 view .LVU974
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3506              		.loc 1 2743 36 is_stmt 0 view .LVU975
 3507 0026 0D69     		ldr	r5, [r1, #16]
 3508 0028 D068     		ldr	r0, [r2, #12]
 3509 002a C0F38200 		ubfx	r0, r0, #2, #3
 3510 002e 4000     		lsls	r0, r0, #1
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3511              		.loc 1 2743 34 view .LVU976
 3512 0030 8540     		lsls	r5, r5, r0
 3513              	.LVL210:
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3514              		.loc 1 2744 7 is_stmt 1 view .LVU977
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3515              		.loc 1 2744 36 is_stmt 0 view .LVU978
ARM GAS  /tmp/ccodtIyF.s 			page 148


 3516 0032 4E69     		ldr	r6, [r1, #20]
 3517 0034 D068     		ldr	r0, [r2, #12]
 3518 0036 C0F38200 		ubfx	r0, r0, #2, #3
 3519 003a 4000     		lsls	r0, r0, #1
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3520              		.loc 1 2744 34 view .LVU979
 3521 003c 06FA00F0 		lsl	r0, r6, r0
 3522              	.LVL211:
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3523              		.loc 1 2746 7 is_stmt 1 view .LVU980
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3524              		.loc 1 2746 10 is_stmt 0 view .LVU981
 3525 0040 022C     		cmp	r4, #2
 3526 0042 6FD0     		beq	.L269
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3527              		.loc 1 2781 9 is_stmt 1 view .LVU982
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3528              		.loc 1 2781 28 is_stmt 0 view .LVU983
 3529 0044 4C68     		ldr	r4, [r1, #4]
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3530              		.loc 1 2781 12 view .LVU984
 3531 0046 002C     		cmp	r4, #0
 3532 0048 00F09480 		beq	.L259
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3533              		.loc 1 2783 11 is_stmt 1 view .LVU985
 3534 004c D2F8A440 		ldr	r4, [r2, #164]
 3535 0050 8F68     		ldr	r7, [r1, #8]
 3536 0052 0126     		movs	r6, #1
 3537 0054 BE40     		lsls	r6, r6, r7
 3538 0056 3443     		orrs	r4, r4, r6
 3539 0058 C2F8A440 		str	r4, [r2, #164]
 3540              	.L260:
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR3,  ADC_LTR3_LT3, tmpAWDLowThresholdShifted);
 3541              		.loc 1 2791 9 view .LVU986
 3542 005c 1C68     		ldr	r4, [r3]
 3543 005e D4F8BC20 		ldr	r2, [r4, #188]
 3544 0062 02F07C42 		and	r2, r2, #-67108864
 3545 0066 2A43     		orrs	r2, r2, r5
 3546 0068 C4F8BC20 		str	r2, [r4, #188]
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
 3547              		.loc 1 2792 9 view .LVU987
 3548 006c 1C68     		ldr	r4, [r3]
 3549 006e D4F8B820 		ldr	r2, [r4, #184]
 3550 0072 02F07C42 		and	r2, r2, #-67108864
 3551 0076 1043     		orrs	r0, r0, r2
 3552              	.LVL212:
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
 3553              		.loc 1 2792 9 is_stmt 0 view .LVU988
 3554 0078 C4F8B800 		str	r0, [r4, #184]
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 3555              		.loc 1 2795 9 is_stmt 1 view .LVU989
 3556              	.LVL213:
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3557              		.loc 1 2796 9 view .LVU990
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3558              		.loc 1 2799 9 view .LVU991
 3559 007c 5A6D     		ldr	r2, [r3, #84]
ARM GAS  /tmp/ccodtIyF.s 			page 149


 3560 007e 22F48022 		bic	r2, r2, #262144
 3561 0082 5A65     		str	r2, [r3, #84]
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 3562              		.loc 1 2795 30 is_stmt 0 view .LVU992
 3563 0084 4FF40072 		mov	r2, #512
 3564              	.LVL214:
 3565              	.L258:
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3566              		.loc 1 2805 7 is_stmt 1 view .LVU993
 3567 0088 1868     		ldr	r0, [r3]
 3568 008a 0260     		str	r2, [r0]
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3569              		.loc 1 2808 7 view .LVU994
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3570              		.loc 1 2808 25 is_stmt 0 view .LVU995
 3571 008c 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 3572              	.LVL215:
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3573              		.loc 1 2808 9 view .LVU996
 3574 008e 0129     		cmp	r1, #1
 3575 0090 77D0     		beq	.L270
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3576              		.loc 1 2814 9 is_stmt 1 view .LVU997
 3577 0092 1868     		ldr	r0, [r3]
 3578 0094 4168     		ldr	r1, [r0, #4]
 3579 0096 21EA0202 		bic	r2, r1, r2
 3580              	.LVL216:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3581              		.loc 1 2814 9 is_stmt 0 view .LVU998
 3582 009a 4260     		str	r2, [r0, #4]
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3583              		.loc 1 2650 21 view .LVU999
 3584 009c 0020     		movs	r0, #0
 3585              	.L254:
 3586              	.LVL217:
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3587              		.loc 1 2831 3 is_stmt 1 view .LVU1000
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3588              		.loc 1 2831 3 view .LVU1001
 3589 009e 0022     		movs	r2, #0
 3590 00a0 83F85020 		strb	r2, [r3, #80]
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3591              		.loc 1 2835 3 view .LVU1002
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3592              		.loc 1 2836 1 is_stmt 0 view .LVU1003
 3593 00a4 F0BC     		pop	{r4, r5, r6, r7}
 3594              	.LCFI16:
 3595              		.cfi_remember_state
 3596              		.cfi_restore 7
 3597              		.cfi_restore 6
 3598              		.cfi_restore 5
 3599              		.cfi_restore 4
 3600              		.cfi_def_cfa_offset 0
 3601              	.LVL218:
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3602              		.loc 1 2836 1 view .LVU1004
 3603 00a6 7047     		bx	lr
ARM GAS  /tmp/ccodtIyF.s 			page 150


 3604              	.LVL219:
 3605              	.L268:
 3606              	.LCFI17:
 3607              		.cfi_restore_state
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             AnalogWDGConfig->WatchdogMode | ADC_CFGR_SET_AWD1CH(AnalogWDGConfig->Channel) );
 3608              		.loc 1 2705 7 is_stmt 1 view .LVU1005
 3609 00a8 D468     		ldr	r4, [r2, #12]
 3610 00aa 3E48     		ldr	r0, .L272
 3611 00ac 2040     		ands	r0, r0, r4
 3612 00ae 4D68     		ldr	r5, [r1, #4]
 3613 00b0 8E68     		ldr	r6, [r1, #8]
 3614              	.LVL220:
 3615              	.LBB116:
 3616              	.LBI116:
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3617              		.loc 2 850 57 view .LVU1006
 3618              	.LBB117:
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3619              		.loc 2 852 3 view .LVU1007
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3620              		.loc 2 857 4 view .LVU1008
 3621 00b2 4FF0F844 		mov	r4, #2080374784
 3622              		.syntax unified
 3623              	@ 857 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3624 00b6 94FAA4F4 		rbit r4, r4
 3625              	@ 0 "" 2
 3626              	.LVL221:
 3627              		.loc 2 870 3 view .LVU1009
 3628              		.loc 2 870 3 is_stmt 0 view .LVU1010
 3629              		.thumb
 3630              		.syntax unified
 3631              	.LBE117:
 3632              	.LBE116:
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             AnalogWDGConfig->WatchdogMode | ADC_CFGR_SET_AWD1CH(AnalogWDGConfig->Channel) );
 3633              		.loc 1 2705 7 view .LVU1011
 3634 00ba B4FA84F4 		clz	r4, r4
 3635 00be 06FA04F4 		lsl	r4, r6, r4
 3636 00c2 2543     		orrs	r5, r5, r4
 3637 00c4 2843     		orrs	r0, r0, r5
 3638 00c6 D060     		str	r0, [r2, #12]
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3639              		.loc 1 2711 7 is_stmt 1 view .LVU1012
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3640              		.loc 1 2711 36 is_stmt 0 view .LVU1013
 3641 00c8 0D69     		ldr	r5, [r1, #16]
 3642 00ca 1C68     		ldr	r4, [r3]
 3643 00cc E268     		ldr	r2, [r4, #12]
 3644 00ce C2F38202 		ubfx	r2, r2, #2, #3
 3645 00d2 5200     		lsls	r2, r2, #1
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3646              		.loc 1 2711 34 view .LVU1014
 3647 00d4 9540     		lsls	r5, r5, r2
 3648              	.LVL222:
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3649              		.loc 1 2712 7 is_stmt 1 view .LVU1015
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3650              		.loc 1 2712 36 is_stmt 0 view .LVU1016
ARM GAS  /tmp/ccodtIyF.s 			page 151


 3651 00d6 4A69     		ldr	r2, [r1, #20]
 3652 00d8 E068     		ldr	r0, [r4, #12]
 3653 00da C0F38200 		ubfx	r0, r0, #2, #3
 3654 00de 4000     		lsls	r0, r0, #1
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3655              		.loc 1 2712 34 view .LVU1017
 3656 00e0 8240     		lsls	r2, r2, r0
 3657              	.LVL223:
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR2_HT2 , tmpAWDHighThresholdShifted);
 3658              		.loc 1 2715 7 is_stmt 1 view .LVU1018
 3659 00e2 206A     		ldr	r0, [r4, #32]
 3660 00e4 00F07C40 		and	r0, r0, #-67108864
 3661 00e8 1043     		orrs	r0, r0, r2
 3662 00ea 2062     		str	r0, [r4, #32]
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3663              		.loc 1 2716 7 view .LVU1019
 3664 00ec 1868     		ldr	r0, [r3]
 3665 00ee 426A     		ldr	r2, [r0, #36]
 3666              	.LVL224:
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3667              		.loc 1 2716 7 is_stmt 0 view .LVU1020
 3668 00f0 02F07C42 		and	r2, r2, #-67108864
 3669 00f4 2A43     		orrs	r2, r2, r5
 3670 00f6 4262     		str	r2, [r0, #36]
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3671              		.loc 1 2721 7 is_stmt 1 view .LVU1021
 3672 00f8 1A68     		ldr	r2, [r3]
 3673 00fa 8020     		movs	r0, #128
 3674 00fc 1060     		str	r0, [r2]
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3675              		.loc 1 2724 7 view .LVU1022
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3676              		.loc 1 2724 25 is_stmt 0 view .LVU1023
 3677 00fe 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3678              		.loc 1 2724 9 view .LVU1024
 3679 0100 012A     		cmp	r2, #1
 3680 0102 0AD0     		beq	.L271
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3681              		.loc 1 2732 9 is_stmt 1 view .LVU1025
 3682 0104 1968     		ldr	r1, [r3]
 3683              	.LVL225:
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3684              		.loc 1 2732 9 is_stmt 0 view .LVU1026
 3685 0106 4A68     		ldr	r2, [r1, #4]
 3686 0108 22F08002 		bic	r2, r2, #128
 3687 010c 4A60     		str	r2, [r1, #4]
 3688              	.L253:
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 3689              		.loc 1 2736 7 is_stmt 1 view .LVU1027
 3690 010e 5A6D     		ldr	r2, [r3, #84]
 3691 0110 22F48032 		bic	r2, r2, #65536
 3692 0114 5A65     		str	r2, [r3, #84]
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3693              		.loc 1 2650 21 is_stmt 0 view .LVU1028
 3694 0116 0020     		movs	r0, #0
 3695 0118 C1E7     		b	.L254
ARM GAS  /tmp/ccodtIyF.s 			page 152


 3696              	.LVL226:
 3697              	.L271:
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3698              		.loc 1 2727 9 is_stmt 1 view .LVU1029
 3699 011a 1968     		ldr	r1, [r3]
 3700              	.LVL227:
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3701              		.loc 1 2727 9 is_stmt 0 view .LVU1030
 3702 011c 4A68     		ldr	r2, [r1, #4]
 3703 011e 0243     		orrs	r2, r2, r0
 3704 0120 4A60     		str	r2, [r1, #4]
 3705 0122 F4E7     		b	.L253
 3706              	.LVL228:
 3707              	.L269:
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3708              		.loc 1 2752 9 is_stmt 1 view .LVU1031
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3709              		.loc 1 2752 28 is_stmt 0 view .LVU1032
 3710 0124 4C68     		ldr	r4, [r1, #4]
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3711              		.loc 1 2752 12 view .LVU1033
 3712 0126 F4B1     		cbz	r4, .L256
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3713              		.loc 1 2754 11 is_stmt 1 view .LVU1034
 3714 0128 D2F8A040 		ldr	r4, [r2, #160]
 3715 012c 8F68     		ldr	r7, [r1, #8]
 3716 012e 0126     		movs	r6, #1
 3717 0130 BE40     		lsls	r6, r6, r7
 3718 0132 3443     		orrs	r4, r4, r6
 3719 0134 C2F8A040 		str	r4, [r2, #160]
 3720              	.L257:
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR2,  ADC_LTR2_LT2, tmpAWDLowThresholdShifted);
 3721              		.loc 1 2762 9 view .LVU1035
 3722 0138 1C68     		ldr	r4, [r3]
 3723 013a D4F8B420 		ldr	r2, [r4, #180]
 3724 013e 02F07C42 		and	r2, r2, #-67108864
 3725 0142 2A43     		orrs	r2, r2, r5
 3726 0144 C4F8B420 		str	r2, [r4, #180]
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3727              		.loc 1 2763 9 view .LVU1036
 3728 0148 1C68     		ldr	r4, [r3]
 3729 014a D4F8B020 		ldr	r2, [r4, #176]
 3730 014e 02F07C42 		and	r2, r2, #-67108864
 3731 0152 1043     		orrs	r0, r0, r2
 3732              	.LVL229:
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3733              		.loc 1 2763 9 is_stmt 0 view .LVU1037
 3734 0154 C4F8B000 		str	r0, [r4, #176]
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 3735              		.loc 1 2768 9 is_stmt 1 view .LVU1038
 3736              	.LVL230:
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3737              		.loc 1 2769 9 view .LVU1039
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3738              		.loc 1 2772 9 view .LVU1040
 3739 0158 5A6D     		ldr	r2, [r3, #84]
 3740 015a 22F40032 		bic	r2, r2, #131072
ARM GAS  /tmp/ccodtIyF.s 			page 153


 3741 015e 5A65     		str	r2, [r3, #84]
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 3742              		.loc 1 2768 30 is_stmt 0 view .LVU1041
 3743 0160 4FF48072 		mov	r2, #256
 3744 0164 90E7     		b	.L258
 3745              	.LVL231:
 3746              	.L256:
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3747              		.loc 1 2758 11 is_stmt 1 view .LVU1042
 3748 0166 D2F8A060 		ldr	r6, [r2, #160]
 3749 016a 0F4C     		ldr	r4, .L272+4
 3750 016c 3440     		ands	r4, r4, r6
 3751 016e C2F8A040 		str	r4, [r2, #160]
 3752 0172 E1E7     		b	.L257
 3753              	.L259:
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3754              		.loc 1 2787 11 view .LVU1043
 3755 0174 D2F8A460 		ldr	r6, [r2, #164]
 3756 0178 0B4C     		ldr	r4, .L272+4
 3757 017a 3440     		ands	r4, r4, r6
 3758 017c C2F8A440 		str	r4, [r2, #164]
 3759 0180 6CE7     		b	.L260
 3760              	.LVL232:
 3761              	.L270:
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3762              		.loc 1 2810 9 view .LVU1044
 3763 0182 1868     		ldr	r0, [r3]
 3764 0184 4168     		ldr	r1, [r0, #4]
 3765 0186 0A43     		orrs	r2, r2, r1
 3766              	.LVL233:
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3767              		.loc 1 2810 9 is_stmt 0 view .LVU1045
 3768 0188 4260     		str	r2, [r0, #4]
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3769              		.loc 1 2650 21 view .LVU1046
 3770 018a 0020     		movs	r0, #0
 3771 018c 87E7     		b	.L254
 3772              	.LVL234:
 3773              	.L262:
 3774              	.LCFI18:
 3775              		.cfi_def_cfa_offset 0
 3776              		.cfi_restore 4
 3777              		.cfi_restore 5
 3778              		.cfi_restore 6
 3779              		.cfi_restore 7
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3780              		.loc 1 2686 3 view .LVU1047
 3781 018e 0220     		movs	r0, #2
 3782              	.LVL235:
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3783              		.loc 1 2686 3 view .LVU1048
 3784 0190 7047     		bx	lr
 3785              	.LVL236:
 3786              	.L250:
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3787              		.loc 1 2824 5 is_stmt 1 view .LVU1049
 3788 0192 5A6D     		ldr	r2, [r3, #84]
ARM GAS  /tmp/ccodtIyF.s 			page 154


 3789 0194 42F02002 		orr	r2, r2, #32
 3790 0198 5A65     		str	r2, [r3, #84]
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3791              		.loc 1 2826 5 view .LVU1050
 3792              	.LVL237:
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3793              		.loc 1 2826 20 is_stmt 0 view .LVU1051
 3794 019a 0120     		movs	r0, #1
 3795              	.LVL238:
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3796              		.loc 1 2831 3 is_stmt 1 view .LVU1052
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3797              		.loc 1 2831 3 view .LVU1053
 3798 019c 0022     		movs	r2, #0
 3799 019e 83F85020 		strb	r2, [r3, #80]
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3800              		.loc 1 2835 3 view .LVU1054
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3801              		.loc 1 2836 1 is_stmt 0 view .LVU1055
 3802 01a2 7047     		bx	lr
 3803              	.L273:
 3804              		.align	2
 3805              	.L272:
 3806 01a4 FFFF3F82 		.word	-2109734913
 3807 01a8 0000F0FF 		.word	-1048576
 3808              		.cfi_endproc
 3809              	.LFE156:
 3811              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3812              		.align	1
 3813              		.global	HAL_ADC_GetState
 3814              		.syntax unified
 3815              		.thumb
 3816              		.thumb_func
 3817              		.fpu fpv5-d16
 3819              	HAL_ADC_GetState:
 3820              	.LVL239:
 3821              	.LFB157:
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 3822              		.loc 1 2870 1 is_stmt 1 view -0
 3823              		.cfi_startproc
 3824              		@ args = 0, pretend = 0, frame = 0
 3825              		@ frame_needed = 0, uses_anonymous_args = 0
 3826              		@ link register save eliminated.
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3827              		.loc 1 2872 3 view .LVU1057
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3828              		.loc 1 2875 3 view .LVU1058
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3829              		.loc 1 2875 14 is_stmt 0 view .LVU1059
 3830 0000 406D     		ldr	r0, [r0, #84]
 3831              	.LVL240:
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3832              		.loc 1 2876 1 view .LVU1060
 3833 0002 7047     		bx	lr
 3834              		.cfi_endproc
 3835              	.LFE157:
 3837              		.section	.text.HAL_ADC_GetError,"ax",%progbits
ARM GAS  /tmp/ccodtIyF.s 			page 155


 3838              		.align	1
 3839              		.global	HAL_ADC_GetError
 3840              		.syntax unified
 3841              		.thumb
 3842              		.thumb_func
 3843              		.fpu fpv5-d16
 3845              	HAL_ADC_GetError:
 3846              	.LVL241:
 3847              	.LFB158:
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 3848              		.loc 1 2885 1 is_stmt 1 view -0
 3849              		.cfi_startproc
 3850              		@ args = 0, pretend = 0, frame = 0
 3851              		@ frame_needed = 0, uses_anonymous_args = 0
 3852              		@ link register save eliminated.
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3853              		.loc 1 2887 3 view .LVU1062
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3854              		.loc 1 2889 3 view .LVU1063
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3855              		.loc 1 2889 14 is_stmt 0 view .LVU1064
 3856 0000 806D     		ldr	r0, [r0, #88]
 3857              	.LVL242:
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 3858              		.loc 1 2890 1 view .LVU1065
 3859 0002 7047     		bx	lr
 3860              		.cfi_endproc
 3861              	.LFE158:
 3863              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3864              		.align	1
 3865              		.global	ADC_ConversionStop
 3866              		.syntax unified
 3867              		.thumb
 3868              		.thumb_func
 3869              		.fpu fpv5-d16
 3871              	ADC_ConversionStop:
 3872              	.LVL243:
 3873              	.LFB159:
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0;
 3874              		.loc 1 2914 1 is_stmt 1 view -0
 3875              		.cfi_startproc
 3876              		@ args = 0, pretend = 0, frame = 0
 3877              		@ frame_needed = 0, uses_anonymous_args = 0
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
 3878              		.loc 1 2915 3 view .LVU1067
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0;
 3879              		.loc 1 2916 3 view .LVU1068
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3880              		.loc 1 2917 3 view .LVU1069
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 3881              		.loc 1 2920 3 view .LVU1070
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3882              		.loc 1 2921 3 view .LVU1071
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3883              		.loc 1 2925 3 view .LVU1072
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3884              		.loc 1 2925 7 is_stmt 0 view .LVU1073
ARM GAS  /tmp/ccodtIyF.s 			page 156


 3885 0000 0368     		ldr	r3, [r0]
 3886 0002 9A68     		ldr	r2, [r3, #8]
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 3887              		.loc 1 2925 6 view .LVU1074
 3888 0004 12F00C0F 		tst	r2, #12
 3889 0008 61D0     		beq	.L288
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0;
 3890              		.loc 1 2914 1 view .LVU1075
 3891 000a 70B5     		push	{r4, r5, r6, lr}
 3892              	.LCFI19:
 3893              		.cfi_def_cfa_offset 16
 3894              		.cfi_offset 4, -16
 3895              		.cfi_offset 5, -12
 3896              		.cfi_offset 6, -8
 3897              		.cfi_offset 14, -4
 3898 000c 0446     		mov	r4, r0
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          && (hadc->Init.ContinuousConvMode==ENABLE)
 3899              		.loc 1 2933 5 is_stmt 1 view .LVU1076
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          && (hadc->Init.ContinuousConvMode==ENABLE)
 3900              		.loc 1 2933 10 is_stmt 0 view .LVU1077
 3901 000e DA68     		ldr	r2, [r3, #12]
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          && (hadc->Init.ContinuousConvMode==ENABLE)
 3902              		.loc 1 2933 8 view .LVU1078
 3903 0010 12F0007F 		tst	r2, #33554432
 3904 0014 04D0     		beq	.L278
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3905              		.loc 1 2935 10 view .LVU1079
 3906 0016 808A     		ldrh	r0, [r0, #20]
 3907              	.LVL244:
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3908              		.loc 1 2935 10 view .LVU1080
 3909 0018 40F20112 		movw	r2, #257
 3910 001c 9042     		cmp	r0, r2
 3911 001e 42D0     		beq	.L296
 3912              	.L278:
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3913              		.loc 1 2961 5 is_stmt 1 view .LVU1081
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3914              		.loc 1 2961 8 is_stmt 0 view .LVU1082
 3915 0020 6029     		cmp	r1, #96
 3916 0022 0CD0     		beq	.L283
 3917              	.LVL245:
 3918              	.L282:
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 3919              		.loc 1 2964 7 is_stmt 1 view .LVU1083
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 3920              		.loc 1 2964 11 is_stmt 0 view .LVU1084
 3921 0024 2368     		ldr	r3, [r4]
 3922 0026 9A68     		ldr	r2, [r3, #8]
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 3923              		.loc 1 2964 10 view .LVU1085
 3924 0028 12F0040F 		tst	r2, #4
 3925 002c 07D0     		beq	.L283
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3926              		.loc 1 2965 11 discriminator 1 view .LVU1086
 3927 002e 9A68     		ldr	r2, [r3, #8]
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
ARM GAS  /tmp/ccodtIyF.s 			page 157


 3928              		.loc 1 2964 62 discriminator 1 view .LVU1087
 3929 0030 12F0020F 		tst	r2, #2
 3930 0034 03D1     		bne	.L283
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3931              		.loc 1 2968 9 is_stmt 1 view .LVU1088
 3932 0036 9A68     		ldr	r2, [r3, #8]
 3933 0038 42F01002 		orr	r2, r2, #16
 3934 003c 9A60     		str	r2, [r3, #8]
 3935              	.L283:
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3936              		.loc 1 2973 5 view .LVU1089
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3937              		.loc 1 2973 8 is_stmt 0 view .LVU1090
 3938 003e 0C29     		cmp	r1, #12
 3939 0040 0CD0     		beq	.L284
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 3940              		.loc 1 2976 7 is_stmt 1 view .LVU1091
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 3941              		.loc 1 2976 11 is_stmt 0 view .LVU1092
 3942 0042 2368     		ldr	r3, [r4]
 3943 0044 9A68     		ldr	r2, [r3, #8]
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 3944              		.loc 1 2976 10 view .LVU1093
 3945 0046 12F0080F 		tst	r2, #8
 3946 004a 07D0     		beq	.L284
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3947              		.loc 1 2977 11 discriminator 1 view .LVU1094
 3948 004c 9A68     		ldr	r2, [r3, #8]
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 3949              		.loc 1 2976 63 discriminator 1 view .LVU1095
 3950 004e 12F0020F 		tst	r2, #2
 3951 0052 03D1     		bne	.L284
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3952              		.loc 1 2980 9 is_stmt 1 view .LVU1096
 3953 0054 9A68     		ldr	r2, [r3, #8]
 3954 0056 42F02002 		orr	r2, r2, #32
 3955 005a 9A60     		str	r2, [r3, #8]
 3956              	.L284:
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3957              		.loc 1 2985 5 view .LVU1097
 3958 005c 6029     		cmp	r1, #96
 3959 005e 30D0     		beq	.L290
 3960 0060 6C29     		cmp	r1, #108
 3961 0062 30D0     		beq	.L291
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 3962              		.loc 1 2995 37 is_stmt 0 view .LVU1098
 3963 0064 0425     		movs	r5, #4
 3964              	.L285:
 3965              	.LVL246:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3966              		.loc 1 3002 5 is_stmt 1 view .LVU1099
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3967              		.loc 1 3002 17 is_stmt 0 view .LVU1100
 3968 0066 FFF7FEFF 		bl	HAL_GetTick
 3969              	.LVL247:
 3970 006a 0646     		mov	r6, r0
 3971              	.LVL248:
ARM GAS  /tmp/ccodtIyF.s 			page 158


3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3972              		.loc 1 3004 5 is_stmt 1 view .LVU1101
 3973              	.L286:
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3974              		.loc 1 3004 16 is_stmt 0 view .LVU1102
 3975 006c 2368     		ldr	r3, [r4]
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3976              		.loc 1 3004 26 view .LVU1103
 3977 006e 9B68     		ldr	r3, [r3, #8]
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3978              		.loc 1 3004 10 view .LVU1104
 3979 0070 2B42     		tst	r3, r5
 3980 0072 2AD0     		beq	.L297
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3981              		.loc 1 3006 7 is_stmt 1 view .LVU1105
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3982              		.loc 1 3006 11 is_stmt 0 view .LVU1106
 3983 0074 FFF7FEFF 		bl	HAL_GetTick
 3984              	.LVL249:
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3985              		.loc 1 3006 24 view .LVU1107
 3986 0078 801B     		subs	r0, r0, r6
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3987              		.loc 1 3006 9 view .LVU1108
 3988 007a 0528     		cmp	r0, #5
 3989 007c F6D9     		bls	.L286
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3990              		.loc 1 3009 9 is_stmt 1 view .LVU1109
 3991 007e 636D     		ldr	r3, [r4, #84]
 3992 0080 43F01003 		orr	r3, r3, #16
 3993 0084 6365     		str	r3, [r4, #84]
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3994              		.loc 1 3012 9 view .LVU1110
 3995 0086 A36D     		ldr	r3, [r4, #88]
 3996 0088 43F00103 		orr	r3, r3, #1
 3997 008c A365     		str	r3, [r4, #88]
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3998              		.loc 1 3014 9 view .LVU1111
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3999              		.loc 1 3014 16 is_stmt 0 view .LVU1112
 4000 008e 0120     		movs	r0, #1
 4001 0090 1CE0     		b	.L277
 4002              	.LVL250:
 4003              	.L299:
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4004              		.loc 1 2946 11 is_stmt 1 view .LVU1113
 4005 0092 636D     		ldr	r3, [r4, #84]
 4006 0094 43F01003 		orr	r3, r3, #16
 4007 0098 6365     		str	r3, [r4, #84]
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4008              		.loc 1 2949 11 view .LVU1114
 4009 009a A36D     		ldr	r3, [r4, #88]
 4010 009c 43F00103 		orr	r3, r3, #1
 4011 00a0 A365     		str	r3, [r4, #88]
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4012              		.loc 1 2951 11 view .LVU1115
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
ARM GAS  /tmp/ccodtIyF.s 			page 159


 4013              		.loc 1 2951 18 is_stmt 0 view .LVU1116
 4014 00a2 0120     		movs	r0, #1
 4015 00a4 12E0     		b	.L277
 4016              	.LVL251:
 4017              	.L296:
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4018              		.loc 1 2917 12 view .LVU1117
 4019 00a6 0022     		movs	r2, #0
 4020              	.LVL252:
 4021              	.L279:
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4022              		.loc 1 2941 13 view .LVU1118
 4023 00a8 1968     		ldr	r1, [r3]
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4024              		.loc 1 2941 12 view .LVU1119
 4025 00aa 11F0400F 		tst	r1, #64
 4026 00ae 04D1     		bne	.L298
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4027              		.loc 1 2943 9 is_stmt 1 view .LVU1120
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4028              		.loc 1 2943 12 is_stmt 0 view .LVU1121
 4029 00b0 0849     		ldr	r1, .L300
 4030 00b2 8A42     		cmp	r2, r1
 4031 00b4 EDD8     		bhi	.L299
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4032              		.loc 1 2953 9 is_stmt 1 view .LVU1122
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4033              		.loc 1 2953 39 is_stmt 0 view .LVU1123
 4034 00b6 0132     		adds	r2, r2, #1
 4035              	.LVL253:
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4036              		.loc 1 2953 39 view .LVU1124
 4037 00b8 F6E7     		b	.L279
 4038              	.L298:
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4039              		.loc 1 2957 7 is_stmt 1 view .LVU1125
 4040 00ba 4022     		movs	r2, #64
 4041              	.LVL254:
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4042              		.loc 1 2957 7 is_stmt 0 view .LVU1126
 4043 00bc 1A60     		str	r2, [r3]
 4044              	.LVL255:
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4045              		.loc 1 2961 5 is_stmt 1 view .LVU1127
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4046              		.loc 1 2938 23 is_stmt 0 view .LVU1128
 4047 00be 0C21     		movs	r1, #12
 4048 00c0 B0E7     		b	.L282
 4049              	.LVL256:
 4050              	.L290:
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4051              		.loc 1 2991 37 view .LVU1129
 4052 00c2 0825     		movs	r5, #8
 4053 00c4 CFE7     		b	.L285
 4054              	.L291:
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4055              		.loc 1 2988 37 view .LVU1130
ARM GAS  /tmp/ccodtIyF.s 			page 160


 4056 00c6 0C25     		movs	r5, #12
 4057 00c8 CDE7     		b	.L285
 4058              	.LVL257:
 4059              	.L297:
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4060              		.loc 1 3021 10 view .LVU1131
 4061 00ca 0020     		movs	r0, #0
 4062              	.LVL258:
 4063              	.L277:
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4064              		.loc 1 3022 1 view .LVU1132
 4065 00cc 70BD     		pop	{r4, r5, r6, pc}
 4066              	.LVL259:
 4067              	.L288:
 4068              	.LCFI20:
 4069              		.cfi_def_cfa_offset 0
 4070              		.cfi_restore 4
 4071              		.cfi_restore 5
 4072              		.cfi_restore 6
 4073              		.cfi_restore 14
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4074              		.loc 1 3021 10 view .LVU1133
 4075 00ce 0020     		movs	r0, #0
 4076              	.LVL260:
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4077              		.loc 1 3022 1 view .LVU1134
 4078 00d0 7047     		bx	lr
 4079              	.L301:
 4080 00d2 00BF     		.align	2
 4081              	.L300:
 4082 00d4 FFDB0C00 		.word	842751
 4083              		.cfi_endproc
 4084              	.LFE159:
 4086              		.section	.text.ADC_Enable,"ax",%progbits
 4087              		.align	1
 4088              		.global	ADC_Enable
 4089              		.syntax unified
 4090              		.thumb
 4091              		.thumb_func
 4092              		.fpu fpv5-d16
 4094              	ADC_Enable:
 4095              	.LVL261:
 4096              	.LFB160:
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
 4097              		.loc 1 3034 1 is_stmt 1 view -0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 0
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
 4101              		.loc 1 3034 1 is_stmt 0 view .LVU1136
 4102 0000 38B5     		push	{r3, r4, r5, lr}
 4103              	.LCFI21:
 4104              		.cfi_def_cfa_offset 16
 4105              		.cfi_offset 3, -16
 4106              		.cfi_offset 4, -12
 4107              		.cfi_offset 5, -8
 4108              		.cfi_offset 14, -4
ARM GAS  /tmp/ccodtIyF.s 			page 161


3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4109              		.loc 1 3035 3 is_stmt 1 view .LVU1137
 4110              	.LVL262:
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4111              		.loc 1 3041 3 view .LVU1138
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4112              		.loc 1 3041 7 is_stmt 0 view .LVU1139
 4113 0002 0268     		ldr	r2, [r0]
 4114 0004 9368     		ldr	r3, [r2, #8]
 4115 0006 03F00303 		and	r3, r3, #3
 4116 000a 012B     		cmp	r3, #1
 4117 000c 0DD0     		beq	.L310
 4118              	.L303:
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4119              		.loc 1 3044 5 is_stmt 1 view .LVU1140
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4120              		.loc 1 3044 9 is_stmt 0 view .LVU1141
 4121 000e 9168     		ldr	r1, [r2, #8]
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4122              		.loc 1 3044 8 view .LVU1142
 4123 0010 1A4B     		ldr	r3, .L312
 4124 0012 1942     		tst	r1, r3
 4125 0014 0FD0     		beq	.L305
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4126              		.loc 1 3047 7 is_stmt 1 view .LVU1143
 4127 0016 436D     		ldr	r3, [r0, #84]
 4128 0018 43F01003 		orr	r3, r3, #16
 4129 001c 4365     		str	r3, [r0, #84]
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4130              		.loc 1 3050 7 view .LVU1144
 4131 001e 836D     		ldr	r3, [r0, #88]
 4132 0020 43F00103 		orr	r3, r3, #1
 4133 0024 8365     		str	r3, [r0, #88]
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4134              		.loc 1 3052 7 view .LVU1145
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4135              		.loc 1 3052 14 is_stmt 0 view .LVU1146
 4136 0026 0120     		movs	r0, #1
 4137              	.LVL263:
 4138              	.L304:
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4139              		.loc 1 3087 1 view .LVU1147
 4140 0028 38BD     		pop	{r3, r4, r5, pc}
 4141              	.LVL264:
 4142              	.L310:
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4143              		.loc 1 3041 7 discriminator 1 view .LVU1148
 4144 002a 1368     		ldr	r3, [r2]
 4145 002c 13F0010F 		tst	r3, #1
 4146 0030 EDD0     		beq	.L303
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4147              		.loc 1 3086 10 view .LVU1149
 4148 0032 0020     		movs	r0, #0
 4149              	.LVL265:
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4150              		.loc 1 3086 10 view .LVU1150
 4151 0034 F8E7     		b	.L304
ARM GAS  /tmp/ccodtIyF.s 			page 162


 4152              	.LVL266:
 4153              	.L305:
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4154              		.loc 1 3086 10 view .LVU1151
 4155 0036 0446     		mov	r4, r0
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4156              		.loc 1 3056 5 is_stmt 1 view .LVU1152
 4157 0038 9368     		ldr	r3, [r2, #8]
 4158 003a 43F00103 		orr	r3, r3, #1
 4159 003e 9360     		str	r3, [r2, #8]
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4160              		.loc 1 3060 5 view .LVU1153
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4161              		.loc 1 3060 17 is_stmt 0 view .LVU1154
 4162 0040 FFF7FEFF 		bl	HAL_GetTick
 4163              	.LVL267:
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4164              		.loc 1 3060 17 view .LVU1155
 4165 0044 0546     		mov	r5, r0
 4166              	.LVL268:
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4167              		.loc 1 3062 5 is_stmt 1 view .LVU1156
 4168              	.L306:
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4169              		.loc 1 3062 11 is_stmt 0 view .LVU1157
 4170 0046 2368     		ldr	r3, [r4]
 4171 0048 1A68     		ldr	r2, [r3]
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4172              		.loc 1 3062 10 view .LVU1158
 4173 004a 12F0010F 		tst	r2, #1
 4174 004e 12D1     		bne	.L311
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4175              		.loc 1 3070 7 is_stmt 1 view .LVU1159
 4176 0050 9A68     		ldr	r2, [r3, #8]
 4177 0052 42F00102 		orr	r2, r2, #1
 4178 0056 9A60     		str	r2, [r3, #8]
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4179              		.loc 1 3072 7 view .LVU1160
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4180              		.loc 1 3072 11 is_stmt 0 view .LVU1161
 4181 0058 FFF7FEFF 		bl	HAL_GetTick
 4182              	.LVL269:
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4183              		.loc 1 3072 24 view .LVU1162
 4184 005c 401B     		subs	r0, r0, r5
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4185              		.loc 1 3072 9 view .LVU1163
 4186 005e 0228     		cmp	r0, #2
 4187 0060 F1D9     		bls	.L306
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4188              		.loc 1 3075 9 is_stmt 1 view .LVU1164
 4189 0062 636D     		ldr	r3, [r4, #84]
 4190 0064 43F01003 		orr	r3, r3, #16
 4191 0068 6365     		str	r3, [r4, #84]
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4192              		.loc 1 3078 9 view .LVU1165
 4193 006a A36D     		ldr	r3, [r4, #88]
ARM GAS  /tmp/ccodtIyF.s 			page 163


 4194 006c 43F00103 		orr	r3, r3, #1
 4195 0070 A365     		str	r3, [r4, #88]
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4196              		.loc 1 3080 9 view .LVU1166
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4197              		.loc 1 3080 16 is_stmt 0 view .LVU1167
 4198 0072 0120     		movs	r0, #1
 4199 0074 D8E7     		b	.L304
 4200              	.L311:
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4201              		.loc 1 3086 10 view .LVU1168
 4202 0076 0020     		movs	r0, #0
 4203 0078 D6E7     		b	.L304
 4204              	.L313:
 4205 007a 00BF     		.align	2
 4206              	.L312:
 4207 007c 3F000080 		.word	-2147483585
 4208              		.cfi_endproc
 4209              	.LFE160:
 4211              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4212              		.align	1
 4213              		.global	HAL_ADC_Start
 4214              		.syntax unified
 4215              		.thumb
 4216              		.thumb_func
 4217              		.fpu fpv5-d16
 4219              	HAL_ADC_Start:
 4220              	.LVL270:
 4221              	.LFB141:
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4222              		.loc 1 942 1 is_stmt 1 view -0
 4223              		.cfi_startproc
 4224              		@ args = 0, pretend = 0, frame = 0
 4225              		@ frame_needed = 0, uses_anonymous_args = 0
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
 4226              		.loc 1 943 3 view .LVU1170
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4227              		.loc 1 944 3 view .LVU1171
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4228              		.loc 1 947 3 view .LVU1172
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4229              		.loc 1 950 3 view .LVU1173
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4230              		.loc 1 950 7 is_stmt 0 view .LVU1174
 4231 0000 0368     		ldr	r3, [r0]
 4232 0002 9B68     		ldr	r3, [r3, #8]
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4233              		.loc 1 950 6 view .LVU1175
 4234 0004 13F0040F 		tst	r3, #4
 4235 0008 76D1     		bne	.L325
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4236              		.loc 1 953 5 is_stmt 1 view .LVU1176
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4237              		.loc 1 953 5 view .LVU1177
 4238 000a 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4239 000e 012B     		cmp	r3, #1
 4240 0010 75D0     		beq	.L326
ARM GAS  /tmp/ccodtIyF.s 			page 164


 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4241              		.loc 1 942 1 is_stmt 0 discriminator 2 view .LVU1178
 4242 0012 10B5     		push	{r4, lr}
 4243              	.LCFI22:
 4244              		.cfi_def_cfa_offset 8
 4245              		.cfi_offset 4, -8
 4246              		.cfi_offset 14, -4
 4247 0014 0446     		mov	r4, r0
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4248              		.loc 1 953 5 is_stmt 1 discriminator 2 view .LVU1179
 4249 0016 0123     		movs	r3, #1
 4250 0018 80F85030 		strb	r3, [r0, #80]
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4251              		.loc 1 956 5 discriminator 2 view .LVU1180
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4252              		.loc 1 956 22 is_stmt 0 discriminator 2 view .LVU1181
 4253 001c FFF7FEFF 		bl	ADC_Enable
 4254              	.LVL271:
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4255              		.loc 1 959 5 is_stmt 1 discriminator 2 view .LVU1182
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4256              		.loc 1 959 8 is_stmt 0 discriminator 2 view .LVU1183
 4257 0020 0346     		mov	r3, r0
 4258 0022 0028     		cmp	r0, #0
 4259 0024 63D1     		bne	.L316
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4260              		.loc 1 962 7 is_stmt 1 view .LVU1184
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4261              		.loc 1 962 11 is_stmt 0 view .LVU1185
 4262 0026 626D     		ldr	r2, [r4, #84]
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4263              		.loc 1 962 10 view .LVU1186
 4264 0028 12F4805F 		tst	r2, #4096
 4265 002c 4AD0     		beq	.L317
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4266              		.loc 1 965 9 is_stmt 1 view .LVU1187
 4267 002e A26D     		ldr	r2, [r4, #88]
 4268 0030 22F00602 		bic	r2, r2, #6
 4269 0034 A265     		str	r2, [r4, #88]
 4270              	.L318:
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4271              		.loc 1 973 7 view .LVU1188
 4272 0036 616D     		ldr	r1, [r4, #84]
 4273 0038 324A     		ldr	r2, .L331
 4274 003a 0A40     		ands	r2, r2, r1
 4275 003c 42F48072 		orr	r2, r2, #256
 4276 0040 6265     		str	r2, [r4, #84]
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4277              		.loc 1 978 7 view .LVU1189
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4278              		.loc 1 978 11 is_stmt 0 view .LVU1190
 4279 0042 2268     		ldr	r2, [r4]
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4280              		.loc 1 978 10 view .LVU1191
 4281 0044 3048     		ldr	r0, .L331+4
 4282              	.LVL272:
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/ccodtIyF.s 			page 165


 4283              		.loc 1 978 10 view .LVU1192
 4284 0046 3149     		ldr	r1, .L331+8
 4285 0048 8A42     		cmp	r2, r1
 4286 004a 18BF     		it	ne
 4287 004c 8242     		cmpne	r2, r0
 4288 004e 05D0     		beq	.L319
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4289              		.loc 1 978 11 discriminator 1 view .LVU1193
 4290 0050 01F50071 		add	r1, r1, #512
 4291 0054 8968     		ldr	r1, [r1, #8]
 4292 0056 11F01F0F 		tst	r1, #31
 4293 005a 03D1     		bne	.L320
 4294              	.L319:
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4295              		.loc 1 980 9 is_stmt 1 view .LVU1194
 4296 005c 616D     		ldr	r1, [r4, #84]
 4297 005e 21F48011 		bic	r1, r1, #1048576
 4298 0062 6165     		str	r1, [r4, #84]
 4299              	.L320:
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4300              		.loc 1 985 7 view .LVU1195
 4301 0064 1C21     		movs	r1, #28
 4302 0066 1160     		str	r1, [r2]
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4303              		.loc 1 995 7 view .LVU1196
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4304              		.loc 1 995 11 is_stmt 0 view .LVU1197
 4305 0068 2268     		ldr	r2, [r4]
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4306              		.loc 1 995 10 view .LVU1198
 4307 006a 2748     		ldr	r0, .L331+4
 4308 006c 2849     		ldr	r1, .L331+12
 4309 006e 8A42     		cmp	r2, r1
 4310 0070 18BF     		it	ne
 4311 0072 8242     		cmpne	r2, r0
 4312 0074 29D0     		beq	.L321
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4313              		.loc 1 995 11 discriminator 1 view .LVU1199
 4314 0076 01F16841 		add	r1, r1, #-402653184
 4315 007a A1F57451 		sub	r1, r1, #15616
 4316 007e 8968     		ldr	r1, [r1, #8]
 4317 0080 11F01F0F 		tst	r1, #31
 4318 0084 21D0     		beq	.L321
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4319              		.loc 1 995 11 discriminator 2 view .LVU1200
 4320 0086 2349     		ldr	r1, .L331+16
 4321 0088 8968     		ldr	r1, [r1, #8]
 4322 008a 01F01F01 		and	r1, r1, #31
 4323 008e 0529     		cmp	r1, #5
 4324 0090 1BD0     		beq	.L321
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4325              		.loc 1 995 11 discriminator 3 view .LVU1201
 4326 0092 2049     		ldr	r1, .L331+16
 4327 0094 8968     		ldr	r1, [r1, #8]
 4328 0096 01F01F01 		and	r1, r1, #31
 4329 009a 0929     		cmp	r1, #9
 4330 009c 15D0     		beq	.L321
ARM GAS  /tmp/ccodtIyF.s 			page 166


1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 4331              		.loc 1 1011 9 is_stmt 1 view .LVU1202
 4332 009e 626D     		ldr	r2, [r4, #84]
 4333 00a0 42F48012 		orr	r2, r2, #1048576
 4334 00a4 6265     		str	r2, [r4, #84]
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET)
 4335              		.loc 1 1014 9 view .LVU1203
 4336              	.LVL273:
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4337              		.loc 1 1015 9 view .LVU1204
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4338              		.loc 1 1015 13 is_stmt 0 view .LVU1205
 4339 00a6 184A     		ldr	r2, .L331+4
 4340 00a8 D268     		ldr	r2, [r2, #12]
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4341              		.loc 1 1015 12 view .LVU1206
 4342 00aa 12F0007F 		tst	r2, #33554432
 4343 00ae 05D0     		beq	.L324
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       
 4344              		.loc 1 1017 11 is_stmt 1 view .LVU1207
 4345 00b0 626D     		ldr	r2, [r4, #84]
 4346 00b2 22F44052 		bic	r2, r2, #12288
 4347 00b6 42F48052 		orr	r2, r2, #4096
 4348 00ba 6265     		str	r2, [r4, #84]
 4349              	.L324:
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }    /* if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)) */
 4350              		.loc 1 1021 9 view .LVU1208
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }    /* if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)) */
 4351              		.loc 1 1021 9 view .LVU1209
 4352 00bc 0022     		movs	r2, #0
 4353 00be 84F85020 		strb	r2, [r4, #80]
 4354 00c2 17E0     		b	.L315
 4355              	.LVL274:
 4356              	.L317:
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4357              		.loc 1 970 9 view .LVU1210
 4358 00c4 0022     		movs	r2, #0
 4359 00c6 A265     		str	r2, [r4, #88]
 4360 00c8 B5E7     		b	.L318
 4361              	.LVL275:
 4362              	.L321:
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4363              		.loc 1 1000 9 view .LVU1211
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4364              		.loc 1 1000 13 is_stmt 0 view .LVU1212
 4365 00ca D168     		ldr	r1, [r2, #12]
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4366              		.loc 1 1000 12 view .LVU1213
 4367 00cc 11F0007F 		tst	r1, #33554432
 4368 00d0 05D0     		beq	.L323
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4369              		.loc 1 1002 11 is_stmt 1 view .LVU1214
 4370 00d2 616D     		ldr	r1, [r4, #84]
 4371 00d4 21F44051 		bic	r1, r1, #12288
 4372 00d8 41F48051 		orr	r1, r1, #4096
 4373 00dc 6165     		str	r1, [r4, #84]
 4374              	.L323:
ARM GAS  /tmp/ccodtIyF.s 			page 167


1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC */
 4375              		.loc 1 1005 9 view .LVU1215
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC */
 4376              		.loc 1 1005 9 view .LVU1216
 4377 00de 0021     		movs	r1, #0
 4378 00e0 84F85010 		strb	r1, [r4, #80]
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4379              		.loc 1 1007 9 view .LVU1217
 4380 00e4 9168     		ldr	r1, [r2, #8]
 4381 00e6 41F00401 		orr	r1, r1, #4
 4382 00ea 9160     		str	r1, [r2, #8]
 4383 00ec 02E0     		b	.L315
 4384              	.LVL276:
 4385              	.L316:
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4386              		.loc 1 1027 7 view .LVU1218
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4387              		.loc 1 1027 7 view .LVU1219
 4388 00ee 0022     		movs	r2, #0
 4389 00f0 84F85020 		strb	r2, [r4, #80]
 4390              	.LVL277:
 4391              	.L315:
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4392              		.loc 1 1037 1 is_stmt 0 view .LVU1220
 4393 00f4 1846     		mov	r0, r3
 4394 00f6 10BD     		pop	{r4, pc}
 4395              	.LVL278:
 4396              	.L325:
 4397              	.LCFI23:
 4398              		.cfi_def_cfa_offset 0
 4399              		.cfi_restore 4
 4400              		.cfi_restore 14
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4401              		.loc 1 1032 20 view .LVU1221
 4402 00f8 0223     		movs	r3, #2
 4403              	.L328:
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4404              		.loc 1 1037 1 view .LVU1222
 4405 00fa 1846     		mov	r0, r3
 4406              	.LVL279:
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4407              		.loc 1 1037 1 view .LVU1223
 4408 00fc 7047     		bx	lr
 4409              	.LVL280:
 4410              	.L326:
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4411              		.loc 1 953 5 view .LVU1224
 4412 00fe 0223     		movs	r3, #2
 4413 0100 FBE7     		b	.L328
 4414              	.L332:
 4415 0102 00BF     		.align	2
 4416              	.L331:
 4417 0104 FEF0FFFF 		.word	-3842
 4418 0108 00200240 		.word	1073881088
 4419 010c 00210240 		.word	1073881344
 4420 0110 00600258 		.word	1476550656
 4421 0114 00230240 		.word	1073881856
ARM GAS  /tmp/ccodtIyF.s 			page 168


 4422              		.cfi_endproc
 4423              	.LFE141:
 4425              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4426              		.align	1
 4427              		.global	HAL_ADC_Start_IT
 4428              		.syntax unified
 4429              		.thumb
 4430              		.thumb_func
 4431              		.fpu fpv5-d16
 4433              	HAL_ADC_Start_IT:
 4434              	.LVL281:
 4435              	.LFB145:
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4436              		.loc 1 1410 1 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_TypeDef        *tmpADC_Master;
 4440              		.loc 1 1411 3 view .LVU1226
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4441              		.loc 1 1412 3 view .LVU1227
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4442              		.loc 1 1415 3 view .LVU1228
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4443              		.loc 1 1418 3 view .LVU1229
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4444              		.loc 1 1418 7 is_stmt 0 view .LVU1230
 4445 0000 0368     		ldr	r3, [r0]
 4446 0002 9B68     		ldr	r3, [r3, #8]
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4447              		.loc 1 1418 6 view .LVU1231
 4448 0004 13F0040F 		tst	r3, #4
 4449 0008 40F0C080 		bne	.L349
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4450              		.loc 1 1421 5 is_stmt 1 view .LVU1232
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4451              		.loc 1 1421 5 view .LVU1233
 4452 000c 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4453 0010 012B     		cmp	r3, #1
 4454 0012 00F0BE80 		beq	.L350
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4455              		.loc 1 1410 1 is_stmt 0 discriminator 2 view .LVU1234
 4456 0016 10B5     		push	{r4, lr}
 4457              	.LCFI24:
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 4, -8
 4460              		.cfi_offset 14, -4
 4461 0018 0446     		mov	r4, r0
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4462              		.loc 1 1421 5 is_stmt 1 discriminator 2 view .LVU1235
 4463 001a 0123     		movs	r3, #1
 4464 001c 80F85030 		strb	r3, [r0, #80]
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4465              		.loc 1 1424 5 discriminator 2 view .LVU1236
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4466              		.loc 1 1424 22 is_stmt 0 discriminator 2 view .LVU1237
 4467 0020 FFF7FEFF 		bl	ADC_Enable
ARM GAS  /tmp/ccodtIyF.s 			page 169


 4468              	.LVL282:
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4469              		.loc 1 1427 5 is_stmt 1 discriminator 2 view .LVU1238
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4470              		.loc 1 1427 8 is_stmt 0 discriminator 2 view .LVU1239
 4471 0024 0346     		mov	r3, r0
 4472 0026 0028     		cmp	r0, #0
 4473 0028 40F0AB80 		bne	.L335
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4474              		.loc 1 1430 7 is_stmt 1 view .LVU1240
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4475              		.loc 1 1430 11 is_stmt 0 view .LVU1241
 4476 002c 626D     		ldr	r2, [r4, #84]
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4477              		.loc 1 1430 10 view .LVU1242
 4478 002e 12F4805F 		tst	r2, #4096
 4479 0032 6AD0     		beq	.L336
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4480              		.loc 1 1433 9 is_stmt 1 view .LVU1243
 4481 0034 A26D     		ldr	r2, [r4, #88]
 4482 0036 22F00602 		bic	r2, r2, #6
 4483 003a A265     		str	r2, [r4, #88]
 4484              	.L337:
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4485              		.loc 1 1441 7 view .LVU1244
 4486 003c 616D     		ldr	r1, [r4, #84]
 4487 003e 564A     		ldr	r2, .L358
 4488 0040 0A40     		ands	r2, r2, r1
 4489 0042 42F48072 		orr	r2, r2, #256
 4490 0046 6265     		str	r2, [r4, #84]
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4491              		.loc 1 1446 7 view .LVU1245
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4492              		.loc 1 1446 11 is_stmt 0 view .LVU1246
 4493 0048 2268     		ldr	r2, [r4]
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4494              		.loc 1 1446 10 view .LVU1247
 4495 004a 5448     		ldr	r0, .L358+4
 4496              	.LVL283:
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4497              		.loc 1 1446 10 view .LVU1248
 4498 004c 5449     		ldr	r1, .L358+8
 4499 004e 8A42     		cmp	r2, r1
 4500 0050 18BF     		it	ne
 4501 0052 8242     		cmpne	r2, r0
 4502 0054 05D0     		beq	.L338
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4503              		.loc 1 1446 11 discriminator 1 view .LVU1249
 4504 0056 01F50071 		add	r1, r1, #512
 4505 005a 8968     		ldr	r1, [r1, #8]
 4506 005c 11F01F0F 		tst	r1, #31
 4507 0060 03D1     		bne	.L339
 4508              	.L338:
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4509              		.loc 1 1448 9 is_stmt 1 view .LVU1250
 4510 0062 616D     		ldr	r1, [r4, #84]
 4511 0064 21F48011 		bic	r1, r1, #1048576
ARM GAS  /tmp/ccodtIyF.s 			page 170


 4512 0068 6165     		str	r1, [r4, #84]
 4513              	.L339:
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4514              		.loc 1 1453 7 view .LVU1251
 4515 006a 1C21     		movs	r1, #28
 4516 006c 1160     		str	r1, [r2]
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4517              		.loc 1 1456 7 view .LVU1252
 4518 006e 2168     		ldr	r1, [r4]
 4519 0070 4A68     		ldr	r2, [r1, #4]
 4520 0072 22F01C02 		bic	r2, r2, #28
 4521 0076 4A60     		str	r2, [r1, #4]
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4522              		.loc 1 1459 7 view .LVU1253
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4523              		.loc 1 1459 24 is_stmt 0 view .LVU1254
 4524 0078 2269     		ldr	r2, [r4, #16]
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4525              		.loc 1 1459 7 view .LVU1255
 4526 007a 082A     		cmp	r2, #8
 4527 007c 48D0     		beq	.L355
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 4528              		.loc 1 1466 11 is_stmt 1 view .LVU1256
 4529 007e 2168     		ldr	r1, [r4]
 4530 0080 4A68     		ldr	r2, [r1, #4]
 4531 0082 42F00402 		orr	r2, r2, #4
 4532 0086 4A60     		str	r2, [r1, #4]
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4533              		.loc 1 1467 11 view .LVU1257
 4534              	.L341:
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4535              		.loc 1 1473 7 view .LVU1258
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4536              		.loc 1 1473 21 is_stmt 0 view .LVU1259
 4537 0088 226B     		ldr	r2, [r4, #48]
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4538              		.loc 1 1473 10 view .LVU1260
 4539 008a 22B9     		cbnz	r2, .L342
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4540              		.loc 1 1475 9 is_stmt 1 view .LVU1261
 4541 008c 2168     		ldr	r1, [r4]
 4542 008e 4A68     		ldr	r2, [r1, #4]
 4543 0090 42F01002 		orr	r2, r2, #16
 4544 0094 4A60     		str	r2, [r1, #4]
 4545              	.L342:
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4546              		.loc 1 1486 7 view .LVU1262
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4547              		.loc 1 1486 11 is_stmt 0 view .LVU1263
 4548 0096 2268     		ldr	r2, [r4]
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4549              		.loc 1 1486 10 view .LVU1264
 4550 0098 4048     		ldr	r0, .L358+4
 4551 009a 4249     		ldr	r1, .L358+12
 4552 009c 8A42     		cmp	r2, r1
 4553 009e 18BF     		it	ne
 4554 00a0 8242     		cmpne	r2, r0
ARM GAS  /tmp/ccodtIyF.s 			page 171


 4555 00a2 3BD0     		beq	.L343
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4556              		.loc 1 1486 11 discriminator 1 view .LVU1265
 4557 00a4 01F16841 		add	r1, r1, #-402653184
 4558 00a8 A1F57451 		sub	r1, r1, #15616
 4559 00ac 8968     		ldr	r1, [r1, #8]
 4560 00ae 11F01F0F 		tst	r1, #31
 4561 00b2 33D0     		beq	.L343
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4562              		.loc 1 1486 11 discriminator 2 view .LVU1266
 4563 00b4 3C49     		ldr	r1, .L358+16
 4564 00b6 8968     		ldr	r1, [r1, #8]
 4565 00b8 01F01F01 		and	r1, r1, #31
 4566 00bc 0529     		cmp	r1, #5
 4567 00be 2DD0     		beq	.L343
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4568              		.loc 1 1486 11 discriminator 3 view .LVU1267
 4569 00c0 3949     		ldr	r1, .L358+16
 4570 00c2 8968     		ldr	r1, [r1, #8]
 4571 00c4 01F01F01 		and	r1, r1, #31
 4572 00c8 0929     		cmp	r1, #9
 4573 00ca 27D0     		beq	.L343
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 4574              		.loc 1 1521 9 is_stmt 1 view .LVU1268
 4575 00cc 616D     		ldr	r1, [r4, #84]
 4576 00ce 41F48011 		orr	r1, r1, #1048576
 4577 00d2 6165     		str	r1, [r4, #84]
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET)
 4578              		.loc 1 1524 9 view .LVU1269
 4579              	.LVL284:
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4580              		.loc 1 1525 9 view .LVU1270
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4581              		.loc 1 1525 13 is_stmt 0 view .LVU1271
 4582 00d4 3149     		ldr	r1, .L358+4
 4583 00d6 C968     		ldr	r1, [r1, #12]
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4584              		.loc 1 1525 12 view .LVU1272
 4585 00d8 11F0007F 		tst	r1, #33554432
 4586 00dc 11D0     		beq	.L347
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 4587              		.loc 1 1529 11 is_stmt 1 view .LVU1273
 4588 00de 616D     		ldr	r1, [r4, #84]
 4589 00e0 21F44051 		bic	r1, r1, #12288
 4590 00e4 41F48051 		orr	r1, r1, #4096
 4591 00e8 6165     		str	r1, [r4, #84]
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4592              		.loc 1 1531 11 view .LVU1274
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4593              		.loc 1 1531 28 is_stmt 0 view .LVU1275
 4594 00ea 2169     		ldr	r1, [r4, #16]
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4595              		.loc 1 1531 11 view .LVU1276
 4596 00ec 0829     		cmp	r1, #8
 4597 00ee 3ED0     		beq	.L356
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4598              		.loc 1 1539 15 is_stmt 1 view .LVU1277
ARM GAS  /tmp/ccodtIyF.s 			page 172


 4599 00f0 5168     		ldr	r1, [r2, #4]
 4600 00f2 21F04001 		bic	r1, r1, #64
 4601 00f6 5160     		str	r1, [r2, #4]
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 4602              		.loc 1 1540 15 view .LVU1278
 4603 00f8 2168     		ldr	r1, [r4]
 4604 00fa 4A68     		ldr	r2, [r1, #4]
 4605 00fc 42F02002 		orr	r2, r2, #32
 4606 0100 4A60     		str	r2, [r1, #4]
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4607              		.loc 1 1541 15 view .LVU1279
 4608              	.L347:
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       } /*  if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)   ) */
 4609              		.loc 1 1545 9 view .LVU1280
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       } /*  if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)   ) */
 4610              		.loc 1 1545 9 view .LVU1281
 4611 0102 0022     		movs	r2, #0
 4612 0104 84F85020 		strb	r2, [r4, #80]
 4613 0108 3EE0     		b	.L334
 4614              	.LVL285:
 4615              	.L336:
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4616              		.loc 1 1438 9 view .LVU1282
 4617 010a 0022     		movs	r2, #0
 4618 010c A265     		str	r2, [r4, #88]
 4619 010e 95E7     		b	.L337
 4620              	.LVL286:
 4621              	.L355:
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 4622              		.loc 1 1462 12 view .LVU1283
 4623 0110 2168     		ldr	r1, [r4]
 4624 0112 4A68     		ldr	r2, [r1, #4]
 4625 0114 42F00802 		orr	r2, r2, #8
 4626 0118 4A60     		str	r2, [r1, #4]
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 4627              		.loc 1 1463 11 view .LVU1284
 4628 011a B5E7     		b	.L341
 4629              	.L343:
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4630              		.loc 1 1491 9 view .LVU1285
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4631              		.loc 1 1491 13 is_stmt 0 view .LVU1286
 4632 011c D168     		ldr	r1, [r2, #12]
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4633              		.loc 1 1491 12 view .LVU1287
 4634 011e 11F0007F 		tst	r1, #33554432
 4635 0122 11D0     		beq	.L345
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4636              		.loc 1 1493 11 is_stmt 1 view .LVU1288
 4637 0124 616D     		ldr	r1, [r4, #84]
 4638 0126 21F44051 		bic	r1, r1, #12288
 4639 012a 41F48051 		orr	r1, r1, #4096
 4640 012e 6165     		str	r1, [r4, #84]
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4641              		.loc 1 1499 11 view .LVU1289
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4642              		.loc 1 1499 28 is_stmt 0 view .LVU1290
ARM GAS  /tmp/ccodtIyF.s 			page 173


 4643 0130 2169     		ldr	r1, [r4, #16]
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4644              		.loc 1 1499 11 view .LVU1291
 4645 0132 0829     		cmp	r1, #8
 4646 0134 11D0     		beq	.L357
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4647              		.loc 1 1507 15 is_stmt 1 view .LVU1292
 4648 0136 5168     		ldr	r1, [r2, #4]
 4649 0138 21F04001 		bic	r1, r1, #64
 4650 013c 5160     		str	r1, [r2, #4]
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 4651              		.loc 1 1508 15 view .LVU1293
 4652 013e 2168     		ldr	r1, [r4]
 4653 0140 4A68     		ldr	r2, [r1, #4]
 4654 0142 42F02002 		orr	r2, r2, #32
 4655 0146 4A60     		str	r2, [r1, #4]
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4656              		.loc 1 1509 15 view .LVU1294
 4657              	.L345:
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC */
 4658              		.loc 1 1513 9 view .LVU1295
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC */
 4659              		.loc 1 1513 9 view .LVU1296
 4660 0148 0022     		movs	r2, #0
 4661 014a 84F85020 		strb	r2, [r4, #80]
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4662              		.loc 1 1515 9 view .LVU1297
 4663 014e 2168     		ldr	r1, [r4]
 4664 0150 8A68     		ldr	r2, [r1, #8]
 4665 0152 42F00402 		orr	r2, r2, #4
 4666 0156 8A60     		str	r2, [r1, #8]
 4667 0158 16E0     		b	.L334
 4668              	.L357:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4669              		.loc 1 1502 15 view .LVU1298
 4670 015a 5168     		ldr	r1, [r2, #4]
 4671 015c 21F02001 		bic	r1, r1, #32
 4672 0160 5160     		str	r1, [r2, #4]
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 4673              		.loc 1 1503 15 view .LVU1299
 4674 0162 2168     		ldr	r1, [r4]
 4675 0164 4A68     		ldr	r2, [r1, #4]
 4676 0166 42F04002 		orr	r2, r2, #64
 4677 016a 4A60     		str	r2, [r1, #4]
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 4678              		.loc 1 1504 15 view .LVU1300
 4679 016c ECE7     		b	.L345
 4680              	.LVL287:
 4681              	.L356:
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4682              		.loc 1 1534 15 view .LVU1301
 4683 016e 5168     		ldr	r1, [r2, #4]
 4684 0170 21F02001 		bic	r1, r1, #32
 4685 0174 5160     		str	r1, [r2, #4]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 4686              		.loc 1 1535 15 view .LVU1302
 4687 0176 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccodtIyF.s 			page 174


 4688 0178 4A68     		ldr	r2, [r1, #4]
 4689 017a 42F04002 		orr	r2, r2, #64
 4690 017e 4A60     		str	r2, [r1, #4]
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 4691              		.loc 1 1536 15 view .LVU1303
 4692 0180 BFE7     		b	.L347
 4693              	.LVL288:
 4694              	.L335:
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4695              		.loc 1 1551 7 view .LVU1304
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4696              		.loc 1 1551 7 view .LVU1305
 4697 0182 0022     		movs	r2, #0
 4698 0184 84F85020 		strb	r2, [r4, #80]
 4699              	.LVL289:
 4700              	.L334:
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4701              		.loc 1 1560 1 is_stmt 0 view .LVU1306
 4702 0188 1846     		mov	r0, r3
 4703 018a 10BD     		pop	{r4, pc}
 4704              	.LVL290:
 4705              	.L349:
 4706              	.LCFI25:
 4707              		.cfi_def_cfa_offset 0
 4708              		.cfi_restore 4
 4709              		.cfi_restore 14
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4710              		.loc 1 1556 20 view .LVU1307
 4711 018c 0223     		movs	r3, #2
 4712              	.L352:
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4713              		.loc 1 1560 1 view .LVU1308
 4714 018e 1846     		mov	r0, r3
 4715              	.LVL291:
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4716              		.loc 1 1560 1 view .LVU1309
 4717 0190 7047     		bx	lr
 4718              	.LVL292:
 4719              	.L350:
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4720              		.loc 1 1421 5 view .LVU1310
 4721 0192 0223     		movs	r3, #2
 4722 0194 FBE7     		b	.L352
 4723              	.L359:
 4724 0196 00BF     		.align	2
 4725              	.L358:
 4726 0198 FEF0FFFF 		.word	-3842
 4727 019c 00200240 		.word	1073881088
 4728 01a0 00210240 		.word	1073881344
 4729 01a4 00600258 		.word	1476550656
 4730 01a8 00230240 		.word	1073881856
 4731              		.cfi_endproc
 4732              	.LFE145:
 4734              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 4735              		.align	1
 4736              		.global	HAL_ADC_Start_DMA
 4737              		.syntax unified
ARM GAS  /tmp/ccodtIyF.s 			page 175


 4738              		.thumb
 4739              		.thumb_func
 4740              		.fpu fpv5-d16
 4742              	HAL_ADC_Start_DMA:
 4743              	.LVL293:
 4744              	.LFB147:
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4745              		.loc 1 1624 1 is_stmt 1 view -0
 4746              		.cfi_startproc
 4747              		@ args = 0, pretend = 0, frame = 0
 4748              		@ frame_needed = 0, uses_anonymous_args = 0
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4749              		.loc 1 1624 1 is_stmt 0 view .LVU1312
 4750 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4751              	.LCFI26:
 4752              		.cfi_def_cfa_offset 24
 4753              		.cfi_offset 3, -24
 4754              		.cfi_offset 4, -20
 4755              		.cfi_offset 5, -16
 4756              		.cfi_offset 6, -12
 4757              		.cfi_offset 7, -8
 4758              		.cfi_offset 14, -4
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4759              		.loc 1 1625 3 is_stmt 1 view .LVU1313
 4760              	.LVL294:
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4761              		.loc 1 1628 3 view .LVU1314
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4762              		.loc 1 1631 3 view .LVU1315
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4763              		.loc 1 1631 7 is_stmt 0 view .LVU1316
 4764 0002 0468     		ldr	r4, [r0]
 4765 0004 A568     		ldr	r5, [r4, #8]
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4766              		.loc 1 1631 6 view .LVU1317
 4767 0006 15F0040F 		tst	r5, #4
 4768 000a 71D1     		bne	.L368
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4769              		.loc 1 1634 5 is_stmt 1 view .LVU1318
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4770              		.loc 1 1634 5 view .LVU1319
 4771 000c 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4772 0010 012B     		cmp	r3, #1
 4773 0012 70D0     		beq	.L369
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4774              		.loc 1 1634 5 discriminator 2 view .LVU1320
 4775 0014 0123     		movs	r3, #1
 4776 0016 80F85030 		strb	r3, [r0, #80]
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4777              		.loc 1 1638 5 discriminator 2 view .LVU1321
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4778              		.loc 1 1638 9 is_stmt 0 discriminator 2 view .LVU1322
 4779 001a 384D     		ldr	r5, .L371
 4780 001c 384B     		ldr	r3, .L371+4
 4781 001e 9C42     		cmp	r4, r3
 4782 0020 18BF     		it	ne
 4783 0022 AC42     		cmpne	r4, r5
ARM GAS  /tmp/ccodtIyF.s 			page 176


 4784 0024 16D1     		bne	.L362
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4785              		.loc 1 1638 9 discriminator 1 view .LVU1323
 4786 0026 03F50073 		add	r3, r3, #512
 4787 002a 9B68     		ldr	r3, [r3, #8]
 4788 002c 13F01F0F 		tst	r3, #31
 4789 0030 10D0     		beq	.L362
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4790              		.loc 1 1638 9 discriminator 3 view .LVU1324
 4791 0032 344B     		ldr	r3, .L371+8
 4792 0034 9B68     		ldr	r3, [r3, #8]
 4793 0036 03F01F03 		and	r3, r3, #31
 4794 003a 052B     		cmp	r3, #5
 4795 003c 0AD0     		beq	.L362
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4796              		.loc 1 1638 9 discriminator 5 view .LVU1325
 4797 003e 314B     		ldr	r3, .L371+8
 4798 0040 9B68     		ldr	r3, [r3, #8]
 4799 0042 03F01F03 		and	r3, r3, #31
 4800 0046 092B     		cmp	r3, #9
 4801 0048 04D0     		beq	.L362
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 4802              		.loc 1 1712 7 is_stmt 1 view .LVU1326
 4803              	.LVL295:
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     } /* if (ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET) */
 4804              		.loc 1 1714 7 view .LVU1327
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     } /* if (ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET) */
 4805              		.loc 1 1714 7 view .LVU1328
 4806 004a 0023     		movs	r3, #0
 4807 004c 80F85030 		strb	r3, [r0, #80]
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 4808              		.loc 1 1712 22 is_stmt 0 view .LVU1329
 4809 0050 0126     		movs	r6, #1
 4810 0052 4EE0     		b	.L361
 4811              	.LVL296:
 4812              	.L362:
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 4813              		.loc 1 1712 22 view .LVU1330
 4814 0054 1746     		mov	r7, r2
 4815 0056 0D46     		mov	r5, r1
 4816 0058 0446     		mov	r4, r0
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4817              		.loc 1 1641 7 is_stmt 1 view .LVU1331
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4818              		.loc 1 1641 24 is_stmt 0 view .LVU1332
 4819 005a FFF7FEFF 		bl	ADC_Enable
 4820              	.LVL297:
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4821              		.loc 1 1644 7 is_stmt 1 view .LVU1333
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4822              		.loc 1 1644 10 is_stmt 0 view .LVU1334
 4823 005e 0646     		mov	r6, r0
 4824 0060 0028     		cmp	r0, #0
 4825 0062 41D1     		bne	.L363
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4826              		.loc 1 1647 9 is_stmt 1 view .LVU1335
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  /tmp/ccodtIyF.s 			page 177


 4827              		.loc 1 1647 13 is_stmt 0 view .LVU1336
 4828 0064 636D     		ldr	r3, [r4, #84]
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4829              		.loc 1 1647 12 view .LVU1337
 4830 0066 13F4805F 		tst	r3, #4096
 4831 006a 3AD0     		beq	.L364
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4832              		.loc 1 1650 11 is_stmt 1 view .LVU1338
 4833 006c A36D     		ldr	r3, [r4, #88]
 4834 006e 23F00603 		bic	r3, r3, #6
 4835 0072 A365     		str	r3, [r4, #88]
 4836              	.L365:
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HA
 4837              		.loc 1 1658 9 view .LVU1339
 4838 0074 626D     		ldr	r2, [r4, #84]
 4839 0076 244B     		ldr	r3, .L371+12
 4840 0078 1340     		ands	r3, r3, r2
 4841 007a 43F48073 		orr	r3, r3, #256
 4842 007e 6365     		str	r3, [r4, #84]
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4843              		.loc 1 1665 9 view .LVU1340
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4844              		.loc 1 1665 13 is_stmt 0 view .LVU1341
 4845 0080 2368     		ldr	r3, [r4]
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4846              		.loc 1 1665 12 view .LVU1342
 4847 0082 1E49     		ldr	r1, .L371
 4848 0084 1E4A     		ldr	r2, .L371+4
 4849 0086 9342     		cmp	r3, r2
 4850 0088 18BF     		it	ne
 4851 008a 8B42     		cmpne	r3, r1
 4852 008c 04D0     		beq	.L366
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4853              		.loc 1 1665 13 discriminator 1 view .LVU1343
 4854 008e 1D4B     		ldr	r3, .L371+8
 4855 0090 9B68     		ldr	r3, [r3, #8]
 4856 0092 13F01F0F 		tst	r3, #31
 4857 0096 03D1     		bne	.L367
 4858              	.L366:
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4859              		.loc 1 1667 11 is_stmt 1 view .LVU1344
 4860 0098 636D     		ldr	r3, [r4, #84]
 4861 009a 23F48013 		bic	r3, r3, #1048576
 4862 009e 6365     		str	r3, [r4, #84]
 4863              	.L367:
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4864              		.loc 1 1671 9 view .LVU1345
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4865              		.loc 1 1671 13 is_stmt 0 view .LVU1346
 4866 00a0 E36C     		ldr	r3, [r4, #76]
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4867              		.loc 1 1671 44 view .LVU1347
 4868 00a2 1A4A     		ldr	r2, .L371+16
 4869 00a4 DA63     		str	r2, [r3, #60]
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4870              		.loc 1 1674 9 is_stmt 1 view .LVU1348
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 178


 4871              		.loc 1 1674 13 is_stmt 0 view .LVU1349
 4872 00a6 E36C     		ldr	r3, [r4, #76]
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4873              		.loc 1 1674 48 view .LVU1350
 4874 00a8 194A     		ldr	r2, .L371+20
 4875 00aa 1A64     		str	r2, [r3, #64]
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4876              		.loc 1 1677 9 is_stmt 1 view .LVU1351
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4877              		.loc 1 1677 13 is_stmt 0 view .LVU1352
 4878 00ac E36C     		ldr	r3, [r4, #76]
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4879              		.loc 1 1677 45 view .LVU1353
 4880 00ae 194A     		ldr	r2, .L371+24
 4881 00b0 DA64     		str	r2, [r3, #76]
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4882              		.loc 1 1686 9 is_stmt 1 view .LVU1354
 4883 00b2 2368     		ldr	r3, [r4]
 4884 00b4 1C22     		movs	r2, #28
 4885 00b6 1A60     		str	r2, [r3]
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4886              		.loc 1 1691 9 view .LVU1355
 4887 00b8 2268     		ldr	r2, [r4]
 4888 00ba 5368     		ldr	r3, [r2, #4]
 4889 00bc 43F01003 		orr	r3, r3, #16
 4890 00c0 5360     		str	r3, [r2, #4]
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4891              		.loc 1 1694 9 view .LVU1356
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4892              		.loc 1 1694 59 is_stmt 0 view .LVU1357
 4893 00c2 2168     		ldr	r1, [r4]
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4894              		.loc 1 1694 9 view .LVU1358
 4895 00c4 3B46     		mov	r3, r7
 4896 00c6 2A46     		mov	r2, r5
 4897 00c8 4031     		adds	r1, r1, #64
 4898 00ca E06C     		ldr	r0, [r4, #76]
 4899              	.LVL298:
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4900              		.loc 1 1694 9 view .LVU1359
 4901 00cc FFF7FEFF 		bl	HAL_DMA_Start_IT
 4902              	.LVL299:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
 4903              		.loc 1 1698 9 is_stmt 1 view .LVU1360
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
 4904              		.loc 1 1698 9 view .LVU1361
 4905 00d0 0023     		movs	r3, #0
 4906 00d2 84F85030 		strb	r3, [r4, #80]
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4907              		.loc 1 1702 9 view .LVU1362
 4908 00d6 2268     		ldr	r2, [r4]
 4909 00d8 9368     		ldr	r3, [r2, #8]
 4910 00da 43F00403 		orr	r3, r3, #4
 4911 00de 9360     		str	r3, [r2, #8]
 4912 00e0 07E0     		b	.L361
 4913              	.LVL300:
 4914              	.L364:
ARM GAS  /tmp/ccodtIyF.s 			page 179


1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4915              		.loc 1 1655 11 view .LVU1363
 4916 00e2 0023     		movs	r3, #0
 4917 00e4 A365     		str	r3, [r4, #88]
 4918 00e6 C5E7     		b	.L365
 4919              	.L363:
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }  /* if (tmp_hal_status == HAL_OK) */
 4920              		.loc 1 1707 9 view .LVU1364
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }  /* if (tmp_hal_status == HAL_OK) */
 4921              		.loc 1 1707 9 view .LVU1365
 4922 00e8 0023     		movs	r3, #0
 4923 00ea 84F85030 		strb	r3, [r4, #80]
 4924 00ee 00E0     		b	.L361
 4925              	.LVL301:
 4926              	.L368:
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4927              		.loc 1 1720 20 is_stmt 0 view .LVU1366
 4928 00f0 0226     		movs	r6, #2
 4929              	.LVL302:
 4930              	.L361:
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4931              		.loc 1 1725 1 view .LVU1367
 4932 00f2 3046     		mov	r0, r6
 4933 00f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4934              	.LVL303:
 4935              	.L369:
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4936              		.loc 1 1634 5 view .LVU1368
 4937 00f6 0226     		movs	r6, #2
 4938 00f8 FBE7     		b	.L361
 4939              	.L372:
 4940 00fa 00BF     		.align	2
 4941              	.L371:
 4942 00fc 00200240 		.word	1073881088
 4943 0100 00210240 		.word	1073881344
 4944 0104 00230240 		.word	1073881856
 4945 0108 FEF0FFFF 		.word	-3842
 4946 010c 00000000 		.word	ADC_DMAConvCplt
 4947 0110 00000000 		.word	ADC_DMAHalfConvCplt
 4948 0114 00000000 		.word	ADC_DMAError
 4949              		.cfi_endproc
 4950              	.LFE147:
 4952              		.section	.text.ADC_Disable,"ax",%progbits
 4953              		.align	1
 4954              		.global	ADC_Disable
 4955              		.syntax unified
 4956              		.thumb
 4957              		.thumb_func
 4958              		.fpu fpv5-d16
 4960              	ADC_Disable:
 4961              	.LVL304:
 4962              	.LFB161:
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
 4963              		.loc 1 3097 1 is_stmt 1 view -0
 4964              		.cfi_startproc
 4965              		@ args = 0, pretend = 0, frame = 0
 4966              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccodtIyF.s 			page 180


3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart = 0;
 4967              		.loc 1 3097 1 is_stmt 0 view .LVU1370
 4968 0000 38B5     		push	{r3, r4, r5, lr}
 4969              	.LCFI27:
 4970              		.cfi_def_cfa_offset 16
 4971              		.cfi_offset 3, -16
 4972              		.cfi_offset 4, -12
 4973              		.cfi_offset 5, -8
 4974              		.cfi_offset 14, -4
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4975              		.loc 1 3098 3 is_stmt 1 view .LVU1371
 4976              	.LVL305:
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4977              		.loc 1 3103 3 view .LVU1372
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4978              		.loc 1 3103 7 is_stmt 0 view .LVU1373
 4979 0002 0268     		ldr	r2, [r0]
 4980 0004 9368     		ldr	r3, [r2, #8]
 4981 0006 03F00303 		and	r3, r3, #3
 4982 000a 012B     		cmp	r3, #1
 4983 000c 01D0     		beq	.L381
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4984              		.loc 1 3142 10 view .LVU1374
 4985 000e 0020     		movs	r0, #0
 4986              	.LVL306:
 4987              	.L374:
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4988              		.loc 1 3143 1 view .LVU1375
 4989 0010 38BD     		pop	{r3, r4, r5, pc}
 4990              	.LVL307:
 4991              	.L381:
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4992              		.loc 1 3103 7 discriminator 1 view .LVU1376
 4993 0012 1368     		ldr	r3, [r2]
 4994 0014 13F0010F 		tst	r3, #1
 4995 0018 2FD0     		beq	.L379
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4996              		.loc 1 3106 5 is_stmt 1 view .LVU1377
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4997              		.loc 1 3106 9 is_stmt 0 view .LVU1378
 4998 001a 9368     		ldr	r3, [r2, #8]
 4999 001c 03F00D03 		and	r3, r3, #13
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5000              		.loc 1 3106 8 view .LVU1379
 5001 0020 012B     		cmp	r3, #1
 5002 0022 09D0     		beq	.L382
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5003              		.loc 1 3114 7 is_stmt 1 view .LVU1380
 5004 0024 436D     		ldr	r3, [r0, #84]
 5005 0026 43F01003 		orr	r3, r3, #16
 5006 002a 4365     		str	r3, [r0, #84]
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5007              		.loc 1 3117 7 view .LVU1381
 5008 002c 836D     		ldr	r3, [r0, #88]
 5009 002e 43F00103 		orr	r3, r3, #1
 5010 0032 8365     		str	r3, [r0, #88]
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
ARM GAS  /tmp/ccodtIyF.s 			page 181


 5011              		.loc 1 3119 7 view .LVU1382
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5012              		.loc 1 3119 14 is_stmt 0 view .LVU1383
 5013 0034 0120     		movs	r0, #1
 5014              	.LVL308:
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5015              		.loc 1 3119 14 view .LVU1384
 5016 0036 EBE7     		b	.L374
 5017              	.LVL309:
 5018              	.L382:
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5019              		.loc 1 3119 14 view .LVU1385
 5020 0038 0446     		mov	r4, r0
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5021              		.loc 1 3109 7 is_stmt 1 view .LVU1386
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5022              		.loc 1 3109 7 view .LVU1387
 5023 003a 9368     		ldr	r3, [r2, #8]
 5024 003c 43F00203 		orr	r3, r3, #2
 5025 0040 9360     		str	r3, [r2, #8]
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5026              		.loc 1 3109 7 view .LVU1388
 5027 0042 0368     		ldr	r3, [r0]
 5028 0044 0322     		movs	r2, #3
 5029 0046 1A60     		str	r2, [r3]
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5030              		.loc 1 3124 5 view .LVU1389
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5031              		.loc 1 3124 17 is_stmt 0 view .LVU1390
 5032 0048 FFF7FEFF 		bl	HAL_GetTick
 5033              	.LVL310:
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5034              		.loc 1 3124 17 view .LVU1391
 5035 004c 0546     		mov	r5, r0
 5036              	.LVL311:
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5037              		.loc 1 3126 5 is_stmt 1 view .LVU1392
 5038              	.L376:
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5039              		.loc 1 3126 11 is_stmt 0 view .LVU1393
 5040 004e 2368     		ldr	r3, [r4]
 5041 0050 9B68     		ldr	r3, [r3, #8]
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5042              		.loc 1 3126 10 view .LVU1394
 5043 0052 13F0010F 		tst	r3, #1
 5044 0056 0ED0     		beq	.L383
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5045              		.loc 1 3128 7 is_stmt 1 view .LVU1395
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5046              		.loc 1 3128 11 is_stmt 0 view .LVU1396
 5047 0058 FFF7FEFF 		bl	HAL_GetTick
 5048              	.LVL312:
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5049              		.loc 1 3128 24 view .LVU1397
 5050 005c 401B     		subs	r0, r0, r5
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5051              		.loc 1 3128 9 view .LVU1398
ARM GAS  /tmp/ccodtIyF.s 			page 182


 5052 005e 0228     		cmp	r0, #2
 5053 0060 F5D9     		bls	.L376
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5054              		.loc 1 3131 9 is_stmt 1 view .LVU1399
 5055 0062 636D     		ldr	r3, [r4, #84]
 5056 0064 43F01003 		orr	r3, r3, #16
 5057 0068 6365     		str	r3, [r4, #84]
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5058              		.loc 1 3134 9 view .LVU1400
 5059 006a A36D     		ldr	r3, [r4, #88]
 5060 006c 43F00103 		orr	r3, r3, #1
 5061 0070 A365     		str	r3, [r4, #88]
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5062              		.loc 1 3136 9 view .LVU1401
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5063              		.loc 1 3136 16 is_stmt 0 view .LVU1402
 5064 0072 0120     		movs	r0, #1
 5065 0074 CCE7     		b	.L374
 5066              	.L383:
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5067              		.loc 1 3142 10 view .LVU1403
 5068 0076 0020     		movs	r0, #0
 5069 0078 CAE7     		b	.L374
 5070              	.LVL313:
 5071              	.L379:
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5072              		.loc 1 3142 10 view .LVU1404
 5073 007a 0020     		movs	r0, #0
 5074              	.LVL314:
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5075              		.loc 1 3142 10 view .LVU1405
 5076 007c C8E7     		b	.L374
 5077              		.cfi_endproc
 5078              	.LFE161:
 5080              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5081              		.align	1
 5082              		.global	HAL_ADC_DeInit
 5083              		.syntax unified
 5084              		.thumb
 5085              		.thumb_func
 5086              		.fpu fpv5-d16
 5088              	HAL_ADC_DeInit:
 5089              	.LVL315:
 5090              	.LFB138:
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5091              		.loc 1 672 1 is_stmt 1 view -0
 5092              		.cfi_startproc
 5093              		@ args = 0, pretend = 0, frame = 0
 5094              		@ frame_needed = 0, uses_anonymous_args = 0
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5095              		.loc 1 673 3 view .LVU1407
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5096              		.loc 1 676 3 view .LVU1408
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5097              		.loc 1 676 5 is_stmt 0 view .LVU1409
 5098 0000 0028     		cmp	r0, #0
 5099 0002 00F03181 		beq	.L399
ARM GAS  /tmp/ccodtIyF.s 			page 183


 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5100              		.loc 1 672 1 view .LVU1410
 5101 0006 10B5     		push	{r4, lr}
 5102              	.LCFI28:
 5103              		.cfi_def_cfa_offset 8
 5104              		.cfi_offset 4, -8
 5105              		.cfi_offset 14, -4
 5106 0008 0446     		mov	r4, r0
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5107              		.loc 1 682 3 is_stmt 1 view .LVU1411
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5108              		.loc 1 685 3 view .LVU1412
 5109 000a 436D     		ldr	r3, [r0, #84]
 5110 000c 43F00203 		orr	r3, r3, #2
 5111 0010 4365     		str	r3, [r0, #84]
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5112              		.loc 1 690 3 view .LVU1413
 5113 0012 6C21     		movs	r1, #108
 5114 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5115              	.LVL316:
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5116              		.loc 1 699 3 view .LVU1414
 5117 0018 2268     		ldr	r2, [r4]
 5118 001a D368     		ldr	r3, [r2, #12]
 5119 001c 43F40013 		orr	r3, r3, #2097152
 5120 0020 D360     		str	r3, [r2, #12]
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5121              		.loc 1 704 3 view .LVU1415
 5122 0022 2046     		mov	r0, r4
 5123 0024 FFF7FEFF 		bl	ADC_Disable
 5124              	.LVL317:
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5125              		.loc 1 709 3 view .LVU1416
 5126 0028 2268     		ldr	r2, [r4]
 5127 002a 5168     		ldr	r1, [r2, #4]
 5128 002c 8F4B     		ldr	r3, .L426
 5129 002e 0B40     		ands	r3, r3, r1
 5130 0030 5360     		str	r3, [r2, #4]
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5131              		.loc 1 716 3 view .LVU1417
 5132 0032 2368     		ldr	r3, [r4]
 5133 0034 40F2FF72 		movw	r2, #2047
 5134 0038 1A60     		str	r2, [r3]
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5135              		.loc 1 727 3 view .LVU1418
 5136 003a 2268     		ldr	r2, [r4]
 5137 003c 9368     		ldr	r3, [r2, #8]
 5138 003e 23F0A043 		bic	r3, r3, #1342177280
 5139 0042 9360     		str	r3, [r2, #8]
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5140              		.loc 1 728 3 view .LVU1419
 5141 0044 2268     		ldr	r2, [r4]
 5142 0046 9368     		ldr	r3, [r2, #8]
 5143 0048 43F00053 		orr	r3, r3, #536870912
 5144 004c 9360     		str	r3, [r2, #8]
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |
 5145              		.loc 1 731 3 view .LVU1420
ARM GAS  /tmp/ccodtIyF.s 			page 184


 5146 004e 2268     		ldr	r2, [r4]
 5147 0050 D368     		ldr	r3, [r2, #12]
 5148 0052 03F08023 		and	r3, r3, #-2147450880
 5149 0056 D360     		str	r3, [r2, #12]
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5150              		.loc 1 737 3 view .LVU1421
 5151 0058 2268     		ldr	r2, [r4]
 5152 005a D368     		ldr	r3, [r2, #12]
 5153 005c 43F00043 		orr	r3, r3, #-2147483648
 5154 0060 D360     		str	r3, [r2, #12]
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_CFGR2_OSR   | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE );
 5155              		.loc 1 740 3 view .LVU1422
 5156 0062 2268     		ldr	r2, [r4]
 5157 0064 1169     		ldr	r1, [r2, #16]
 5158 0066 824B     		ldr	r3, .L426+4
 5159 0068 0B40     		ands	r3, r3, r1
 5160 006a 1361     		str	r3, [r2, #16]
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 |
 5161              		.loc 1 744 3 view .LVU1423
 5162 006c 2268     		ldr	r2, [r4]
 5163 006e 5369     		ldr	r3, [r2, #20]
 5164 0070 03F04043 		and	r3, r3, #-1073741824
 5165 0074 5361     		str	r3, [r2, #20]
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                    ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5166              		.loc 1 750 3 view .LVU1424
 5167 0076 2268     		ldr	r2, [r4]
 5168 0078 9369     		ldr	r3, [r2, #24]
 5169 007a 03F07843 		and	r3, r3, #-134217728
 5170 007e 9361     		str	r3, [r2, #24]
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR1, ADC_HTR1_HT1);
 5171              		.loc 1 755 3 view .LVU1425
 5172 0080 2268     		ldr	r2, [r4]
 5173 0082 136A     		ldr	r3, [r2, #32]
 5174 0084 03F07C43 		and	r3, r3, #-67108864
 5175 0088 1362     		str	r3, [r2, #32]
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5176              		.loc 1 756 3 view .LVU1426
 5177 008a 2268     		ldr	r2, [r4]
 5178 008c 536A     		ldr	r3, [r2, #36]
 5179 008e 03F07C43 		and	r3, r3, #-67108864
 5180 0092 5362     		str	r3, [r2, #36]
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2, ADC_HTR2_HT2);
 5181              		.loc 1 759 3 view .LVU1427
 5182 0094 2268     		ldr	r2, [r4]
 5183 0096 D2F8B030 		ldr	r3, [r2, #176]
 5184 009a 03F07C43 		and	r3, r3, #-67108864
 5185 009e C2F8B030 		str	r3, [r2, #176]
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5186              		.loc 1 760 3 view .LVU1428
 5187 00a2 2268     		ldr	r2, [r4]
 5188 00a4 D2F8B430 		ldr	r3, [r2, #180]
 5189 00a8 03F07C43 		and	r3, r3, #-67108864
 5190 00ac C2F8B430 		str	r3, [r2, #180]
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR3, ADC_HTR3_HT3);
 5191              		.loc 1 763 3 view .LVU1429
 5192 00b0 2268     		ldr	r2, [r4]
 5193 00b2 D2F8B830 		ldr	r3, [r2, #184]
ARM GAS  /tmp/ccodtIyF.s 			page 185


 5194 00b6 03F07C43 		and	r3, r3, #-67108864
 5195 00ba C2F8B830 		str	r3, [r2, #184]
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5196              		.loc 1 764 3 view .LVU1430
 5197 00be 2268     		ldr	r2, [r4]
 5198 00c0 D2F8BC30 		ldr	r3, [r2, #188]
 5199 00c4 03F07C43 		and	r3, r3, #-67108864
 5200 00c8 C2F8BC30 		str	r3, [r2, #188]
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_SQR1_SQ1 | ADC_SQR1_L);
 5201              		.loc 1 767 3 view .LVU1431
 5202 00cc 2268     		ldr	r2, [r4]
 5203 00ce 116B     		ldr	r1, [r2, #48]
 5204 00d0 684B     		ldr	r3, .L426+8
 5205 00d2 0B40     		ands	r3, r3, r1
 5206 00d4 1363     		str	r3, [r2, #48]
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5207              		.loc 1 771 3 view .LVU1432
 5208 00d6 2368     		ldr	r3, [r4]
 5209 00d8 5A6B     		ldr	r2, [r3, #52]
 5210 00da 6749     		ldr	r1, .L426+12
 5211 00dc 0A40     		ands	r2, r2, r1
 5212 00de 5A63     		str	r2, [r3, #52]
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5213              		.loc 1 775 3 view .LVU1433
 5214 00e0 2268     		ldr	r2, [r4]
 5215 00e2 936B     		ldr	r3, [r2, #56]
 5216 00e4 0B40     		ands	r3, r3, r1
 5217 00e6 9363     		str	r3, [r2, #56]
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5218              		.loc 1 779 3 view .LVU1434
 5219 00e8 2268     		ldr	r2, [r4]
 5220 00ea D16B     		ldr	r1, [r2, #60]
 5221 00ec 634B     		ldr	r3, .L426+16
 5222 00ee 0B40     		ands	r3, r3, r1
 5223 00f0 D363     		str	r3, [r2, #60]
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 5224              		.loc 1 787 3 view .LVU1435
 5225 00f2 2268     		ldr	r2, [r4]
 5226 00f4 136E     		ldr	r3, [r2, #96]
 5227 00f6 0023     		movs	r3, #0
 5228 00f8 1366     		str	r3, [r2, #96]
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR3 */
 5229              		.loc 1 789 3 view .LVU1436
 5230 00fa 2268     		ldr	r2, [r4]
 5231 00fc 516E     		ldr	r1, [r2, #100]
 5232 00fe 5366     		str	r3, [r2, #100]
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR4 */
 5233              		.loc 1 791 3 view .LVU1437
 5234 0100 2268     		ldr	r2, [r4]
 5235 0102 916E     		ldr	r1, [r2, #104]
 5236 0104 9366     		str	r3, [r2, #104]
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5237              		.loc 1 793 3 view .LVU1438
 5238 0106 2268     		ldr	r2, [r4]
 5239 0108 D16E     		ldr	r1, [r2, #108]
 5240 010a D366     		str	r3, [r2, #108]
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 186


 5241              		.loc 1 799 3 view .LVU1439
 5242 010c 2168     		ldr	r1, [r4]
 5243 010e D1F8A030 		ldr	r3, [r1, #160]
 5244 0112 5B4A     		ldr	r2, .L426+20
 5245 0114 1340     		ands	r3, r3, r2
 5246 0116 C1F8A030 		str	r3, [r1, #160]
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5247              		.loc 1 802 3 view .LVU1440
 5248 011a 2168     		ldr	r1, [r4]
 5249 011c D1F8A430 		ldr	r3, [r1, #164]
 5250 0120 1340     		ands	r3, r3, r2
 5251 0122 C1F8A430 		str	r3, [r1, #164]
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5252              		.loc 1 805 3 view .LVU1441
 5253 0126 2168     		ldr	r1, [r4]
 5254 0128 D1F8C030 		ldr	r3, [r1, #192]
 5255 012c 1340     		ands	r3, r3, r2
 5256 012e C1F8C030 		str	r3, [r1, #192]
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5257              		.loc 1 808 3 view .LVU1442
 5258 0132 2268     		ldr	r2, [r4]
 5259 0134 D2F8C430 		ldr	r3, [r2, #196]
 5260 0138 03F0F823 		and	r3, r3, #-134154240
 5261 013c C2F8C430 		str	r3, [r2, #196]
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 5262              		.loc 1 815 3 view .LVU1443
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 5263              		.loc 1 815 8 is_stmt 0 view .LVU1444
 5264 0140 2368     		ldr	r3, [r4]
 5265 0142 9A68     		ldr	r2, [r3, #8]
 5266 0144 02F00302 		and	r2, r2, #3
 5267 0148 012A     		cmp	r2, #1
 5268 014a 16D0     		beq	.L417
 5269              	.L386:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5270              		.loc 1 816 36 view .LVU1445
 5271 014c 4D4A     		ldr	r2, .L426+24
 5272 014e 9342     		cmp	r3, r2
 5273 0150 18D0     		beq	.L418
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5274              		.loc 1 816 8 discriminator 2 view .LVU1446
 5275 0152 4D4A     		ldr	r2, .L426+28
 5276 0154 9342     		cmp	r3, r2
 5277 0156 36D0     		beq	.L419
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5278              		.loc 1 816 8 discriminator 14 view .LVU1447
 5279 0158 4A4A     		ldr	r2, .L426+24
 5280 015a 9268     		ldr	r2, [r2, #8]
 5281 015c 02F00302 		and	r2, r2, #3
 5282 0160 012A     		cmp	r2, #1
 5283 0162 52D0     		beq	.L420
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5284              		.loc 1 816 8 view .LVU1448
 5285 0164 0022     		movs	r2, #0
 5286              	.L397:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5287              		.loc 1 816 8 discriminator 31 view .LVU1449
ARM GAS  /tmp/ccodtIyF.s 			page 187


 5288 0166 002A     		cmp	r2, #0
 5289 0168 5FD1     		bne	.L409
 5290              	.L396:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5291              		.loc 1 816 8 discriminator 33 view .LVU1450
 5292 016a 474A     		ldr	r2, .L426+28
 5293 016c 9268     		ldr	r2, [r2, #8]
 5294 016e 02F00302 		and	r2, r2, #3
 5295 0172 012A     		cmp	r2, #1
 5296 0174 52D0     		beq	.L421
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5297              		.loc 1 816 8 view .LVU1451
 5298 0176 0022     		movs	r2, #0
 5299 0178 58E0     		b	.L395
 5300              	.L417:
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 5301              		.loc 1 815 8 discriminator 1 view .LVU1452
 5302 017a 1A68     		ldr	r2, [r3]
 5303 017c 12F0010F 		tst	r2, #1
 5304 0180 63D1     		bne	.L387
 5305 0182 E3E7     		b	.L386
 5306              	.L418:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5307              		.loc 1 816 8 discriminator 1 view .LVU1453
 5308 0184 02F58072 		add	r2, r2, #256
 5309 0188 9268     		ldr	r2, [r2, #8]
 5310 018a 02F00302 		and	r2, r2, #3
 5311 018e 012A     		cmp	r2, #1
 5312 0190 09D0     		beq	.L422
 5313              	.L389:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5314              		.loc 1 816 8 discriminator 6 view .LVU1454
 5315 0192 3E4A     		ldr	r2, .L426+32
 5316 0194 9268     		ldr	r2, [r2, #8]
 5317 0196 02F00302 		and	r2, r2, #3
 5318 019a 012A     		cmp	r2, #1
 5319 019c 0AD0     		beq	.L423
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5320              		.loc 1 816 8 view .LVU1455
 5321 019e 0022     		movs	r2, #0
 5322              	.L390:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5323              		.loc 1 816 36 discriminator 12 view .LVU1456
 5324 01a0 82F00102 		eor	r2, r2, #1
 5325 01a4 44E0     		b	.L391
 5326              	.L422:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5327              		.loc 1 816 8 discriminator 3 view .LVU1457
 5328 01a6 384A     		ldr	r2, .L426+28
 5329 01a8 1268     		ldr	r2, [r2]
 5330 01aa 12F0010F 		tst	r2, #1
 5331 01ae F0D0     		beq	.L389
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5332              		.loc 1 816 8 view .LVU1458
 5333 01b0 0122     		movs	r2, #1
 5334 01b2 F5E7     		b	.L390
 5335              	.L423:
ARM GAS  /tmp/ccodtIyF.s 			page 188


 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5336              		.loc 1 816 8 discriminator 7 view .LVU1459
 5337 01b4 354A     		ldr	r2, .L426+32
 5338 01b6 1268     		ldr	r2, [r2]
 5339 01b8 12F0010F 		tst	r2, #1
 5340 01bc 01D1     		bne	.L402
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5341              		.loc 1 816 8 view .LVU1460
 5342 01be 0022     		movs	r2, #0
 5343 01c0 EEE7     		b	.L390
 5344              	.L402:
 5345 01c2 0122     		movs	r2, #1
 5346 01c4 ECE7     		b	.L390
 5347              	.L419:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5348              		.loc 1 816 8 discriminator 13 view .LVU1461
 5349 01c6 A2F58072 		sub	r2, r2, #256
 5350 01ca 9268     		ldr	r2, [r2, #8]
 5351 01cc 02F00302 		and	r2, r2, #3
 5352 01d0 012A     		cmp	r2, #1
 5353 01d2 0AD0     		beq	.L424
 5354              	.L393:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5355              		.loc 1 816 8 discriminator 18 view .LVU1462
 5356 01d4 2D4A     		ldr	r2, .L426+32
 5357 01d6 9268     		ldr	r2, [r2, #8]
 5358 01d8 02F00302 		and	r2, r2, #3
 5359 01dc 012A     		cmp	r2, #1
 5360 01de 0BD0     		beq	.L425
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5361              		.loc 1 816 8 view .LVU1463
 5362 01e0 0022     		movs	r2, #0
 5363              	.L394:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5364              		.loc 1 816 8 discriminator 24 view .LVU1464
 5365 01e2 002A     		cmp	r2, #0
 5366 01e4 C1D0     		beq	.L396
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5367              		.loc 1 816 8 view .LVU1465
 5368 01e6 0122     		movs	r2, #1
 5369 01e8 20E0     		b	.L395
 5370              	.L424:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5371              		.loc 1 816 8 discriminator 15 view .LVU1466
 5372 01ea 264A     		ldr	r2, .L426+24
 5373 01ec 1268     		ldr	r2, [r2]
 5374 01ee 12F0010F 		tst	r2, #1
 5375 01f2 EFD0     		beq	.L393
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5376              		.loc 1 816 8 view .LVU1467
 5377 01f4 0122     		movs	r2, #1
 5378 01f6 F4E7     		b	.L394
 5379              	.L425:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5380              		.loc 1 816 8 discriminator 19 view .LVU1468
 5381 01f8 244A     		ldr	r2, .L426+32
 5382 01fa 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccodtIyF.s 			page 189


 5383 01fc 12F0010F 		tst	r2, #1
 5384 0200 01D1     		bne	.L405
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5385              		.loc 1 816 8 view .LVU1469
 5386 0202 0022     		movs	r2, #0
 5387 0204 EDE7     		b	.L394
 5388              	.L405:
 5389 0206 0122     		movs	r2, #1
 5390 0208 EBE7     		b	.L394
 5391              	.L420:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5392              		.loc 1 816 8 discriminator 26 view .LVU1470
 5393 020a 1E4A     		ldr	r2, .L426+24
 5394 020c 1268     		ldr	r2, [r2]
 5395 020e 12F0010F 		tst	r2, #1
 5396 0212 01D1     		bne	.L408
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5397              		.loc 1 816 8 view .LVU1471
 5398 0214 0022     		movs	r2, #0
 5399 0216 A6E7     		b	.L397
 5400              	.L408:
 5401 0218 0122     		movs	r2, #1
 5402 021a A4E7     		b	.L397
 5403              	.L421:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5404              		.loc 1 816 8 discriminator 34 view .LVU1472
 5405 021c 1A4A     		ldr	r2, .L426+28
 5406 021e 1268     		ldr	r2, [r2]
 5407 0220 12F0010F 		tst	r2, #1
 5408 0224 1CD1     		bne	.L411
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5409              		.loc 1 816 8 view .LVU1473
 5410 0226 0022     		movs	r2, #0
 5411 0228 00E0     		b	.L395
 5412              	.L409:
 5413 022a 0122     		movs	r2, #1
 5414              	.L395:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5415              		.loc 1 816 36 discriminator 39 view .LVU1474
 5416 022c 82F00102 		eor	r2, r2, #1
 5417              	.L391:
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 5418              		.loc 1 815 40 view .LVU1475
 5419 0230 5AB1     		cbz	r2, .L387
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5420              		.loc 1 825 5 is_stmt 1 view .LVU1476
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5421              		.loc 1 825 7 is_stmt 0 view .LVU1477
 5422 0232 1449     		ldr	r1, .L426+24
 5423 0234 144A     		ldr	r2, .L426+28
 5424 0236 9342     		cmp	r3, r2
 5425 0238 18BF     		it	ne
 5426 023a 8B42     		cmpne	r3, r1
 5427 023c 12D1     		bne	.L412
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5428              		.loc 1 827 21 view .LVU1478
 5429 023e 02F50072 		add	r2, r2, #512
ARM GAS  /tmp/ccodtIyF.s 			page 190


 5430              	.L398:
 5431              	.LVL318:
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                   ADC_CCR_PRESC  |
 5432              		.loc 1 833 5 is_stmt 1 view .LVU1479
 5433 0242 9168     		ldr	r1, [r2, #8]
 5434 0244 124B     		ldr	r3, .L426+36
 5435 0246 0B40     		ands	r3, r3, r1
 5436 0248 9360     		str	r3, [r2, #8]
 5437              	.LVL319:
 5438              	.L387:
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5439              		.loc 1 855 3 view .LVU1480
 5440 024a 2046     		mov	r0, r4
 5441 024c FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5442              	.LVL320:
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5443              		.loc 1 858 3 view .LVU1481
 5444 0250 0020     		movs	r0, #0
 5445 0252 A065     		str	r0, [r4, #88]
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5446              		.loc 1 861 3 view .LVU1482
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5447              		.loc 1 861 38 is_stmt 0 view .LVU1483
 5448 0254 E065     		str	r0, [r4, #92]
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5449              		.loc 1 862 3 is_stmt 1 view .LVU1484
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5450              		.loc 1 862 38 is_stmt 0 view .LVU1485
 5451 0256 2066     		str	r0, [r4, #96]
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5452              		.loc 1 865 3 is_stmt 1 view .LVU1486
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5453              		.loc 1 865 15 is_stmt 0 view .LVU1487
 5454 0258 6065     		str	r0, [r4, #84]
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5455              		.loc 1 868 3 is_stmt 1 view .LVU1488
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5456              		.loc 1 868 3 view .LVU1489
 5457 025a 84F85000 		strb	r0, [r4, #80]
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5458              		.loc 1 872 3 view .LVU1490
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5459              		.loc 1 874 1 is_stmt 0 view .LVU1491
 5460 025e 10BD     		pop	{r4, pc}
 5461              	.LVL321:
 5462              	.L411:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5463              		.loc 1 816 8 view .LVU1492
 5464 0260 0122     		movs	r2, #1
 5465 0262 E3E7     		b	.L395
 5466              	.L412:
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5467              		.loc 1 831 21 view .LVU1493
 5468 0264 0B4A     		ldr	r2, .L426+40
 5469 0266 ECE7     		b	.L398
 5470              	.LVL322:
 5471              	.L399:
ARM GAS  /tmp/ccodtIyF.s 			page 191


 5472              	.LCFI29:
 5473              		.cfi_def_cfa_offset 0
 5474              		.cfi_restore 4
 5475              		.cfi_restore 14
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 5476              		.loc 1 678 13 view .LVU1494
 5477 0268 0120     		movs	r0, #1
 5478              	.LVL323:
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5479              		.loc 1 874 1 view .LVU1495
 5480 026a 7047     		bx	lr
 5481              	.L427:
 5482              		.align	2
 5483              	.L426:
 5484 026c 00F8FFFF 		.word	-2048
 5485 0270 1CF800FC 		.word	-67045348
 5486 0274 300882E0 		.word	-528349136
 5487 0278 200882E0 		.word	-528349152
 5488 027c 20F8FFFF 		.word	-2016
 5489 0280 0000F0FF 		.word	-1048576
 5490 0284 00200240 		.word	1073881088
 5491 0288 00210240 		.word	1073881344
 5492 028c 00600258 		.word	1476550656
 5493 0290 E03000FE 		.word	-33541920
 5494 0294 00630258 		.word	1476551424
 5495              		.cfi_endproc
 5496              	.LFE138:
 5498              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5499              		.align	1
 5500              		.global	HAL_ADC_Stop
 5501              		.syntax unified
 5502              		.thumb
 5503              		.thumb_func
 5504              		.fpu fpv5-d16
 5506              	HAL_ADC_Stop:
 5507              	.LVL324:
 5508              	.LFB142:
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5509              		.loc 1 1049 1 is_stmt 1 view -0
 5510              		.cfi_startproc
 5511              		@ args = 0, pretend = 0, frame = 0
 5512              		@ frame_needed = 0, uses_anonymous_args = 0
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5513              		.loc 1 1050 3 view .LVU1497
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5514              		.loc 1 1053 3 view .LVU1498
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5515              		.loc 1 1056 3 view .LVU1499
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5516              		.loc 1 1056 3 view .LVU1500
 5517 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5518 0004 012B     		cmp	r3, #1
 5519 0006 1BD0     		beq	.L431
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5520              		.loc 1 1049 1 is_stmt 0 discriminator 2 view .LVU1501
 5521 0008 10B5     		push	{r4, lr}
 5522              	.LCFI30:
ARM GAS  /tmp/ccodtIyF.s 			page 192


 5523              		.cfi_def_cfa_offset 8
 5524              		.cfi_offset 4, -8
 5525              		.cfi_offset 14, -4
 5526 000a 0446     		mov	r4, r0
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5527              		.loc 1 1056 3 is_stmt 1 discriminator 2 view .LVU1502
 5528 000c 0123     		movs	r3, #1
 5529 000e 80F85030 		strb	r3, [r0, #80]
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5530              		.loc 1 1059 3 discriminator 2 view .LVU1503
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5531              		.loc 1 1059 20 is_stmt 0 discriminator 2 view .LVU1504
 5532 0012 6C21     		movs	r1, #108
 5533 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5534              	.LVL325:
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5535              		.loc 1 1062 3 is_stmt 1 discriminator 2 view .LVU1505
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5536              		.loc 1 1062 6 is_stmt 0 discriminator 2 view .LVU1506
 5537 0018 0346     		mov	r3, r0
 5538 001a 20B1     		cbz	r0, .L436
 5539              	.L430:
 5540              	.LVL326:
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5541              		.loc 1 1077 3 is_stmt 1 view .LVU1507
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5542              		.loc 1 1077 3 view .LVU1508
 5543 001c 0022     		movs	r2, #0
 5544 001e 84F85020 		strb	r2, [r4, #80]
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5545              		.loc 1 1080 3 view .LVU1509
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5546              		.loc 1 1081 1 is_stmt 0 view .LVU1510
 5547 0022 1846     		mov	r0, r3
 5548 0024 10BD     		pop	{r4, pc}
 5549              	.LVL327:
 5550              	.L436:
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5551              		.loc 1 1065 5 is_stmt 1 view .LVU1511
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5552              		.loc 1 1065 22 is_stmt 0 view .LVU1512
 5553 0026 2046     		mov	r0, r4
 5554              	.LVL328:
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5555              		.loc 1 1065 22 view .LVU1513
 5556 0028 FFF7FEFF 		bl	ADC_Disable
 5557              	.LVL329:
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5558              		.loc 1 1068 5 is_stmt 1 view .LVU1514
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5559              		.loc 1 1068 8 is_stmt 0 view .LVU1515
 5560 002c 0346     		mov	r3, r0
 5561 002e 0028     		cmp	r0, #0
 5562 0030 F4D1     		bne	.L430
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5563              		.loc 1 1072 7 is_stmt 1 view .LVU1516
 5564 0032 616D     		ldr	r1, [r4, #84]
ARM GAS  /tmp/ccodtIyF.s 			page 193


 5565 0034 044A     		ldr	r2, .L437
 5566 0036 0A40     		ands	r2, r2, r1
 5567 0038 42F00102 		orr	r2, r2, #1
 5568 003c 6265     		str	r2, [r4, #84]
 5569 003e EDE7     		b	.L430
 5570              	.LVL330:
 5571              	.L431:
 5572              	.LCFI31:
 5573              		.cfi_def_cfa_offset 0
 5574              		.cfi_restore 4
 5575              		.cfi_restore 14
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5576              		.loc 1 1056 3 is_stmt 0 view .LVU1517
 5577 0040 0223     		movs	r3, #2
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5578              		.loc 1 1081 1 view .LVU1518
 5579 0042 1846     		mov	r0, r3
 5580              	.LVL331:
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5581              		.loc 1 1081 1 view .LVU1519
 5582 0044 7047     		bx	lr
 5583              	.L438:
 5584 0046 00BF     		.align	2
 5585              	.L437:
 5586 0048 FEEEFFFF 		.word	-4354
 5587              		.cfi_endproc
 5588              	.LFE142:
 5590              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5591              		.align	1
 5592              		.global	HAL_ADC_Stop_IT
 5593              		.syntax unified
 5594              		.thumb
 5595              		.thumb_func
 5596              		.fpu fpv5-d16
 5598              	HAL_ADC_Stop_IT:
 5599              	.LVL332:
 5600              	.LFB146:
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5601              		.loc 1 1570 1 is_stmt 1 view -0
 5602              		.cfi_startproc
 5603              		@ args = 0, pretend = 0, frame = 0
 5604              		@ frame_needed = 0, uses_anonymous_args = 0
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5605              		.loc 1 1571 3 view .LVU1521
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5606              		.loc 1 1574 3 view .LVU1522
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5607              		.loc 1 1577 3 view .LVU1523
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5608              		.loc 1 1577 3 view .LVU1524
 5609 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5610 0004 012B     		cmp	r3, #1
 5611 0006 20D0     		beq	.L442
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5612              		.loc 1 1570 1 is_stmt 0 discriminator 2 view .LVU1525
 5613 0008 10B5     		push	{r4, lr}
 5614              	.LCFI32:
ARM GAS  /tmp/ccodtIyF.s 			page 194


 5615              		.cfi_def_cfa_offset 8
 5616              		.cfi_offset 4, -8
 5617              		.cfi_offset 14, -4
 5618 000a 0446     		mov	r4, r0
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5619              		.loc 1 1577 3 is_stmt 1 discriminator 2 view .LVU1526
 5620 000c 0123     		movs	r3, #1
 5621 000e 80F85030 		strb	r3, [r0, #80]
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5622              		.loc 1 1580 3 discriminator 2 view .LVU1527
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5623              		.loc 1 1580 20 is_stmt 0 discriminator 2 view .LVU1528
 5624 0012 6C21     		movs	r1, #108
 5625 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5626              	.LVL333:
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5627              		.loc 1 1583 3 is_stmt 1 discriminator 2 view .LVU1529
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5628              		.loc 1 1583 6 is_stmt 0 discriminator 2 view .LVU1530
 5629 0018 0346     		mov	r3, r0
 5630 001a 20B1     		cbz	r0, .L447
 5631              	.L441:
 5632              	.LVL334:
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5633              		.loc 1 1603 3 is_stmt 1 view .LVU1531
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5634              		.loc 1 1603 3 view .LVU1532
 5635 001c 0022     		movs	r2, #0
 5636 001e 84F85020 		strb	r2, [r4, #80]
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5637              		.loc 1 1606 3 view .LVU1533
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5638              		.loc 1 1607 1 is_stmt 0 view .LVU1534
 5639 0022 1846     		mov	r0, r3
 5640 0024 10BD     		pop	{r4, pc}
 5641              	.LVL335:
 5642              	.L447:
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5643              		.loc 1 1587 5 is_stmt 1 view .LVU1535
 5644 0026 2268     		ldr	r2, [r4]
 5645 0028 5368     		ldr	r3, [r2, #4]
 5646 002a 23F01C03 		bic	r3, r3, #28
 5647 002e 5360     		str	r3, [r2, #4]
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5648              		.loc 1 1590 5 view .LVU1536
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5649              		.loc 1 1590 22 is_stmt 0 view .LVU1537
 5650 0030 2046     		mov	r0, r4
 5651              	.LVL336:
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5652              		.loc 1 1590 22 view .LVU1538
 5653 0032 FFF7FEFF 		bl	ADC_Disable
 5654              	.LVL337:
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5655              		.loc 1 1593 5 is_stmt 1 view .LVU1539
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5656              		.loc 1 1593 8 is_stmt 0 view .LVU1540
ARM GAS  /tmp/ccodtIyF.s 			page 195


 5657 0036 0346     		mov	r3, r0
 5658 0038 0028     		cmp	r0, #0
 5659 003a EFD1     		bne	.L441
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         (HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY),
 5660              		.loc 1 1596 7 is_stmt 1 view .LVU1541
 5661 003c 616D     		ldr	r1, [r4, #84]
 5662 003e 044A     		ldr	r2, .L448
 5663 0040 0A40     		ands	r2, r2, r1
 5664 0042 42F00102 		orr	r2, r2, #1
 5665 0046 6265     		str	r2, [r4, #84]
 5666 0048 E8E7     		b	.L441
 5667              	.LVL338:
 5668              	.L442:
 5669              	.LCFI33:
 5670              		.cfi_def_cfa_offset 0
 5671              		.cfi_restore 4
 5672              		.cfi_restore 14
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5673              		.loc 1 1577 3 is_stmt 0 view .LVU1542
 5674 004a 0223     		movs	r3, #2
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5675              		.loc 1 1607 1 view .LVU1543
 5676 004c 1846     		mov	r0, r3
 5677              	.LVL339:
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5678              		.loc 1 1607 1 view .LVU1544
 5679 004e 7047     		bx	lr
 5680              	.L449:
 5681              		.align	2
 5682              	.L448:
 5683 0050 FEEEFFFF 		.word	-4354
 5684              		.cfi_endproc
 5685              	.LFE146:
 5687              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5688              		.align	1
 5689              		.global	HAL_ADC_Stop_DMA
 5690              		.syntax unified
 5691              		.thumb
 5692              		.thumb_func
 5693              		.fpu fpv5-d16
 5695              	HAL_ADC_Stop_DMA:
 5696              	.LVL340:
 5697              	.LFB148:
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5698              		.loc 1 1742 1 is_stmt 1 view -0
 5699              		.cfi_startproc
 5700              		@ args = 0, pretend = 0, frame = 0
 5701              		@ frame_needed = 0, uses_anonymous_args = 0
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5702              		.loc 1 1742 1 is_stmt 0 view .LVU1546
 5703 0000 38B5     		push	{r3, r4, r5, lr}
 5704              	.LCFI34:
 5705              		.cfi_def_cfa_offset 16
 5706              		.cfi_offset 3, -16
 5707              		.cfi_offset 4, -12
 5708              		.cfi_offset 5, -8
 5709              		.cfi_offset 14, -4
ARM GAS  /tmp/ccodtIyF.s 			page 196


1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5710              		.loc 1 1743 3 is_stmt 1 view .LVU1547
 5711              	.LVL341:
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5712              		.loc 1 1746 3 view .LVU1548
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5713              		.loc 1 1749 3 view .LVU1549
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5714              		.loc 1 1749 3 view .LVU1550
 5715 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5716 0006 012B     		cmp	r3, #1
 5717 0008 32D0     		beq	.L456
 5718 000a 0446     		mov	r4, r0
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5719              		.loc 1 1749 3 discriminator 2 view .LVU1551
 5720 000c 0123     		movs	r3, #1
 5721 000e 80F85030 		strb	r3, [r0, #80]
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5722              		.loc 1 1752 3 discriminator 2 view .LVU1552
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5723              		.loc 1 1752 20 is_stmt 0 discriminator 2 view .LVU1553
 5724 0012 6C21     		movs	r1, #108
 5725 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5726              	.LVL342:
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5727              		.loc 1 1755 3 is_stmt 1 discriminator 2 view .LVU1554
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5728              		.loc 1 1755 6 is_stmt 0 discriminator 2 view .LVU1555
 5729 0018 0546     		mov	r5, r0
 5730 001a 20B1     		cbz	r0, .L458
 5731              	.LVL343:
 5732              	.L452:
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5733              		.loc 1 1798 3 is_stmt 1 view .LVU1556
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5734              		.loc 1 1798 3 view .LVU1557
 5735 001c 0023     		movs	r3, #0
 5736 001e 84F85030 		strb	r3, [r4, #80]
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5737              		.loc 1 1801 3 view .LVU1558
 5738              	.LVL344:
 5739              	.L451:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5740              		.loc 1 1802 1 is_stmt 0 view .LVU1559
 5741 0022 2846     		mov	r0, r5
 5742 0024 38BD     		pop	{r3, r4, r5, pc}
 5743              	.LVL345:
 5744              	.L458:
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5745              		.loc 1 1758 5 is_stmt 1 view .LVU1560
 5746 0026 2268     		ldr	r2, [r4]
 5747 0028 D368     		ldr	r3, [r2, #12]
 5748 002a 23F00303 		bic	r3, r3, #3
 5749 002e D360     		str	r3, [r2, #12]
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5750              		.loc 1 1762 5 view .LVU1561
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/ccodtIyF.s 			page 197


 5751              		.loc 1 1762 22 is_stmt 0 view .LVU1562
 5752 0030 E06C     		ldr	r0, [r4, #76]
 5753              	.LVL346:
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5754              		.loc 1 1762 22 view .LVU1563
 5755 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 5756              	.LVL347:
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5757              		.loc 1 1765 5 is_stmt 1 view .LVU1564
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5758              		.loc 1 1765 8 is_stmt 0 view .LVU1565
 5759 0036 0546     		mov	r5, r0
 5760 0038 18B1     		cbz	r0, .L453
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5761              		.loc 1 1768 7 is_stmt 1 view .LVU1566
 5762 003a 636D     		ldr	r3, [r4, #84]
 5763 003c 43F01003 		orr	r3, r3, #16
 5764 0040 6365     		str	r3, [r4, #84]
 5765              	.L453:
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5766              		.loc 1 1772 5 view .LVU1567
 5767 0042 2268     		ldr	r2, [r4]
 5768 0044 5368     		ldr	r3, [r2, #4]
 5769 0046 23F01003 		bic	r3, r3, #16
 5770 004a 5360     		str	r3, [r2, #4]
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5771              		.loc 1 1777 5 view .LVU1568
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5772              		.loc 1 1777 8 is_stmt 0 view .LVU1569
 5773 004c 65B9     		cbnz	r5, .L454
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5774              		.loc 1 1779 7 is_stmt 1 view .LVU1570
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5775              		.loc 1 1779 24 is_stmt 0 view .LVU1571
 5776 004e 2046     		mov	r0, r4
 5777              	.LVL348:
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5778              		.loc 1 1779 24 view .LVU1572
 5779 0050 FFF7FEFF 		bl	ADC_Disable
 5780              	.LVL349:
 5781 0054 0546     		mov	r5, r0
 5782              	.LVL350:
 5783              	.L455:
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5784              		.loc 1 1787 5 is_stmt 1 view .LVU1573
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5785              		.loc 1 1787 8 is_stmt 0 view .LVU1574
 5786 0056 002D     		cmp	r5, #0
 5787 0058 E0D1     		bne	.L452
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         (HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY),
 5788              		.loc 1 1790 7 is_stmt 1 view .LVU1575
 5789 005a 626D     		ldr	r2, [r4, #84]
 5790 005c 054B     		ldr	r3, .L459
 5791 005e 1340     		ands	r3, r3, r2
 5792 0060 43F00103 		orr	r3, r3, #1
 5793 0064 6365     		str	r3, [r4, #84]
 5794 0066 D9E7     		b	.L452
ARM GAS  /tmp/ccodtIyF.s 			page 198


 5795              	.LVL351:
 5796              	.L454:
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5797              		.loc 1 1783 7 view .LVU1576
 5798 0068 2046     		mov	r0, r4
 5799              	.LVL352:
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5800              		.loc 1 1783 7 is_stmt 0 view .LVU1577
 5801 006a FFF7FEFF 		bl	ADC_Disable
 5802              	.LVL353:
 5803 006e F2E7     		b	.L455
 5804              	.LVL354:
 5805              	.L456:
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5806              		.loc 1 1749 3 view .LVU1578
 5807 0070 0225     		movs	r5, #2
 5808 0072 D6E7     		b	.L451
 5809              	.L460:
 5810              		.align	2
 5811              	.L459:
 5812 0074 FEEEFFFF 		.word	-4354
 5813              		.cfi_endproc
 5814              	.LFE148:
 5816              		.text
 5817              	.Letext0:
 5818              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5819              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5820              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 5821              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 5822              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 5823              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 5824              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 5825              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
 5826              		.file 11 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 5827              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 5828              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 5829              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 5830              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 5831              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 5832              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccodtIyF.s 			page 199


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_adc.c
     /tmp/ccodtIyF.s:17     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccodtIyF.s:25     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccodtIyF.s:41     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccodtIyF.s:48     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccodtIyF.s:681    .text.HAL_ADC_Init:00000000000002dc $d
     /tmp/ccodtIyF.s:694    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccodtIyF.s:701    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccodtIyF.s:716    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccodtIyF.s:723    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccodtIyF.s:1024   .text.HAL_ADC_PollForConversion:0000000000000158 $d
     /tmp/ccodtIyF.s:1032   .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccodtIyF.s:1039   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccodtIyF.s:1218   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccodtIyF.s:1225   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccodtIyF.s:1246   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccodtIyF.s:1253   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccodtIyF.s:1268   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccodtIyF.s:1275   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccodtIyF.s:1290   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccodtIyF.s:1297   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccodtIyF.s:1324   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccodtIyF.s:1331   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccodtIyF.s:1346   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccodtIyF.s:1353   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccodtIyF.s:1368   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccodtIyF.s:1375   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccodtIyF.s:1919   .text.HAL_ADC_IRQHandler:00000000000002e8 $d
     /tmp/ccodtIyF.s:1929   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccodtIyF.s:1936   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccodtIyF.s:2042   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccodtIyF.s:2049   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccodtIyF.s:2083   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccodtIyF.s:2090   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccodtIyF.s:2300   .text.HAL_ADC_ConfigChannel:00000000000000d0 $d
     /tmp/ccodtIyF.s:2305   .text.HAL_ADC_ConfigChannel:00000000000000d8 $t
     /tmp/ccodtIyF.s:3221   .text.HAL_ADC_ConfigChannel:00000000000004d4 $d
     /tmp/ccodtIyF.s:3227   .text.HAL_ADC_ConfigChannel:00000000000004e0 $t
     /tmp/ccodtIyF.s:3436   .text.HAL_ADC_ConfigChannel:00000000000005ec $d
     /tmp/ccodtIyF.s:3445   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccodtIyF.s:3452   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccodtIyF.s:3806   .text.HAL_ADC_AnalogWDGConfig:00000000000001a4 $d
     /tmp/ccodtIyF.s:3812   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccodtIyF.s:3819   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccodtIyF.s:3838   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccodtIyF.s:3845   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccodtIyF.s:3864   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccodtIyF.s:3871   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccodtIyF.s:4082   .text.ADC_ConversionStop:00000000000000d4 $d
     /tmp/ccodtIyF.s:4087   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccodtIyF.s:4094   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccodtIyF.s:4207   .text.ADC_Enable:000000000000007c $d
     /tmp/ccodtIyF.s:4212   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccodtIyF.s:4219   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccodtIyF.s:4417   .text.HAL_ADC_Start:0000000000000104 $d
     /tmp/ccodtIyF.s:4426   .text.HAL_ADC_Start_IT:0000000000000000 $t
ARM GAS  /tmp/ccodtIyF.s 			page 200


     /tmp/ccodtIyF.s:4433   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccodtIyF.s:4726   .text.HAL_ADC_Start_IT:0000000000000198 $d
     /tmp/ccodtIyF.s:4735   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccodtIyF.s:4742   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccodtIyF.s:4942   .text.HAL_ADC_Start_DMA:00000000000000fc $d
     /tmp/ccodtIyF.s:4953   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccodtIyF.s:4960   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccodtIyF.s:5081   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccodtIyF.s:5088   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccodtIyF.s:5484   .text.HAL_ADC_DeInit:000000000000026c $d
     /tmp/ccodtIyF.s:5499   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccodtIyF.s:5506   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccodtIyF.s:5586   .text.HAL_ADC_Stop:0000000000000048 $d
     /tmp/ccodtIyF.s:5591   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccodtIyF.s:5598   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccodtIyF.s:5683   .text.HAL_ADC_Stop_IT:0000000000000050 $d
     /tmp/ccodtIyF.s:5688   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccodtIyF.s:5695   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccodtIyF.s:5812   .text.HAL_ADC_Stop_DMA:0000000000000074 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
