ARM GAS  /tmp/ccPgz8Sk.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"adc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_ADC1_Init,"ax",%progbits
  17              		.align	1
  18              		.global	MX_ADC1_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	MX_ADC1_Init:
  26              	.LFB137:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccPgz8Sk.s 			page 2


  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** 
  45:Src/adc.c     **** /* USER CODE BEGIN 0 */
  46:Src/adc.c     **** 
  47:Src/adc.c     **** /* USER CODE END 0 */
  48:Src/adc.c     **** 
  49:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  50:Src/adc.c     **** 
  51:Src/adc.c     **** /* ADC1 init function */
  52:Src/adc.c     **** void MX_ADC1_Init(void)
  53:Src/adc.c     **** {
  28              		.loc 1 53 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
  54:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  39              		.loc 1 54 3 view .LVU1
  55:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  40              		.loc 1 55 3 view .LVU2
  56:Src/adc.c     **** 
  57:Src/adc.c     ****     /**Common config 
  58:Src/adc.c     ****     */
  59:Src/adc.c     ****   hadc1.Instance = ADC1;
  41              		.loc 1 59 3 view .LVU3
  42              		.loc 1 59 18 is_stmt 0 view .LVU4
  43 0004 2048     		ldr	r0, .L9
  44 0006 214B     		ldr	r3, .L9+4
  45 0008 0360     		str	r3, [r0]
  60:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  46              		.loc 1 60 3 is_stmt 1 view .LVU5
  47              		.loc 1 60 29 is_stmt 0 view .LVU6
  48 000a 0023     		movs	r3, #0
  49 000c 4360     		str	r3, [r0, #4]
  61:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
  50              		.loc 1 61 3 is_stmt 1 view .LVU7
  51              		.loc 1 61 25 is_stmt 0 view .LVU8
  52 000e 8360     		str	r3, [r0, #8]
  62:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  53              		.loc 1 62 3 is_stmt 1 view .LVU9
ARM GAS  /tmp/ccPgz8Sk.s 			page 3


  54              		.loc 1 62 27 is_stmt 0 view .LVU10
  55 0010 C360     		str	r3, [r0, #12]
  63:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  56              		.loc 1 63 3 is_stmt 1 view .LVU11
  57              		.loc 1 63 27 is_stmt 0 view .LVU12
  58 0012 0422     		movs	r2, #4
  59 0014 0261     		str	r2, [r0, #16]
  64:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  60              		.loc 1 64 3 is_stmt 1 view .LVU13
  61              		.loc 1 64 31 is_stmt 0 view .LVU14
  62 0016 0375     		strb	r3, [r0, #20]
  65:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  63              		.loc 1 65 3 is_stmt 1 view .LVU15
  64              		.loc 1 65 33 is_stmt 0 view .LVU16
  65 0018 4375     		strb	r3, [r0, #21]
  66:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  66              		.loc 1 66 3 is_stmt 1 view .LVU17
  67              		.loc 1 66 30 is_stmt 0 view .LVU18
  68 001a 0122     		movs	r2, #1
  69 001c 8261     		str	r2, [r0, #24]
  67:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  70              		.loc 1 67 3 is_stmt 1 view .LVU19
  71              		.loc 1 67 36 is_stmt 0 view .LVU20
  72 001e 0377     		strb	r3, [r0, #28]
  68:Src/adc.c     ****   hadc1.Init.NbrOfDiscConversion = 1;
  73              		.loc 1 68 3 is_stmt 1 view .LVU21
  74              		.loc 1 68 34 is_stmt 0 view .LVU22
  75 0020 0262     		str	r2, [r0, #32]
  69:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  76              		.loc 1 69 3 is_stmt 1 view .LVU23
  77              		.loc 1 69 31 is_stmt 0 view .LVU24
  78 0022 4262     		str	r2, [r0, #36]
  70:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  79              		.loc 1 70 3 is_stmt 1 view .LVU25
  80              		.loc 1 70 35 is_stmt 0 view .LVU26
  81 0024 8362     		str	r3, [r0, #40]
  71:Src/adc.c     ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
  82              		.loc 1 71 3 is_stmt 1 view .LVU27
  83              		.loc 1 71 39 is_stmt 0 view .LVU28
  84 0026 C362     		str	r3, [r0, #44]
  72:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  85              		.loc 1 72 3 is_stmt 1 view .LVU29
  86              		.loc 1 72 22 is_stmt 0 view .LVU30
  87 0028 0363     		str	r3, [r0, #48]
  73:Src/adc.c     ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
  88              		.loc 1 73 3 is_stmt 1 view .LVU31
  89              		.loc 1 73 27 is_stmt 0 view .LVU32
  90 002a 4363     		str	r3, [r0, #52]
  74:Src/adc.c     ****   hadc1.Init.BoostMode = ENABLE;
  91              		.loc 1 74 3 is_stmt 1 view .LVU33
  92              		.loc 1 74 24 is_stmt 0 view .LVU34
  93 002c 80F83820 		strb	r2, [r0, #56]
  75:Src/adc.c     ****   hadc1.Init.OversamplingMode = DISABLE;
  94              		.loc 1 75 3 is_stmt 1 view .LVU35
  95              		.loc 1 75 31 is_stmt 0 view .LVU36
  96 0030 80F83930 		strb	r3, [r0, #57]
  76:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
ARM GAS  /tmp/ccPgz8Sk.s 			page 4


  97              		.loc 1 76 3 is_stmt 1 view .LVU37
  98              		.loc 1 76 7 is_stmt 0 view .LVU38
  99 0034 FFF7FEFF 		bl	HAL_ADC_Init
 100              	.LVL0:
 101              		.loc 1 76 6 view .LVU39
 102 0038 B8B9     		cbnz	r0, .L6
 103              	.L2:
  77:Src/adc.c     ****   {
  78:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  79:Src/adc.c     ****   }
  80:Src/adc.c     **** 
  81:Src/adc.c     ****     /**Configure the ADC multi-mode 
  82:Src/adc.c     ****     */
  83:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 104              		.loc 1 83 3 is_stmt 1 view .LVU40
 105              		.loc 1 83 18 is_stmt 0 view .LVU41
 106 003a 0023     		movs	r3, #0
 107 003c 0793     		str	r3, [sp, #28]
  84:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 108              		.loc 1 84 3 is_stmt 1 view .LVU42
 109              		.loc 1 84 7 is_stmt 0 view .LVU43
 110 003e 07A9     		add	r1, sp, #28
 111 0040 1148     		ldr	r0, .L9
 112 0042 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 113              	.LVL1:
 114              		.loc 1 84 6 view .LVU44
 115 0046 A8B9     		cbnz	r0, .L7
 116              	.L3:
  85:Src/adc.c     ****   {
  86:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  87:Src/adc.c     ****   }
  88:Src/adc.c     **** 
  89:Src/adc.c     ****     /**Configure Regular Channel 
  90:Src/adc.c     ****     */
  91:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 117              		.loc 1 91 3 is_stmt 1 view .LVU45
 118              		.loc 1 91 19 is_stmt 0 view .LVU46
 119 0048 0223     		movs	r3, #2
 120 004a 0093     		str	r3, [sp]
  92:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 121              		.loc 1 92 3 is_stmt 1 view .LVU47
 122              		.loc 1 92 16 is_stmt 0 view .LVU48
 123 004c 0123     		movs	r3, #1
 124 004e 0193     		str	r3, [sp, #4]
  93:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 125              		.loc 1 93 3 is_stmt 1 view .LVU49
 126              		.loc 1 93 24 is_stmt 0 view .LVU50
 127 0050 0023     		movs	r3, #0
 128 0052 0293     		str	r3, [sp, #8]
  94:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 129              		.loc 1 94 3 is_stmt 1 view .LVU51
 130              		.loc 1 94 22 is_stmt 0 view .LVU52
 131 0054 0393     		str	r3, [sp, #12]
  95:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 132              		.loc 1 95 3 is_stmt 1 view .LVU53
 133              		.loc 1 95 24 is_stmt 0 view .LVU54
 134 0056 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccPgz8Sk.s 			page 5


  96:Src/adc.c     ****   sConfig.Offset = 0;
 135              		.loc 1 96 3 is_stmt 1 view .LVU55
 136              		.loc 1 96 18 is_stmt 0 view .LVU56
 137 0058 0593     		str	r3, [sp, #20]
  97:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 138              		.loc 1 97 3 is_stmt 1 view .LVU57
 139              		.loc 1 97 7 is_stmt 0 view .LVU58
 140 005a 6946     		mov	r1, sp
 141 005c 0A48     		ldr	r0, .L9
 142 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 143              	.LVL2:
 144              		.loc 1 97 6 view .LVU59
 145 0062 60B9     		cbnz	r0, .L8
 146              	.L1:
  98:Src/adc.c     ****   {
  99:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 100:Src/adc.c     ****   }
 101:Src/adc.c     **** 
 102:Src/adc.c     **** }
 147              		.loc 1 102 1 view .LVU60
 148 0064 0BB0     		add	sp, sp, #44
 149              	.LCFI2:
 150              		.cfi_remember_state
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0066 5DF804FB 		ldr	pc, [sp], #4
 154              	.L6:
 155              	.LCFI3:
 156              		.cfi_restore_state
  78:Src/adc.c     ****   }
 157              		.loc 1 78 5 is_stmt 1 view .LVU61
 158 006a 4E21     		movs	r1, #78
 159 006c 0848     		ldr	r0, .L9+8
 160 006e FFF7FEFF 		bl	_Error_Handler
 161              	.LVL3:
 162 0072 E2E7     		b	.L2
 163              	.L7:
  86:Src/adc.c     ****   }
 164              		.loc 1 86 5 view .LVU62
 165 0074 5621     		movs	r1, #86
 166 0076 0648     		ldr	r0, .L9+8
 167 0078 FFF7FEFF 		bl	_Error_Handler
 168              	.LVL4:
 169 007c E4E7     		b	.L3
 170              	.L8:
  99:Src/adc.c     ****   }
 171              		.loc 1 99 5 view .LVU63
 172 007e 6321     		movs	r1, #99
 173 0080 0348     		ldr	r0, .L9+8
 174 0082 FFF7FEFF 		bl	_Error_Handler
 175              	.LVL5:
 176              		.loc 1 102 1 is_stmt 0 view .LVU64
 177 0086 EDE7     		b	.L1
 178              	.L10:
 179              		.align	2
 180              	.L9:
 181 0088 00000000 		.word	hadc1
ARM GAS  /tmp/ccPgz8Sk.s 			page 6


 182 008c 00200240 		.word	1073881088
 183 0090 00000000 		.word	.LC0
 184              		.cfi_endproc
 185              	.LFE137:
 187              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 188              		.align	1
 189              		.global	HAL_ADC_MspInit
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv5-d16
 195              	HAL_ADC_MspInit:
 196              	.LVL6:
 197              	.LFB138:
 103:Src/adc.c     **** 
 104:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 105:Src/adc.c     **** {
 198              		.loc 1 105 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 24
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Src/adc.c     **** 
 107:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 202              		.loc 1 107 3 view .LVU66
 108:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 203              		.loc 1 108 3 view .LVU67
 204              		.loc 1 108 15 is_stmt 0 view .LVU68
 205 0000 0268     		ldr	r2, [r0]
 206              		.loc 1 108 5 view .LVU69
 207 0002 104B     		ldr	r3, .L18
 208 0004 9A42     		cmp	r2, r3
 209 0006 00D0     		beq	.L17
 210 0008 7047     		bx	lr
 211              	.L17:
 105:Src/adc.c     **** 
 212              		.loc 1 105 1 view .LVU70
 213 000a 00B5     		push	{lr}
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 14, -4
 217 000c 87B0     		sub	sp, sp, #28
 218              	.LCFI5:
 219              		.cfi_def_cfa_offset 32
 109:Src/adc.c     ****   {
 110:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 111:Src/adc.c     **** 
 112:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 113:Src/adc.c     ****     /* ADC1 clock enable */
 114:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_ENABLE();
 220              		.loc 1 114 5 is_stmt 1 view .LVU71
 221              	.LBB2:
 222              		.loc 1 114 5 view .LVU72
 223              		.loc 1 114 5 view .LVU73
 224 000e 0E4B     		ldr	r3, .L18+4
 225 0010 D3F8D820 		ldr	r2, [r3, #216]
 226 0014 42F02002 		orr	r2, r2, #32
 227 0018 C3F8D820 		str	r2, [r3, #216]
ARM GAS  /tmp/ccPgz8Sk.s 			page 7


 228              		.loc 1 114 5 view .LVU74
 229 001c D3F8D830 		ldr	r3, [r3, #216]
 230 0020 03F02003 		and	r3, r3, #32
 231 0024 0093     		str	r3, [sp]
 232              		.loc 1 114 5 view .LVU75
 233 0026 009B     		ldr	r3, [sp]
 234              	.LBE2:
 115:Src/adc.c     ****   
 116:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 117:Src/adc.c     ****     PF11     ------> ADC1_INP2 
 118:Src/adc.c     ****     */
 119:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 235              		.loc 1 119 5 view .LVU76
 236              		.loc 1 119 25 is_stmt 0 view .LVU77
 237 0028 4FF40063 		mov	r3, #2048
 238 002c 0193     		str	r3, [sp, #4]
 120:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 239              		.loc 1 120 5 is_stmt 1 view .LVU78
 240              		.loc 1 120 26 is_stmt 0 view .LVU79
 241 002e 0323     		movs	r3, #3
 242 0030 0293     		str	r3, [sp, #8]
 121:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 243              		.loc 1 121 5 is_stmt 1 view .LVU80
 244              		.loc 1 121 26 is_stmt 0 view .LVU81
 245 0032 0023     		movs	r3, #0
 246 0034 0393     		str	r3, [sp, #12]
 122:Src/adc.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 247              		.loc 1 122 5 is_stmt 1 view .LVU82
 248 0036 01A9     		add	r1, sp, #4
 249 0038 0448     		ldr	r0, .L18+8
 250              	.LVL7:
 251              		.loc 1 122 5 is_stmt 0 view .LVU83
 252 003a FFF7FEFF 		bl	HAL_GPIO_Init
 253              	.LVL8:
 123:Src/adc.c     **** 
 124:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 125:Src/adc.c     **** 
 126:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 127:Src/adc.c     ****   }
 128:Src/adc.c     **** }
 254              		.loc 1 128 1 view .LVU84
 255 003e 07B0     		add	sp, sp, #28
 256              	.LCFI6:
 257              		.cfi_def_cfa_offset 4
 258              		@ sp needed
 259 0040 5DF804FB 		ldr	pc, [sp], #4
 260              	.L19:
 261              		.align	2
 262              	.L18:
 263 0044 00200240 		.word	1073881088
 264 0048 00440258 		.word	1476543488
 265 004c 00140258 		.word	1476531200
 266              		.cfi_endproc
 267              	.LFE138:
 269              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 270              		.align	1
 271              		.global	HAL_ADC_MspDeInit
ARM GAS  /tmp/ccPgz8Sk.s 			page 8


 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv5-d16
 277              	HAL_ADC_MspDeInit:
 278              	.LVL9:
 279              	.LFB139:
 129:Src/adc.c     **** 
 130:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 131:Src/adc.c     **** {
 280              		.loc 1 131 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		.loc 1 131 1 is_stmt 0 view .LVU86
 285 0000 08B5     		push	{r3, lr}
 286              	.LCFI7:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 3, -8
 289              		.cfi_offset 14, -4
 132:Src/adc.c     **** 
 133:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 290              		.loc 1 133 3 is_stmt 1 view .LVU87
 291              		.loc 1 133 15 is_stmt 0 view .LVU88
 292 0002 0268     		ldr	r2, [r0]
 293              		.loc 1 133 5 view .LVU89
 294 0004 084B     		ldr	r3, .L24
 295 0006 9A42     		cmp	r2, r3
 296 0008 00D0     		beq	.L23
 297              	.LVL10:
 298              	.L20:
 134:Src/adc.c     ****   {
 135:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 136:Src/adc.c     **** 
 137:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 138:Src/adc.c     ****     /* Peripheral clock disable */
 139:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_DISABLE();
 140:Src/adc.c     ****   
 141:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 142:Src/adc.c     ****     PF11     ------> ADC1_INP2 
 143:Src/adc.c     ****     */
 144:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOF, GPIO_PIN_11);
 145:Src/adc.c     **** 
 146:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 147:Src/adc.c     **** 
 148:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 149:Src/adc.c     ****   }
 150:Src/adc.c     **** } 
 299              		.loc 1 150 1 view .LVU90
 300 000a 08BD     		pop	{r3, pc}
 301              	.LVL11:
 302              	.L23:
 139:Src/adc.c     ****   
 303              		.loc 1 139 5 is_stmt 1 view .LVU91
 304 000c 074A     		ldr	r2, .L24+4
 305 000e D2F8D830 		ldr	r3, [r2, #216]
 306 0012 23F02003 		bic	r3, r3, #32
ARM GAS  /tmp/ccPgz8Sk.s 			page 9


 307 0016 C2F8D830 		str	r3, [r2, #216]
 144:Src/adc.c     **** 
 308              		.loc 1 144 5 view .LVU92
 309 001a 4FF40061 		mov	r1, #2048
 310 001e 0448     		ldr	r0, .L24+8
 311              	.LVL12:
 144:Src/adc.c     **** 
 312              		.loc 1 144 5 is_stmt 0 view .LVU93
 313 0020 FFF7FEFF 		bl	HAL_GPIO_DeInit
 314              	.LVL13:
 315              		.loc 1 150 1 view .LVU94
 316 0024 F1E7     		b	.L20
 317              	.L25:
 318 0026 00BF     		.align	2
 319              	.L24:
 320 0028 00200240 		.word	1073881088
 321 002c 00440258 		.word	1476543488
 322 0030 00140258 		.word	1476531200
 323              		.cfi_endproc
 324              	.LFE139:
 326              		.comm	hadc1,100,4
 327              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 328              		.align	2
 329              	.LC0:
 330 0000 5372632F 		.ascii	"Src/adc.c\000"
 330      6164632E 
 330      6300
 331              		.text
 332              	.Letext0:
 333              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 334              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 335              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 336              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 337              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 338              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 339              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 340              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 341              		.file 10 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 342              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 343              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 344              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 345              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 346              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 347              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 348              		.file 17 "Inc/adc.h"
ARM GAS  /tmp/ccPgz8Sk.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccPgz8Sk.s:17     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccPgz8Sk.s:25     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccPgz8Sk.s:181    .text.MX_ADC1_Init:0000000000000088 $d
                            *COM*:0000000000000064 hadc1
     /tmp/ccPgz8Sk.s:188    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccPgz8Sk.s:195    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccPgz8Sk.s:263    .text.HAL_ADC_MspInit:0000000000000044 $d
     /tmp/ccPgz8Sk.s:270    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccPgz8Sk.s:277    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccPgz8Sk.s:320    .text.HAL_ADC_MspDeInit:0000000000000028 $d
     /tmp/ccPgz8Sk.s:328    .rodata.MX_ADC1_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
